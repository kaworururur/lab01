/home/kaworu/boost_1_69_0/boost/log/sinks/syslog_backend.hpp:    BOOST_LOG_API void set_local_address(boost::asio::ip::address const& addr, unsigned short port = 514);
/home/kaworu/boost_1_69_0/boost/log/sinks/syslog_backend.hpp:    BOOST_LOG_API void set_target_address(boost::asio::ip::address const& addr, unsigned short port = 514);
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/ssl_stream.hpp:    To use this template with a `boost::asio::ip::tcp::socket`, you would write:
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/ssl_stream.hpp:        boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/ssl_stream.hpp:        boost::asio::ssl::context ctx{boost::asio::ssl::context::sslv23};
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/ssl_stream.hpp:        boost::beast::ssl_stream<boost::asio:ip::tcp::socket> sock{ioc, ctx};
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/ssl_stream.hpp:    In addition to providing an interface identical to `boost::asio::ssl::stream`,
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/ssl_stream.hpp:        limitation of `boost::asio::ssl::stream` when writing buffer sequences
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/ssl_stream.hpp:    : public boost::asio::ssl::stream_base
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/ssl_stream.hpp:    using ssl_stream_type = boost::asio::ssl::stream<NextLayer>;
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/ssl_stream.hpp:    boost::asio::ssl::context* ctx_;
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/ssl_stream.hpp:        boost::asio::ssl::context& ctx)
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/ssl_stream.hpp:        boost::beast::ssl_stream<boost::asio:ip::tcp::socket> ss{ioc, ctx};
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/ssl_stream.hpp:    set_verify_mode(boost::asio::ssl::verify_mode v)
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/ssl_stream.hpp:    set_verify_mode(boost::asio::ssl::verify_mode v,
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/ssl_stream.hpp:          boost::asio::verify_context& ctx // The peer certificate and other context.
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/ssl_stream.hpp:        peer. Consider using the `boost::asio::write` function if you need to
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/ssl_stream.hpp:        peer. Consider using the `boost::asio::write` function if you need to
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/ssl_stream.hpp:        the peer. Consider using the `boost::asio::async_write` function if you
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/ssl_stream.hpp:        bytes. Consider using the `boost::asio::read` function if you need to ensure
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/ssl_stream.hpp:        bytes. Consider using the `boost::asio::read` function if you need to ensure
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/ssl_stream.hpp:        number of bytes. Consider using the `boost::asio::async_read` function
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/timeout_service.hpp:    boost::asio::io_context& ctx, // VFALCO should be execution_context
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/flat_stream.hpp:    a performance limitation of the current version of `boost::asio::ssl::stream`,
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/flat_stream.hpp:    @li `boost::asio::read`, `boost::asio::async_read`
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/flat_stream.hpp:    @li `boost::asio::write`, `boost::asio::async_write`
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/flat_stream.hpp:    @li `boost::asio::read_until`, `boost::asio::async_read_until`
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/flat_stream.hpp:    `boost::asio::ssl::stream`.
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/flat_stream.hpp:        bytes. Consider using the function `boost::asio::read` if you need to ensure
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/flat_stream.hpp:        bytes. Consider using the function `boost::asio::read` if you need to ensure
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/flat_stream.hpp:        bytes. Consider using the function `boost::asio::async_read` if you need
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/flat_stream.hpp:        peer. Consider using the function `boost::asio::write` if you need to
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/flat_stream.hpp:        peer. Consider using the function `boost::asio::write` if you need to
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/flat_stream.hpp:        the peer. Consider using the function `boost::asio::async_write` if you need
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/timeout_socket.hpp:    class Executor = boost::asio::executor
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/timeout_socket.hpp:    boost::asio::basic_stream_socket<Protocol> sock_;
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/timeout_socket.hpp:    using next_layer_type = boost::asio::basic_stream_socket<Protocol>;
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/timeout_socket.hpp:            boost::asio::execution_context&>::value &&
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/timeout_socket.hpp:        boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/timeout_socket.hpp:        boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/timeout_socket.hpp:    boost::asio::ip::tcp,
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/timeout_socket.hpp:    boost::asio::io_context::executor_type>;
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/impl/timeout_service.ipp:    boost::asio::io_context& ioc,
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/impl/timeout_service.ipp:    boost::asio::use_service<
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/impl/timeout_socket.hpp:        boost::asio::associated_allocator_t<Handler>;
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/impl/timeout_socket.hpp:        return (boost::asio::get_associated_allocator)(h_);
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/impl/timeout_socket.hpp:        boost::asio::associated_executor_t<Handler, decltype(
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/impl/timeout_socket.hpp:        return (boost::asio::get_associated_executor)(
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/impl/timeout_socket.hpp:        using boost::asio::asio_handler_is_continuation;
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/impl/timeout_socket.hpp:        using boost::asio::asio_handler_invoke;
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/impl/timeout_socket.hpp:            BOOST_ASSERT(ec == boost::asio::error::operation_aborted);
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/impl/timeout_socket.hpp:            ec = boost::asio::error::timed_out;
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/impl/timeout_socket.hpp:    boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/impl/timeout_socket.hpp:    static_assert(boost::asio::is_mutable_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/impl/timeout_socket.hpp:    static_assert(boost::asio::is_const_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/impl/flat_stream.ipp:    : public boost::asio::coroutine
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/impl/flat_stream.ipp:        boost::asio::associated_allocator_t<Handler>::template
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/impl/flat_stream.ipp:        std::allocator_traits<boost::asio::associated_allocator_t<Handler>>
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/impl/flat_stream.ipp:            (boost::asio::get_associated_allocator)(h)})
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/impl/flat_stream.ipp:        boost::asio::associated_allocator_t<Handler>;
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/impl/flat_stream.ipp:        return (boost::asio::get_associated_allocator)(h_);
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/impl/flat_stream.ipp:    using executor_type = boost::asio::associated_executor_t<
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/impl/flat_stream.ipp:        return (boost::asio::get_associated_executor)(
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/impl/flat_stream.ipp:        using boost::asio::asio_handler_is_continuation;
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/impl/flat_stream.ipp:        using boost::asio::asio_handler_invoke;
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/impl/flat_stream.ipp:                boost::asio::buffer_copy(
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/impl/flat_stream.ipp:                    boost::asio::buffer(
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/impl/flat_stream.ipp:                    boost::asio::buffer(
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/impl/flat_stream.ipp:    static_assert(boost::asio::is_mutable_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/impl/flat_stream.ipp:    static_assert(boost::asio::is_mutable_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/impl/flat_stream.ipp:    static_assert(boost::asio::is_const_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/impl/flat_stream.ipp:        auto const b = boost::asio::buffer(p.get(), result.first);
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/impl/flat_stream.ipp:        boost::asio::buffer_copy(b, buffers);
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/impl/flat_stream.ipp:    static_assert(boost::asio::is_const_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/impl/flat_stream.ipp:        auto const b = boost::asio::buffer(p.get(), result.first);
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/impl/flat_stream.ipp:        boost::asio::buffer_copy(b, buffers);
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/impl/flat_stream.ipp:    static_assert(boost::asio::is_const_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/detail/timeout_service.hpp:    timeout_object(boost::asio::io_context& ioc);
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/detail/timeout_service.hpp:    timeout_service(boost::asio::io_context& ctx);
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/detail/timeout_service.hpp:    boost::asio::strand<
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/detail/timeout_service.hpp:        boost::asio::io_context::executor_type> strand_;
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/detail/timeout_service.hpp:    boost::asio::steady_timer timer_;
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/detail/flat_stream.hpp:        auto first = boost::asio::buffer_sequence_begin(buffers);
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/detail/flat_stream.hpp:        auto last = boost::asio::buffer_sequence_end(buffers);
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/detail/flat_stream.hpp:            result.first = boost::asio::buffer_size(*first);
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/detail/flat_stream.hpp:                        boost::asio::buffer_size(*it);
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/detail/service_base.hpp:class service_id : public boost::asio::execution_context::id
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/detail/service_base.hpp:    : public boost::asio::execution_context::service
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/detail/service_base.hpp:    boost::asio::execution_context& ctx_;
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/detail/service_base.hpp:    service_base(boost::asio::execution_context& ctx)
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/detail/service_base.hpp:        : boost::asio::execution_context::service(ctx)
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/detail/impl/timeout_service.ipp:timeout_object(boost::asio::io_context& ioc)
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/detail/impl/timeout_service.ipp:    : svc_(boost::asio::use_service<timeout_service>(ioc))
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/detail/impl/timeout_service.ipp:timeout_service(boost::asio::io_context& ctx)
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/detail/impl/timeout_service.ipp:        boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/detail/impl/timeout_service.ipp:    if(ec == boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/detail/impl/timeout_service.ipp:    boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/experimental/core/detail/impl/timeout_service.ipp:        boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/stream.hpp:    `boost::asio::read_until`, or in a call to
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/stream.hpp:    with a reference to the `boost::asio::io_context` to use for
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/stream.hpp:        boost::asio::io_context& ioc;
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/stream.hpp:            boost::asio::io_context& ioc_,
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/stream.hpp:        the peer will see the error `boost::asio::error::connection_reset`
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/stream.hpp:    stream(boost::asio::io_context& ioc);
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/stream.hpp:        boost::asio::io_context& ioc,
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/stream.hpp:        boost::asio::io_context& ioc,
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/stream.hpp:        boost::asio::io_context& ioc,
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/stream.hpp:        boost::asio::io_context::executor_type;
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/stream.hpp:    boost::asio::io_context::executor_type
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/stream.hpp:        bytes. Consider using the function `boost::asio::read` if you need to ensure
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/stream.hpp:        bytes. Consider using the function `boost::asio::read` if you need to ensure
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/stream.hpp:        bytes. Consider using the function `boost::asio::async_read` if you need
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/stream.hpp:        peer. Consider using the function `boost::asio::write` if you need to
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/stream.hpp:        peer. Consider using the function `boost::asio::write` if you need to
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/stream.hpp:        the peer. Consider using the function `boost::asio::async_write` if you need
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:stream(boost::asio::io_context& ioc)
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:    boost::asio::io_context& ioc,
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:    boost::asio::io_context& ioc,
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:    using boost::asio::buffer;
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:    using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:    boost::asio::io_context& ioc,
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:    using boost::asio::buffer;
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:    using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:    if(boost::asio::buffer_size(bs) == 0)
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:    using boost::asio::buffer;
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:    using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:    static_assert(boost::asio::is_mutable_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:    static_assert(boost::asio::is_mutable_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:    using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:    using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:            ec = boost::asio::error::eof;
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:            ec = boost::asio::error::connection_reset;
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:    static_assert(boost::asio::is_mutable_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:    using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:    using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:            return boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:            boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:                ec = boost::asio::error::eof;
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:                ec = boost::asio::error::connection_reset;
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:            boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:    static_assert(boost::asio::is_const_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:    static_assert(boost::asio::is_const_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:    using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:    using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:        ec = boost::asio::error::connection_reset;
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:    static_assert(boost::asio::is_const_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:    using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:    using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:        return boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:                boost::asio::error::connection_reset,
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:            return boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:    boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:        ec = boost::asio::error::eof;
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:        return boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:        ec = boost::asio::error::eof;
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:    boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:        boost::asio::executor_work_guard<
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:            boost::asio::io_context::executor_type> work_;
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:            boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:            using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:            using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:                boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:                    ec = boost::asio::error::eof;
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:                    ec = boost::asio::error::connection_reset;
/home/kaworu/boost_1_69_0/boost/beast/experimental/test/impl/stream.ipp:                boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/icy_stream.hpp:    boost::asio::const_buffer
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/icy_stream.hpp:        bytes. Consider using the function `boost::asio::read` if you need to ensure
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/icy_stream.hpp:        bytes. Consider using the function `boost::asio::read` if you need to ensure
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/icy_stream.hpp:        bytes. Consider using the function `boost::asio::async_read` if you need
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/icy_stream.hpp:        peer. Consider using the function `boost::asio::write` if you need to
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/icy_stream.hpp:        peer. Consider using the function `boost::asio::write` if you need to
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/icy_stream.hpp:        the peer. Consider using the function `boost::asio::async_write` if you need
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:    boost::asio::is_dynamic_buffer<DynamicBuffer>::value,
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:    using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:    auto in_pos  = boost::asio::buffer_sequence_end(in);
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:    auto out_pos = boost::asio::buffer_sequence_end(out);
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:    auto const in_begin  = boost::asio::buffer_sequence_begin(in);
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:    auto const out_begin = boost::asio::buffer_sequence_begin(out);
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:    boost::asio::const_buffer cb{*--in_pos};
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:    boost::asio::mutable_buffer mb{*--out_pos};
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:            mb = boost::asio::mutable_buffer{
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:            cb = boost::asio::const_buffer{
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:    : public boost::asio::coroutine
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:        boost::asio::associated_allocator_t<Handler>::template
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:        std::allocator_traits<boost::asio::associated_allocator_t<Handler>>
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:        boost::asio::associated_allocator_t<Handler>;
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:        return (boost::asio::get_associated_allocator)(d_.handler());
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:    using executor_type = boost::asio::associated_executor_t<
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:        return (boost::asio::get_associated_executor)(
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:        using boost::asio::asio_handler_invoke;
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:    using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:    using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:    using iterator = boost::asio::buffers_iterator<
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:            boost::asio::post(d.s.get_executor(),
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:                    boost::asio::buffer(d.s.buf_));
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:            boost::asio::async_read(
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:                boost::asio::buffer(d.s.buf_, 3),
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:                    boost::asio::buffer(d.s.buf_, n));
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:                    boost::asio::buffer(d.s.buf_),
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:        boost::asio::async_read_until(
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:                    boost::asio::buffers_begin(d.b.value()) + n - d.s.copy_,
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:                    boost::asio::buffers_begin(d.b.value()) + n,
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:    static_assert(boost::asio::is_mutable_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:    static_assert(boost::asio::is_mutable_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:    using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:    using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:    using iterator = boost::asio::buffers_iterator<
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:                boost::asio::buffer(buf_));
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:        auto n = boost::asio::read(
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:            boost::asio::buffer(buf_, 3),
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:                boost::asio::buffer(buf_, n));
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:                boost::asio::buffer(buf_),
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:    auto n = boost::asio::read_until(
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:            boost::asio::buffers_begin(buffers) + n - copy_,
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:            boost::asio::buffers_begin(buffers) + n,
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:    static_assert(boost::asio::is_mutable_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:    static_assert(boost::asio::is_const_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:    static_assert(boost::asio::is_const_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/experimental/http/impl/icy_stream.ipp:    static_assert(boost::asio::is_const_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/core/type_traits.hpp:        boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/core/type_traits.hpp:        using executor_type = boost::asio::io_context::executor_type;
/home/kaworu/boost_1_69_0/boost/beast/core/multi_buffer.hpp:    using const_buffer = boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/boost/beast/core/multi_buffer.hpp:    using mutable_buffer = boost::asio::mutable_buffer;
/home/kaworu/boost_1_69_0/boost/beast/core/buffered_read_stream.hpp:    `boost::asio::buffered_readstream`. It is designed to facilitate
/home/kaworu/boost_1_69_0/boost/beast/core/buffered_read_stream.hpp:    the use of `boost::asio::read_until`, and to allow buffers
/home/kaworu/boost_1_69_0/boost/beast/core/buffered_read_stream.hpp:    buffered version of `boost::asio::ssl::stream::async_handshake`
/home/kaworu/boost_1_69_0/boost/beast/core/buffered_read_stream.hpp:      to `boost::asio::read_until` behind for subsequent callers.
/home/kaworu/boost_1_69_0/boost/beast/core/buffered_read_stream.hpp:            boost::asio::read_until(
/home/kaworu/boost_1_69_0/boost/beast/core/buffered_read_stream.hpp:        boost::asio::is_dynamic_buffer<DynamicBuffer>::value,
/home/kaworu/boost_1_69_0/boost/beast/core/buffered_read_stream.hpp:        manner equivalent to using `boost::asio::io_context::post`.
/home/kaworu/boost_1_69_0/boost/beast/core/buffered_read_stream.hpp:        manner equivalent to using `boost::asio::io_context::post`.
/home/kaworu/boost_1_69_0/boost/beast/core/flat_buffer.hpp:    using const_buffers_type = boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/boost/beast/core/flat_buffer.hpp:    using mutable_buffers_type = boost::asio::mutable_buffer;
/home/kaworu/boost_1_69_0/boost/beast/core/buffers_to_string.hpp:    result.reserve(boost::asio::buffer_size(buffers));
/home/kaworu/boost_1_69_0/boost/beast/core/buffers_to_string.hpp:    for(boost::asio::const_buffer buffer :
/home/kaworu/boost_1_69_0/boost/beast/core/bind_handler.hpp:        boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/core/bind_handler.hpp:                boost::asio::error::operation_aborted, 0));
/home/kaworu/boost_1_69_0/boost/beast/core/buffers_adapter.hpp:    static_assert(boost::asio::is_mutable_buffer_sequence<MutableBufferSequence>::value,
/home/kaworu/boost_1_69_0/boost/beast/core/buffers_prefix.hpp:                boost::asio::mutable_buffer>::value,
/home/kaworu/boost_1_69_0/boost/beast/core/buffers_prefix.hpp:                    boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/beast/core/buffers_prefix.hpp:                        boost::asio::const_buffer>::type;
/home/kaworu/boost_1_69_0/boost/beast/core/buffers_prefix.hpp:boost::asio::const_buffer
/home/kaworu/boost_1_69_0/boost/beast/core/buffers_prefix.hpp:    boost::asio::const_buffer buffer)
/home/kaworu/boost_1_69_0/boost/beast/core/buffers_prefix.hpp:boost::asio::mutable_buffer
/home/kaworu/boost_1_69_0/boost/beast/core/buffers_prefix.hpp:    boost::asio::mutable_buffer buffer)
/home/kaworu/boost_1_69_0/boost/beast/core/buffers_prefix.hpp:        boost::asio::const_buffer>::value &&
/home/kaworu/boost_1_69_0/boost/beast/core/buffers_prefix.hpp:        boost::asio::mutable_buffer>::value,
/home/kaworu/boost_1_69_0/boost/beast/core/buffers_prefix.hpp:        boost::asio::is_const_buffer_sequence<BufferSequence>::value ||
/home/kaworu/boost_1_69_0/boost/beast/core/buffers_prefix.hpp:        boost::asio::is_mutable_buffer_sequence<BufferSequence>::value,
/home/kaworu/boost_1_69_0/boost/beast/core/buffers_prefix.hpp:    boost::asio::is_mutable_buffer_sequence<BufferSequence>::value,
/home/kaworu/boost_1_69_0/boost/beast/core/buffers_prefix.hpp:    boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/beast/core/buffers_prefix.hpp:    boost::asio::const_buffer>::type
/home/kaworu/boost_1_69_0/boost/beast/core/buffers_prefix.hpp:        boost::asio::buffer_sequence_begin(buffers);
/home/kaworu/boost_1_69_0/boost/beast/core/buffers_prefix.hpp:    if(first == boost::asio::buffer_sequence_end(buffers))
/home/kaworu/boost_1_69_0/boost/beast/core/buffers_cat.hpp:        then `value_type` will be `boost::asio::mutable_buffer`.
/home/kaworu/boost_1_69_0/boost/beast/core/buffers_cat.hpp:        Otherwise, `value_type` will be `boost::asio::const_buffer`.
/home/kaworu/boost_1_69_0/boost/beast/core/impl/flat_buffer.ipp:    using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:    using value_type = boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:    using value_type = boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:            (b_->out_ == boost::asio::buffer_sequence_end(b_->bs_) ||
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:    using value_type = boost::asio::mutable_buffer;
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:    using value_type = boost::asio::mutable_buffer;
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:        std::distance<iter_type>(boost::asio::buffer_sequence_begin(other.bs_), other.begin_),
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:        std::distance<iter_type>(boost::asio::buffer_sequence_begin(other.bs_), other.out_),
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:        std::distance<iter_type>(boost::asio::buffer_sequence_begin(other.bs_), other.end_))
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:        std::distance<iter_type>(boost::asio::buffer_sequence_begin(other.bs_), other.begin_),
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:        std::distance<iter_type>(boost::asio::buffer_sequence_begin(other.bs_), other.out_),
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:        std::distance<iter_type>(boost::asio::buffer_sequence_begin(other.bs_), other.end_))
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:        boost::asio::buffer_sequence_begin(other.bs_),
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:        boost::asio::buffer_sequence_begin(other.bs_),
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:        boost::asio::buffer_sequence_begin(other.bs_),
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:    begin_ = std::next(boost::asio::buffer_sequence_begin(bs_), nbegin);
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:    out_ =   std::next(boost::asio::buffer_sequence_begin(bs_), nout);
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:    end_ =   std::next(boost::asio::buffer_sequence_begin(bs_), nend);
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:        boost::asio::buffer_sequence_begin(other.bs_),
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:        boost::asio::buffer_sequence_begin(other.bs_),
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:        boost::asio::buffer_sequence_begin(other.bs_),
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:    begin_ = std::next(boost::asio::buffer_sequence_begin(bs_), nbegin);
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:    out_ =   std::next(boost::asio::buffer_sequence_begin(bs_), nout);
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:    end_ =   std::next(boost::asio::buffer_sequence_begin(bs_), nend);
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:    , begin_(boost::asio::buffer_sequence_begin(bs_))
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:    , out_  (boost::asio::buffer_sequence_begin(bs_))
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:    , end_  (boost::asio::buffer_sequence_begin(bs_))
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:    , max_size_(boost::asio::buffer_size(bs_))
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:    , begin_(boost::asio::buffer_sequence_begin(bs_))
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:    , out_  (boost::asio::buffer_sequence_begin(bs_))
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:    , end_  (boost::asio::buffer_sequence_begin(bs_))
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:    , max_size_(boost::asio::buffer_size(bs_))
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:    using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:    if(end_ != boost::asio::buffer_sequence_end(bs_))
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:                boost::asio::buffer_sequence_end(bs_))
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:    using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_adapter.ipp:    using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_suffix.ipp:                boost::asio::mutable_buffer>::value,
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_suffix.ipp:                    boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_suffix.ipp:                        boost::asio::const_buffer>::type;
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_suffix.ipp:                other.it_ == boost::asio::buffer_sequence_end(other.b_->bs_)
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_suffix.ipp:                    it_ == boost::asio::buffer_sequence_end(b_->bs_)
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_suffix.ipp:    : begin_(boost::asio::buffer_sequence_begin(bs_))
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_suffix.ipp:            boost::asio::buffer_sequence_begin(
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_suffix.ipp:            boost::asio::buffer_sequence_begin(
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_suffix.ipp:    , begin_(boost::asio::buffer_sequence_begin(bs_))
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_suffix.ipp:        boost::asio::is_const_buffer_sequence<Buffers>::value||
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_suffix.ipp:        boost::asio::is_mutable_buffer_sequence<Buffers>::value,
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_suffix.ipp:    , begin_(boost::asio::buffer_sequence_begin(bs_))
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_suffix.ipp:        boost::asio::buffer_sequence_begin(other.bs_),
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_suffix.ipp:        boost::asio::buffer_sequence_begin(bs_),
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_suffix.ipp:        boost::asio::buffer_sequence_begin(other.bs_),
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_suffix.ipp:        boost::asio::buffer_sequence_begin(bs_), dist);
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_suffix.ipp:        boost::asio::buffer_sequence_end(bs_)};
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_suffix.ipp:    using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_suffix.ipp:        boost::asio::buffer_sequence_end(bs_);
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_prefix.ipp:boost::asio::const_buffer
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_prefix.ipp:    boost::asio::const_buffer buffer)
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_prefix.ipp:boost::asio::mutable_buffer
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_prefix.ipp:    boost::asio::mutable_buffer buffer)
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_prefix.ipp:                boost::asio::mutable_buffer>::value,
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_prefix.ipp:                    boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_prefix.ipp:                        boost::asio::const_buffer>::type;
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_prefix.ipp:        remain_ -= boost::asio::buffer_size(*it_++);
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_prefix.ipp:        remain_ -= boost::asio::buffer_size(*it_++);
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_prefix.ipp:        remain_ += boost::asio::buffer_size(*--it_);
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_prefix.ipp:        remain_ += boost::asio::buffer_size(*--it_);
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_prefix.ipp:        , it_(boost::asio::buffer_sequence_begin(b_->bs_))
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_prefix.ipp:    end_ = boost::asio::buffer_sequence_begin(bs_);
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_prefix.ipp:            boost::asio::buffer_size(*end_++);
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_prefix.ipp:            boost::asio::buffer_sequence_begin(other.bs_),
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_prefix.ipp:            boost::asio::buffer_sequence_begin(other.bs_),
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_prefix.ipp:        boost::asio::buffer_sequence_begin(other.bs_),
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_prefix.ipp:        boost::asio::buffer_sequence_begin(bs_),
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_prefix.ipp:        boost::asio::buffer_sequence_begin(other.bs_),
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_prefix.ipp:        boost::asio::buffer_sequence_begin(bs_),
/home/kaworu/boost_1_69_0/boost/beast/core/impl/read_size.ipp:        boost::asio::is_dynamic_buffer<DynamicBuffer>::value,
/home/kaworu/boost_1_69_0/boost/beast/core/impl/flat_static_buffer.ipp:    using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/boost/beast/core/impl/flat_static_buffer.ipp:    using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_cat.ipp:        if(boost::asio::buffer_size(
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_cat.ipp:                boost::asio::buffer_sequence_begin(
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_cat.ipp:            boost::asio::buffer_sequence_begin(
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_cat.ipp:        if(boost::asio::buffer_size(
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_cat.ipp:                boost::asio::buffer_sequence_begin(
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_cat.ipp:        if(boost::asio::buffer_size(
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_cat.ipp:                boost::asio::buffer_sequence_end(
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_cat.ipp:            boost::asio::buffer_sequence_end(
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_cat.ipp:                boost::asio::buffer_sequence_end(
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_cat.ipp:                boost::asio::buffer_sequence_begin(
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffers_cat.ipp:            boost::asio::buffer_sequence_begin(
/home/kaworu/boost_1_69_0/boost/beast/core/impl/multi_buffer.ipp:    using value_type = boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/boost/beast/core/impl/multi_buffer.ipp:    using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/boost/beast/core/impl/multi_buffer.ipp:    using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/beast/core/impl/static_buffer.ipp:    using boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/boost/beast/core/impl/static_buffer.ipp:    using boost::asio::mutable_buffer;
/home/kaworu/boost_1_69_0/boost/beast/core/impl/static_buffer.ipp:    using boost::asio::mutable_buffer;
/home/kaworu/boost_1_69_0/boost/beast/core/impl/static_buffer.ipp:    using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/boost/beast/core/impl/static_buffer.ipp:    using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/boost/beast/core/impl/handler_ptr.ipp:        boost::asio::associated_allocator_t<
/home/kaworu/boost_1_69_0/boost/beast/core/impl/handler_ptr.ipp:                boost::asio::get_associated_allocator(
/home/kaworu/boost_1_69_0/boost/beast/core/impl/handler_ptr.ipp:        boost::asio::associated_allocator_t<
/home/kaworu/boost_1_69_0/boost/beast/core/impl/handler_ptr.ipp:                boost::asio::get_associated_allocator(h)};
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffered_read_stream.ipp:    boost::asio::executor_work_guard<decltype(
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffered_read_stream.ipp:        boost::asio::associated_allocator_t<Handler>;
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffered_read_stream.ipp:        return (boost::asio::get_associated_allocator)(h_);
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffered_read_stream.ipp:        boost::asio::associated_executor_t<Handler, decltype(
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffered_read_stream.ipp:        return (boost::asio::get_associated_executor)(
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffered_read_stream.ipp:        using boost::asio::asio_handler_is_continuation;
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffered_read_stream.ipp:        using boost::asio::asio_handler_invoke;
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffered_read_stream.ipp:        return boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffered_read_stream.ipp:            boost::asio::buffer_copy(b_, s_.buffer_.data());
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffered_read_stream.ipp:    static_assert(boost::asio::is_const_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffered_read_stream.ipp:    static_assert(boost::asio::is_mutable_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffered_read_stream.ipp:    static_assert(boost::asio::is_mutable_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffered_read_stream.ipp:    using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffered_read_stream.ipp:    using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/boost/beast/core/impl/buffered_read_stream.ipp:    static_assert(boost::asio::is_mutable_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/core/buffers_suffix.hpp:        while(boost::asio::buffer_size(bs) > 0)
/home/kaworu/boost_1_69_0/boost/beast/core/buffers_suffix.hpp:            boost::asio::buffer_sequence_begin(bs_),
/home/kaworu/boost_1_69_0/boost/beast/core/buffers_suffix.hpp:        `boost::asio::mutable_buffer`, then this type will be
/home/kaworu/boost_1_69_0/boost/beast/core/buffers_suffix.hpp:        `boost::asio::mutable_buffer`, else this type will be
/home/kaworu/boost_1_69_0/boost/beast/core/buffers_suffix.hpp:        `boost::asio::const_buffer`.
/home/kaworu/boost_1_69_0/boost/beast/core/buffers_suffix.hpp:                boost::asio::mutable_buffer>::value,
/home/kaworu/boost_1_69_0/boost/beast/core/buffers_suffix.hpp:                    boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/beast/core/buffers_suffix.hpp:                        boost::asio::const_buffer>::type;
/home/kaworu/boost_1_69_0/boost/beast/core/ostream.hpp:    static_assert(boost::asio::is_const_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/core/ostream.hpp:        boost::asio::is_dynamic_buffer<DynamicBuffer>::value,
/home/kaworu/boost_1_69_0/boost/beast/core/static_buffer.hpp:        std::array<boost::asio::const_buffer, 2>;
/home/kaworu/boost_1_69_0/boost/beast/core/static_buffer.hpp:        std::array<boost::asio::mutable_buffer, 2>;
/home/kaworu/boost_1_69_0/boost/beast/core/detail/type_traits.hpp:    BufferSequence<boost::asio::const_buffer>;
/home/kaworu/boost_1_69_0/boost/beast/core/detail/type_traits.hpp:    BufferSequence<boost::asio::mutable_buffer>;
/home/kaworu/boost_1_69_0/boost/beast/core/detail/type_traits.hpp:        boost::asio::is_const_buffer_sequence<B1>::value &&
/home/kaworu/boost_1_69_0/boost/beast/core/detail/type_traits.hpp:    : boost::asio::is_const_buffer_sequence<B>
/home/kaworu/boost_1_69_0/boost/beast/core/detail/type_traits.hpp:                boost::asio::mutable_buffer>::type>::value,
/home/kaworu/boost_1_69_0/boost/beast/core/detail/type_traits.hpp:                    boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/beast/core/detail/type_traits.hpp:                        boost::asio::const_buffer>::type;
/home/kaworu/boost_1_69_0/boost/beast/core/detail/type_traits.hpp:        boost::asio::buffer_sequence_begin(
/home/kaworu/boost_1_69_0/boost/beast/core/detail/type_traits.hpp:                boost::asio::mutable_buffer>::value,
/home/kaworu/boost_1_69_0/boost/beast/core/detail/type_traits.hpp:            boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/beast/core/detail/type_traits.hpp:            boost::asio::const_buffer>::type;
/home/kaworu/boost_1_69_0/boost/beast/core/detail/type_traits.hpp:        return boost::asio::buffer_sequence_begin(b_);
/home/kaworu/boost_1_69_0/boost/beast/core/detail/type_traits.hpp:        return boost::asio::buffer_sequence_end(b_);
/home/kaworu/boost_1_69_0/boost/beast/core/detail/type_traits.hpp:    boost::asio::async_completion<type, sig> init{handler}
/home/kaworu/boost_1_69_0/boost/beast/core/detail/buffers_ref.hpp:        return boost::asio::buffer_sequence_begin(*buffers_);
/home/kaworu/boost_1_69_0/boost/beast/core/detail/buffers_ref.hpp:        return boost::asio::buffer_sequence_end(*buffers_);
/home/kaworu/boost_1_69_0/boost/beast/core/detail/bind_handler.hpp:    friend struct boost::asio::associated_executor;
/home/kaworu/boost_1_69_0/boost/beast/core/detail/bind_handler.hpp:        boost::asio::associated_allocator_t<Handler>;
/home/kaworu/boost_1_69_0/boost/beast/core/detail/bind_handler.hpp:        return (boost::asio::get_associated_allocator)(h_);
/home/kaworu/boost_1_69_0/boost/beast/core/detail/bind_handler.hpp:        using boost::asio::asio_handler_is_continuation;
/home/kaworu/boost_1_69_0/boost/beast/core/detail/bind_handler.hpp:        using boost::asio::asio_handler_invoke;
/home/kaworu/boost_1_69_0/boost/beast/core/flat_static_buffer.hpp:    using const_buffers_type = boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/boost/beast/core/flat_static_buffer.hpp:    using mutable_buffers_type = boost::asio::mutable_buffer;
/home/kaworu/boost_1_69_0/boost/beast/websocket/ssl.hpp:/** Tear down a `boost::asio::ssl::stream`.
/home/kaworu/boost_1_69_0/boost/beast/websocket/ssl.hpp:    type, and not a `boost::asio::ip::tcp::socket` or any
/home/kaworu/boost_1_69_0/boost/beast/websocket/ssl.hpp:    `boost::asio::ssl::stream`, callers are responsible for
/home/kaworu/boost_1_69_0/boost/beast/websocket/ssl.hpp:    boost::asio::ssl::stream<SyncStream>& stream,
/home/kaworu/boost_1_69_0/boost/beast/websocket/ssl.hpp:/** Start tearing down a `boost::asio::ssl::stream`.
/home/kaworu/boost_1_69_0/boost/beast/websocket/ssl.hpp:    `boost::asio::ip::tcp::socket` or any `boost::asio::ssl::stream`,
/home/kaworu/boost_1_69_0/boost/beast/websocket/ssl.hpp:    manner equivalent to using boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/beast/websocket/ssl.hpp:    boost::asio::ssl::stream<AsyncStream>& stream,
/home/kaworu/boost_1_69_0/boost/beast/websocket/stream.hpp:        manner equivalent to using `boost::asio::io_context::post`.
/home/kaworu/boost_1_69_0/boost/beast/websocket/stream.hpp:        manner equivalent to using `boost::asio::io_context::post`.
/home/kaworu/boost_1_69_0/boost/beast/websocket/stream.hpp:        manner equivalent to using `boost::asio::io_context::post`.
/home/kaworu/boost_1_69_0/boost/beast/websocket/stream.hpp:        manner equivalent to using `boost::asio::io_context::post`.
/home/kaworu/boost_1_69_0/boost/beast/websocket/stream.hpp:        manner equivalent to using `boost::asio::io_context::post`.
/home/kaworu/boost_1_69_0/boost/beast/websocket/stream.hpp:        manner equivalent to using `boost::asio::io_context::post`.
/home/kaworu/boost_1_69_0/boost/beast/websocket/stream.hpp:        manner equivalent to using `boost::asio::io_context::post`.
/home/kaworu/boost_1_69_0/boost/beast/websocket/stream.hpp:        manner equivalent to using `boost::asio::io_context::post`.
/home/kaworu/boost_1_69_0/boost/beast/websocket/stream.hpp:        manner equivalent to using `boost::asio::io_context::post`.
/home/kaworu/boost_1_69_0/boost/beast/websocket/stream.hpp:        manner equivalent to using `boost::asio::io_context::post`.
/home/kaworu/boost_1_69_0/boost/beast/websocket/stream.hpp:        manner equivalent to using `boost::asio::io_context::post`.
/home/kaworu/boost_1_69_0/boost/beast/websocket/stream.hpp:        set to `boost::asio::error::operation_aborted`.
/home/kaworu/boost_1_69_0/boost/beast/websocket/stream.hpp:        manner equivalent to using `boost::asio::io_context::post`.
/home/kaworu/boost_1_69_0/boost/beast/websocket/stream.hpp:        set to `boost::asio::error::operation_aborted`.
/home/kaworu/boost_1_69_0/boost/beast/websocket/stream.hpp:        manner equivalent to using `boost::asio::io_context::post`.
/home/kaworu/boost_1_69_0/boost/beast/websocket/stream.hpp:        manner equivalent to using `boost::asio::io_context::post`.
/home/kaworu/boost_1_69_0/boost/beast/websocket/stream.hpp:        manner equivalent to using `boost::asio::io_context::post`.
/home/kaworu/boost_1_69_0/boost/beast/websocket/stream.hpp:        manner equivalent to using `boost::asio::io_context::post`.
/home/kaworu/boost_1_69_0/boost/beast/websocket/stream.hpp:        manner equivalent to using `boost::asio::io_context::post`.
/home/kaworu/boost_1_69_0/boost/beast/websocket/stream.hpp:            ec = boost::asio::error::operation_aborted;
/home/kaworu/boost_1_69_0/boost/beast/websocket/teardown.hpp:    type, and not a `boost::asio::ip::tcp::socket` or any
/home/kaworu/boost_1_69_0/boost/beast/websocket/teardown.hpp:    `boost::asio::ssl::stream`, callers are responsible for
/home/kaworu/boost_1_69_0/boost/beast/websocket/teardown.hpp:    `boost::asio::ip::tcp::socket` or any `boost::asio::ssl::stream`,
/home/kaworu/boost_1_69_0/boost/beast/websocket/teardown.hpp:    manner equivalent to using boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/beast/websocket/teardown.hpp:/** Tear down a `boost::asio::ip::tcp::socket`.
/home/kaworu/boost_1_69_0/boost/beast/websocket/teardown.hpp:    type, and not a `boost::asio::ip::tcp::socket` or any
/home/kaworu/boost_1_69_0/boost/beast/websocket/teardown.hpp:    `boost::asio::ssl::stream`, callers are responsible for
/home/kaworu/boost_1_69_0/boost/beast/websocket/teardown.hpp:    boost::asio::ip::tcp::socket& socket,
/home/kaworu/boost_1_69_0/boost/beast/websocket/teardown.hpp:/** Start tearing down a `boost::asio::ip::tcp::socket`.
/home/kaworu/boost_1_69_0/boost/beast/websocket/teardown.hpp:    `boost::asio::ip::tcp::socket` or any `boost::asio::ssl::stream`,
/home/kaworu/boost_1_69_0/boost/beast/websocket/teardown.hpp:    manner equivalent to using boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/beast/websocket/teardown.hpp:    boost::asio::ip::tcp::socket& socket,
/home/kaworu/boost_1_69_0/boost/beast/websocket/rfc6455.hpp:    void handle_connection(boost::asio::ip::tcp::socket& sock)
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/ssl.ipp:    boost::asio::ssl::stream<AsyncStream>& stream,
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/ssl.ipp:    boost::asio::ssl::stream<AsyncStream>& stream,
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/handshake.ipp:    : public boost::asio::coroutine
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/handshake.ipp:        boost::asio::executor_work_guard<decltype(std::declval<
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/handshake.ipp:        boost::asio::associated_allocator_t<Handler>;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/handshake.ipp:        return (boost::asio::get_associated_allocator)(d_.handler());
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/handshake.ipp:    using executor_type = boost::asio::associated_executor_t<
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/handshake.ipp:        return (boost::asio::get_associated_executor)(
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/handshake.ipp:        using boost::asio::asio_handler_is_continuation;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/handshake.ipp:        using boost::asio::asio_handler_invoke;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/stream.ipp:        boost::asio::is_dynamic_buffer<DynamicBuffer>::value,
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/stream.ipp:    using boost::asio::buffer;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/stream.ipp:    using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/stream.ipp:    using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/stream.ipp:            boost::asio::buffer_copy(mb,
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/stream.ipp:                boost::asio::buffer(tmp));
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/stream.ipp:            boost::asio::buffer_copy(mb,
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/stream.ipp:                boost::asio::const_buffer(
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/stream.ipp:    boost::asio::buffer_copy(mb,
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/stream.ipp:        boost::asio::const_buffer(
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/stream.ipp:        boost::asio::write(stream_, fb.data(), ec);
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/stream.ipp:    if(ec == boost::asio::error::eof)
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/close.ipp:    : public boost::asio::coroutine
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/close.ipp:        boost::asio::executor_work_guard<decltype(std::declval<
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/close.ipp:        boost::asio::associated_allocator_t<Handler>;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/close.ipp:        return (boost::asio::get_associated_allocator)(d_.handler());
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/close.ipp:    using executor_type = boost::asio::associated_executor_t<
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/close.ipp:        return (boost::asio::get_associated_executor)(
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/close.ipp:        using boost::asio::asio_handler_is_continuation;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/close.ipp:        using boost::asio::asio_handler_invoke;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/close.ipp:            boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/close.ipp:        boost::asio::async_write(d.ws.stream_,
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/close.ipp:            boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/close.ipp:        if(ec == boost::asio::error::eof)
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/close.ipp:            boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/close.ipp:        boost::asio::write(stream_, fb.data(), ec);
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/ping.ipp:    : public boost::asio::coroutine
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/ping.ipp:        boost::asio::executor_work_guard<decltype(std::declval<
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/ping.ipp:        boost::asio::associated_allocator_t<Handler>;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/ping.ipp:        return (boost::asio::get_associated_allocator)(d_.handler());
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/ping.ipp:    using executor_type = boost::asio::associated_executor_t<
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/ping.ipp:        return (boost::asio::get_associated_executor)(
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/ping.ipp:        using boost::asio::asio_handler_is_continuation;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/ping.ipp:        using boost::asio::asio_handler_invoke;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/ping.ipp:                boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/ping.ipp:            boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/ping.ipp:        boost::asio::async_write(d.ws.stream_,
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/ping.ipp:    boost::asio::write(stream_, fb.data(), ec);
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/ping.ipp:    boost::asio::write(stream_, fb.data(), ec);
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/accept.ipp:    : public boost::asio::coroutine
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/accept.ipp:        boost::asio::executor_work_guard<decltype(std::declval<
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/accept.ipp:        boost::asio::associated_allocator_t<Handler>;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/accept.ipp:        return (boost::asio::get_associated_allocator)(d_.handler());
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/accept.ipp:    using executor_type = boost::asio::associated_executor_t<
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/accept.ipp:        return (boost::asio::get_associated_executor)(
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/accept.ipp:        using boost::asio::asio_handler_is_continuation;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/accept.ipp:        using boost::asio::asio_handler_invoke;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/accept.ipp:    : public boost::asio::coroutine
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/accept.ipp:        boost::asio::executor_work_guard<decltype(std::declval<
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/accept.ipp:        boost::asio::associated_allocator_t<Handler>;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/accept.ipp:        return (boost::asio::get_associated_allocator)(d_.handler());
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/accept.ipp:    using executor_type = boost::asio::associated_executor_t<
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/accept.ipp:        return (boost::asio::get_associated_executor)(
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/accept.ipp:        using boost::asio::asio_handler_is_continuation;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/accept.ipp:        using boost::asio::asio_handler_invoke;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/accept.ipp:    using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/accept.ipp:    using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/accept.ipp:            boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/accept.ipp:    static_assert(boost::asio::is_const_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/accept.ipp:    static_assert(boost::asio::is_const_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/accept.ipp:    static_assert(boost::asio::is_const_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/accept.ipp:    using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/accept.ipp:    using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/accept.ipp:    static_assert(boost::asio::is_const_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/accept.ipp:    static_assert(boost::asio::is_const_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/accept.ipp:    using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/accept.ipp:    using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/accept.ipp:    static_assert(boost::asio::is_const_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/accept.ipp:    static_assert(boost::asio::is_const_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/accept.ipp:    using boost::asio::asio_handler_is_continuation;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/accept.ipp:    using boost::asio::asio_handler_is_continuation;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/teardown.ipp:class teardown_tcp_op : public boost::asio::coroutine
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/teardown.ipp:        boost::asio::ip::tcp::socket;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/teardown.ipp:    boost::asio::executor_work_guard<decltype(std::declval<
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/teardown.ipp:        boost::asio::associated_allocator_t<Handler>;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/teardown.ipp:        return (boost::asio::get_associated_allocator)(h_);
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/teardown.ipp:    using executor_type = boost::asio::associated_executor_t<
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/teardown.ipp:        return (boost::asio::get_associated_executor)(
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/teardown.ipp:        using boost::asio::asio_handler_is_continuation;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/teardown.ipp:        using boost::asio::asio_handler_invoke;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/teardown.ipp:    using boost::asio::buffer;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/teardown.ipp:    using tcp = boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/teardown.ipp:            boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/teardown.ipp:                    boost::asio::buffer(buf), ec);
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/teardown.ipp:            if(ec == boost::asio::error::would_block)
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/teardown.ipp:                    boost::asio::ip::tcp::socket::wait_read,
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/teardown.ipp:                if(ec != boost::asio::error::eof)
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/teardown.ipp:    boost::asio::ip::tcp::socket& socket,
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/teardown.ipp:    using boost::asio::buffer;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/teardown.ipp:            boost::asio::ip::tcp::socket::shutdown_send, ec);
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/teardown.ipp:            if(ec != boost::asio::error::eof)
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/teardown.ipp:            boost::asio::ip::tcp::socket::shutdown_send, ec);
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/teardown.ipp:    boost::asio::ip::tcp::socket& socket,
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:    : public boost::asio::coroutine
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:    boost::asio::executor_work_guard<decltype(std::declval<
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:        boost::asio::associated_allocator_t<Handler>;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:        return (boost::asio::get_associated_allocator)(h_);
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:    using executor_type = boost::asio::associated_executor_t<
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:        return (boost::asio::get_associated_executor)(
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:        using boost::asio::asio_handler_is_continuation;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:        using boost::asio::asio_handler_invoke;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:    using boost::asio::buffer;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:    using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:                ec = boost::asio::error::operation_aborted;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:            boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:            ec = boost::asio::error::operation_aborted;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:                            boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:                        boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:                    boost::asio::async_write(ws_.stream_,
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:                            boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:                            boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:            boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:            boost::asio::async_write(
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:        if(ec == boost::asio::error::eof)
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:            boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:    : public boost::asio::coroutine
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:    boost::asio::executor_work_guard<decltype(std::declval<
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:        boost::asio::associated_allocator_t<Handler>;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:        return (boost::asio::get_associated_allocator)(h_);
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:    using executor_type = boost::asio::associated_executor_t<
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:        return (boost::asio::get_associated_executor)(
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:        using boost::asio::asio_handler_is_continuation;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:        using boost::asio::asio_handler_invoke;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:                    boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:        boost::asio::is_dynamic_buffer<DynamicBuffer>::value,
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:        boost::asio::is_dynamic_buffer<DynamicBuffer>::value,
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:        boost::asio::is_dynamic_buffer<DynamicBuffer>::value,
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:        boost::asio::is_dynamic_buffer<DynamicBuffer>::value,
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:        boost::asio::is_dynamic_buffer<DynamicBuffer>::value,
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:        boost::asio::is_dynamic_buffer<DynamicBuffer>::value,
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:    static_assert(boost::asio::is_mutable_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:    static_assert(boost::asio::is_mutable_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:    using boost::asio::buffer;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:    using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:                boost::asio::write(stream_, fb.data(), ec);
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/read.ipp:    static_assert(boost::asio::is_mutable_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:    boost::asio::mutable_buffer& out,
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:    using boost::asio::buffer;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:        auto const remain = boost::asio::buffer_size(cb);
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:    : public boost::asio::coroutine
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:    boost::asio::executor_work_guard<decltype(std::declval<
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:        boost::asio::associated_allocator_t<Handler>;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:        return (boost::asio::get_associated_allocator)(h_);
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:    using executor_type = boost::asio::associated_executor_t<
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:        return (boost::asio::get_associated_executor)(
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:        using boost::asio::asio_handler_is_continuation;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:        using boost::asio::asio_handler_invoke;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:    using boost::asio::buffer;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:    using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:    using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:    using boost::asio::mutable_buffer;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:    boost::asio::mutable_buffer b;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:            boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:            boost::asio::async_write(ws_.stream_,
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:                boost::asio::async_write(
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:            boost::asio::async_write(
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:                boost::asio::async_write(ws_.stream_,
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:                boost::asio::async_write(ws_.stream_,
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:                boost::asio::async_write(ws_.stream_,
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:            boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:    static_assert(boost::asio::is_const_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:    static_assert(boost::asio::is_const_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:    using boost::asio::buffer;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:    using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:    using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:            boost::asio::write(stream_,
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:            boost::asio::write(stream_,
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:                boost::asio::write(stream_,
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:            boost::asio::write(stream_,
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:            boost::asio::write(stream_, b, ec);
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:            boost::asio::write(stream_,
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:    static_assert(boost::asio::is_const_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:    static_assert(boost::asio::is_const_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:    static_assert(boost::asio::is_const_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/websocket/impl/write.ipp:    static_assert(boost::asio::is_const_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/websocket/role.hpp:    layer type is a `boost::asio::ip::tcp::socket` behaves
/home/kaworu/boost_1_69_0/boost/beast/websocket/role.hpp:    When the next layer type is a `boost::asio::ssl::stream`,
/home/kaworu/boost_1_69_0/boost/beast/websocket/detail/utf8_checker.hpp:    static_assert(boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value,
/home/kaworu/boost_1_69_0/boost/beast/websocket/detail/mask.hpp:mask_inplace(boost::asio::mutable_buffer& b, prepared_key& key)
/home/kaworu/boost_1_69_0/boost/beast/websocket/detail/mask.hpp:    for(boost::asio::mutable_buffer b :
/home/kaworu/boost_1_69_0/boost/beast/websocket/detail/pausation.hpp:                boost::asio::associated_allocator_t<
/home/kaworu/boost_1_69_0/boost/beast/websocket/detail/pausation.hpp:                        boost::asio::get_associated_allocator(h)};
/home/kaworu/boost_1_69_0/boost/beast/websocket/detail/pausation.hpp:                boost::asio::associated_allocator_t<
/home/kaworu/boost_1_69_0/boost/beast/websocket/detail/pausation.hpp:                        boost::asio::get_associated_allocator(h)};
/home/kaworu/boost_1_69_0/boost/beast/websocket/detail/pausation.hpp:        boost::asio::associated_allocator_t<
/home/kaworu/boost_1_69_0/boost/beast/websocket/detail/pausation.hpp:                    boost::asio::get_associated_allocator(handler)};
/home/kaworu/boost_1_69_0/boost/beast/websocket/detail/stream_base.hpp:        boost::asio::mutable_buffer& out,
/home/kaworu/boost_1_69_0/boost/beast/websocket/detail/stream_base.hpp:        boost::asio::mutable_buffer&,
/home/kaworu/boost_1_69_0/boost/beast/websocket/detail/frame.hpp:    using boost::asio::buffer;
/home/kaworu/boost_1_69_0/boost/beast/websocket/detail/frame.hpp:    using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/boost/beast/websocket/detail/frame.hpp:    using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/boost/beast/websocket/detail/frame.hpp:    using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/beast/websocket/detail/frame.hpp:    using boost::asio::mutable_buffer;
/home/kaworu/boost_1_69_0/boost/beast/websocket/detail/frame.hpp:    using boost::asio::buffer;
/home/kaworu/boost_1_69_0/boost/beast/websocket/detail/frame.hpp:    using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/boost/beast/websocket/detail/frame.hpp:    using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/beast/http/read.hpp:    If the stream returns the error `boost::asio::error::eof` indicating the
/home/kaworu/boost_1_69_0/boost/beast/http/read.hpp:    If the stream returns the error `boost::asio::error::eof` indicating the
/home/kaworu/boost_1_69_0/boost/beast/http/read.hpp:    If the stream returns the error `boost::asio::error::eof` indicating the
/home/kaworu/boost_1_69_0/boost/beast/http/read.hpp:    manner equivalent to using `boost::asio::io_context::post`.
/home/kaworu/boost_1_69_0/boost/beast/http/read.hpp:    If the stream returns the error `boost::asio::error::eof` indicating the
/home/kaworu/boost_1_69_0/boost/beast/http/read.hpp:    If the stream returns the error `boost::asio::error::eof` indicating the
/home/kaworu/boost_1_69_0/boost/beast/http/read.hpp:    If the stream returns the error `boost::asio::error::eof` indicating the
/home/kaworu/boost_1_69_0/boost/beast/http/read.hpp:    manner equivalent to using `boost::asio::io_context::post`.
/home/kaworu/boost_1_69_0/boost/beast/http/read.hpp:    If the stream returns the error `boost::asio::error::eof` indicating the
/home/kaworu/boost_1_69_0/boost/beast/http/read.hpp:    If the stream returns the error `boost::asio::error::eof` indicating the
/home/kaworu/boost_1_69_0/boost/beast/http/read.hpp:    If the stream returns the error `boost::asio::error::eof` indicating the
/home/kaworu/boost_1_69_0/boost/beast/http/read.hpp:    manner equivalent to using `boost::asio::io_context::post`.
/home/kaworu/boost_1_69_0/boost/beast/http/read.hpp:    If the stream returns the error `boost::asio::error::eof` indicating the
/home/kaworu/boost_1_69_0/boost/beast/http/read.hpp:    If the stream returns the error `boost::asio::error::eof` indicating the
/home/kaworu/boost_1_69_0/boost/beast/http/read.hpp:    If the stream returns the error `boost::asio::error::eof` indicating the
/home/kaworu/boost_1_69_0/boost/beast/http/read.hpp:    manner equivalent to using `boost::asio::io_context::post`.
/home/kaworu/boost_1_69_0/boost/beast/http/empty_body.hpp:            boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/boost/beast/http/fields.hpp:        boost::asio::const_buffer
/home/kaworu/boost_1_69_0/boost/beast/http/type_traits.hpp:    boost::asio::is_const_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/http/type_traits.hpp:    boost::asio::is_const_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/http/type_traits.hpp:            std::declval<boost::asio::const_buffer>(),
/home/kaworu/boost_1_69_0/boost/beast/http/vector_body.hpp:            using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/beast/http/vector_body.hpp:            using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/boost/beast/http/vector_body.hpp:            return buffer_copy(boost::asio::buffer(
/home/kaworu/boost_1_69_0/boost/beast/http/vector_body.hpp:            boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/boost/beast/http/serializer.hpp:        boost::asio::const_buffer,               // chunk-ext
/home/kaworu/boost_1_69_0/boost/beast/http/serializer.hpp:        boost::asio::const_buffer,               // chunk-ext
/home/kaworu/boost_1_69_0/boost/beast/http/serializer.hpp:        boost::asio::const_buffer,               // chunk-size
/home/kaworu/boost_1_69_0/boost/beast/http/serializer.hpp:        boost::asio::const_buffer,               // chunk-final
/home/kaworu/boost_1_69_0/boost/beast/http/serializer.hpp:        boost::asio::const_buffer,               // trailers 
/home/kaworu/boost_1_69_0/boost/beast/http/serializer.hpp:        boost::asio::const_buffer,               // chunk-ext
/home/kaworu/boost_1_69_0/boost/beast/http/serializer.hpp:        boost::asio::const_buffer,               // chunk-final
/home/kaworu/boost_1_69_0/boost/beast/http/serializer.hpp:        boost::asio::const_buffer,               // trailers 
/home/kaworu/boost_1_69_0/boost/beast/http/serializer.hpp:        boost::asio::const_buffer,               // chunk-final
/home/kaworu/boost_1_69_0/boost/beast/http/serializer.hpp:        boost::asio::const_buffer,               // trailers 
/home/kaworu/boost_1_69_0/boost/beast/http/basic_file_body.hpp:        boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/boost/beast/http/basic_file_body.hpp:    for(auto it = boost::asio::buffer_sequence_begin(buffers);
/home/kaworu/boost_1_69_0/boost/beast/http/basic_file_body.hpp:        it != boost::asio::buffer_sequence_end(buffers); ++it)
/home/kaworu/boost_1_69_0/boost/beast/http/basic_file_body.hpp:        boost::asio::const_buffer buffer = *it;
/home/kaworu/boost_1_69_0/boost/beast/http/basic_parser.hpp:    put(boost::asio::const_buffer const& buffer,
/home/kaworu/boost_1_69_0/boost/beast/http/basic_parser.hpp:        `boost::asio::error::eof`.
/home/kaworu/boost_1_69_0/boost/beast/http/parser.hpp:        return rd_.put(boost::asio::buffer(
/home/kaworu/boost_1_69_0/boost/beast/http/parser.hpp:        return rd_.put(boost::asio::buffer(
/home/kaworu/boost_1_69_0/boost/beast/http/buffer_body.hpp:            using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/beast/http/buffer_body.hpp:            using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/boost/beast/http/buffer_body.hpp:                buffer_copy(boost::asio::buffer(
/home/kaworu/boost_1_69_0/boost/beast/http/buffer_body.hpp:            boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/boost/beast/http/string_body.hpp:            using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/beast/http/string_body.hpp:            using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/boost/beast/http/string_body.hpp:            boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/boost/beast/http/basic_dynamic_body.hpp:        boost::asio::is_dynamic_buffer<DynamicBuffer>::value,
/home/kaworu/boost_1_69_0/boost/beast/http/basic_dynamic_body.hpp:            using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/boost/beast/http/basic_dynamic_body.hpp:            using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/beast/http/write.hpp:    manner equivalent to using `boost::asio::io_context::post`.
/home/kaworu/boost_1_69_0/boost/beast/http/write.hpp:    manner equivalent to using `boost::asio::io_context::post`.
/home/kaworu/boost_1_69_0/boost/beast/http/write.hpp:    manner equivalent to using `boost::asio::io_context::post`.
/home/kaworu/boost_1_69_0/boost/beast/http/write.hpp:    manner equivalent to using `boost::asio::io_context::post`.
/home/kaworu/boost_1_69_0/boost/beast/http/write.hpp:    manner equivalent to using `boost::asio::io_context::post`.
/home/kaworu/boost_1_69_0/boost/beast/http/impl/serializer.ipp:    using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/beast/http/impl/serializer.ipp:                boost::asio::const_buffer{nullptr, 0},
/home/kaworu/boost_1_69_0/boost/beast/http/impl/serializer.ipp:                boost::asio::const_buffer{nullptr, 0},
/home/kaworu/boost_1_69_0/boost/beast/http/impl/serializer.ipp:            boost::asio::const_buffer{nullptr, 0},
/home/kaworu/boost_1_69_0/boost/beast/http/impl/serializer.ipp:                boost::asio::const_buffer{nullptr, 0},
/home/kaworu/boost_1_69_0/boost/beast/http/impl/serializer.ipp:                boost::asio::const_buffer{nullptr, 0},
/home/kaworu/boost_1_69_0/boost/beast/http/impl/serializer.ipp:            boost::asio::const_buffer{nullptr, 0},
/home/kaworu/boost_1_69_0/boost/beast/http/impl/serializer.ipp:            boost::asio::const_buffer{nullptr, 0},
/home/kaworu/boost_1_69_0/boost/beast/http/impl/serializer.ipp:    using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/beast/http/impl/chunk_encode.ipp:        boost::asio::const_buffer{nullptr, 0},
/home/kaworu/boost_1_69_0/boost/beast/http/impl/chunk_encode.ipp:        boost::asio::const_buffer{
/home/kaworu/boost_1_69_0/boost/beast/http/impl/chunk_encode.ipp:        boost::asio::buffer_size(buffers),
/home/kaworu/boost_1_69_0/boost/beast/http/impl/chunk_encode.ipp:        boost::asio::const_buffer{nullptr, 0},
/home/kaworu/boost_1_69_0/boost/beast/http/impl/chunk_encode.ipp:        boost::asio::buffer_size(buffers),
/home/kaworu/boost_1_69_0/boost/beast/http/impl/chunk_encode.ipp:        boost::asio::const_buffer{
/home/kaworu/boost_1_69_0/boost/beast/http/impl/chunk_encode.ipp:        boost::asio::buffer_size(buffers),
/home/kaworu/boost_1_69_0/boost/beast/http/impl/chunk_encode.ipp:        boost::asio::buffer_size(buffers),
/home/kaworu/boost_1_69_0/boost/beast/http/impl/fields.ipp:        using value_type = boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/boost/beast/http/impl/fields.ipp:        boost::asio::const_buffer,
/home/kaworu/boost_1_69_0/boost/beast/http/impl/fields.ipp:        boost::asio::const_buffer,
/home/kaworu/boost_1_69_0/boost/beast/http/impl/fields.ipp:        boost::asio::const_buffer,
/home/kaworu/boost_1_69_0/boost/beast/http/impl/fields.ipp:        boost::asio::const_buffer{nullptr, 0},
/home/kaworu/boost_1_69_0/boost/beast/http/impl/fields.ipp:        boost::asio::const_buffer{nullptr, 0},
/home/kaworu/boost_1_69_0/boost/beast/http/impl/fields.ipp:        boost::asio::const_buffer{nullptr, 0},
/home/kaworu/boost_1_69_0/boost/beast/http/impl/fields.ipp:        boost::asio::const_buffer{sv.data(), sv.size()},
/home/kaworu/boost_1_69_0/boost/beast/http/impl/fields.ipp:        boost::asio::const_buffer{
/home/kaworu/boost_1_69_0/boost/beast/http/impl/fields.ipp:        boost::asio::const_buffer{buf_, 11},
/home/kaworu/boost_1_69_0/boost/beast/http/impl/fields.ipp:        boost::asio::const_buffer{buf_, 13},
/home/kaworu/boost_1_69_0/boost/beast/http/impl/fields.ipp:        boost::asio::const_buffer{sv.data(), sv.size()},
/home/kaworu/boost_1_69_0/boost/beast/http/impl/fields.ipp:        boost::asio::const_buffer{"\r\n", 2},
/home/kaworu/boost_1_69_0/boost/beast/http/impl/fields.ipp:boost::asio::const_buffer
/home/kaworu/boost_1_69_0/boost/beast/http/impl/fields.ipp:    return boost::asio::const_buffer{data(),
/home/kaworu/boost_1_69_0/boost/beast/http/impl/basic_parser.ipp:    static_assert(boost::asio::is_const_buffer_sequence<
/home/kaworu/boost_1_69_0/boost/beast/http/impl/basic_parser.ipp:    using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/boost/beast/http/impl/basic_parser.ipp:    using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/beast/http/impl/basic_parser.ipp:    auto const p = boost::asio::buffer_sequence_begin(buffers);
/home/kaworu/boost_1_69_0/boost/beast/http/impl/basic_parser.ipp:    auto const last = boost::asio::buffer_sequence_end(buffers);
/home/kaworu/boost_1_69_0/boost/beast/http/impl/basic_parser.ipp:        return put(boost::asio::const_buffer(*p), ec);
/home/kaworu/boost_1_69_0/boost/beast/http/impl/basic_parser.ipp:    buffer_copy(boost::asio::buffer(
/home/kaworu/boost_1_69_0/boost/beast/http/impl/basic_parser.ipp:    return put(boost::asio::const_buffer{
/home/kaworu/boost_1_69_0/boost/beast/http/impl/basic_parser.ipp:put(boost::asio::const_buffer const& buffer,
/home/kaworu/boost_1_69_0/boost/beast/http/impl/basic_parser.ipp:    using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/beast/http/impl/basic_parser.ipp:    using boost::asio::buffer;
/home/kaworu/boost_1_69_0/boost/beast/http/impl/basic_parser.ipp:    using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/boost/beast/http/impl/basic_parser.ipp:    return put(boost::asio::const_buffer{
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:    : public boost::asio::coroutine
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:    boost::asio::executor_work_guard<decltype(
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:        boost::asio::associated_allocator_t<Handler>;
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:        return (boost::asio::get_associated_allocator)(h_);
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:    using executor_type = boost::asio::associated_executor_t<
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:        return (boost::asio::get_associated_executor)(
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:        using boost::asio::asio_handler_is_continuation;
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:        using boost::asio::asio_handler_invoke;
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:            if(ec == boost::asio::error::eof)
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:            boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:    : public boost::asio::coroutine
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:    boost::asio::executor_work_guard<decltype(
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:        boost::asio::associated_allocator_t<Handler>;
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:        return (boost::asio::get_associated_allocator)(h_);
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:    using executor_type = boost::asio::associated_executor_t<
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:        return (boost::asio::get_associated_executor)(
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:        using boost::asio::asio_handler_is_continuation;
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:        using boost::asio::asio_handler_invoke;
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:            boost::asio::post(s_.get_executor(),
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:    : public boost::asio::coroutine
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:        boost::asio::executor_work_guard<decltype(
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:        boost::asio::associated_allocator_t<Handler>;
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:        return (boost::asio::get_associated_allocator)(d_.handler());
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:    using executor_type = boost::asio::associated_executor_t<
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:        return (boost::asio::get_associated_executor)(
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:        using boost::asio::asio_handler_is_continuation;
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:        using boost::asio::asio_handler_invoke;
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:        boost::asio::is_dynamic_buffer<DynamicBuffer>::value,
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:        boost::asio::is_dynamic_buffer<DynamicBuffer>::value,
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:        if(ec == boost::asio::error::eof)
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:        boost::asio::is_dynamic_buffer<DynamicBuffer>::value,
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:        boost::asio::is_dynamic_buffer<DynamicBuffer>::value,
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:        boost::asio::is_dynamic_buffer<DynamicBuffer>::value,
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:        boost::asio::is_dynamic_buffer<DynamicBuffer>::value,
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:        boost::asio::is_dynamic_buffer<DynamicBuffer>::value,
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:        boost::asio::is_dynamic_buffer<DynamicBuffer>::value,
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:        boost::asio::is_dynamic_buffer<DynamicBuffer>::value,
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:        boost::asio::is_dynamic_buffer<DynamicBuffer>::value,
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:        boost::asio::is_dynamic_buffer<DynamicBuffer>::value,
/home/kaworu/boost_1_69_0/boost/beast/http/impl/read.ipp:        boost::asio::is_dynamic_buffer<DynamicBuffer>::value,
/home/kaworu/boost_1_69_0/boost/beast/http/impl/write.ipp:    boost::asio::executor_work_guard<decltype(
/home/kaworu/boost_1_69_0/boost/beast/http/impl/write.ipp:        boost::asio::associated_allocator_t<Handler>;
/home/kaworu/boost_1_69_0/boost/beast/http/impl/write.ipp:        return (boost::asio::get_associated_allocator)(h_);
/home/kaworu/boost_1_69_0/boost/beast/http/impl/write.ipp:    using executor_type = boost::asio::associated_executor_t<
/home/kaworu/boost_1_69_0/boost/beast/http/impl/write.ipp:        return (boost::asio::get_associated_executor)(
/home/kaworu/boost_1_69_0/boost/beast/http/impl/write.ipp:        using boost::asio::asio_handler_is_continuation;
/home/kaworu/boost_1_69_0/boost/beast/http/impl/write.ipp:        using boost::asio::asio_handler_invoke;
/home/kaworu/boost_1_69_0/boost/beast/http/impl/write.ipp:            return boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/http/impl/write.ipp:    return boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/http/impl/write.ipp:class write_op : public boost::asio::coroutine
/home/kaworu/boost_1_69_0/boost/beast/http/impl/write.ipp:    boost::asio::executor_work_guard<decltype(
/home/kaworu/boost_1_69_0/boost/beast/http/impl/write.ipp:                using boost::asio::asio_handler_is_continuation;
/home/kaworu/boost_1_69_0/boost/beast/http/impl/write.ipp:        boost::asio::associated_allocator_t<Handler>;
/home/kaworu/boost_1_69_0/boost/beast/http/impl/write.ipp:        return (boost::asio::get_associated_allocator)(h_);
/home/kaworu/boost_1_69_0/boost/beast/http/impl/write.ipp:    using executor_type = boost::asio::associated_executor_t<
/home/kaworu/boost_1_69_0/boost/beast/http/impl/write.ipp:        return (boost::asio::get_associated_executor)(
/home/kaworu/boost_1_69_0/boost/beast/http/impl/write.ipp:        using boost::asio::asio_handler_invoke;
/home/kaworu/boost_1_69_0/boost/beast/http/impl/write.ipp:            boost::asio::post(
/home/kaworu/boost_1_69_0/boost/beast/http/impl/write.ipp:        boost::asio::executor_work_guard<decltype(
/home/kaworu/boost_1_69_0/boost/beast/http/impl/write.ipp:        boost::asio::associated_allocator_t<Handler>;
/home/kaworu/boost_1_69_0/boost/beast/http/impl/write.ipp:        return (boost::asio::get_associated_allocator)(d_.handler());
/home/kaworu/boost_1_69_0/boost/beast/http/impl/write.ipp:    using executor_type = boost::asio::associated_executor_t<
/home/kaworu/boost_1_69_0/boost/beast/http/impl/write.ipp:        return (boost::asio::get_associated_executor)(
/home/kaworu/boost_1_69_0/boost/beast/http/impl/write.ipp:        using boost::asio::asio_handler_is_continuation;
/home/kaworu/boost_1_69_0/boost/beast/http/impl/write.ipp:        using boost::asio::asio_handler_invoke;
/home/kaworu/boost_1_69_0/boost/beast/http/impl/write.ipp:        bytes_transferred = boost::asio::write(
/home/kaworu/boost_1_69_0/boost/beast/http/impl/file_body_win32.ipp:            boost::asio::basic_stream_socket<Protocol>& sock,
/home/kaworu/boost_1_69_0/boost/beast/http/impl/file_body_win32.ipp:            boost::asio::basic_stream_socket<Protocol>& sock,
/home/kaworu/boost_1_69_0/boost/beast/http/impl/file_body_win32.ipp:            boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/boost/beast/http/impl/file_body_win32.ipp:    boost::asio::basic_stream_socket<Protocol>& sock_;
/home/kaworu/boost_1_69_0/boost/beast/http/impl/file_body_win32.ipp:    boost::asio::executor_work_guard<decltype(std::declval<
/home/kaworu/boost_1_69_0/boost/beast/http/impl/file_body_win32.ipp:        boost::asio::basic_stream_socket<Protocol>&>().get_executor())> wg_;
/home/kaworu/boost_1_69_0/boost/beast/http/impl/file_body_win32.ipp:        boost::asio::basic_stream_socket<Protocol>& s,
/home/kaworu/boost_1_69_0/boost/beast/http/impl/file_body_win32.ipp:        boost::asio::associated_allocator_t<Handler>;
/home/kaworu/boost_1_69_0/boost/beast/http/impl/file_body_win32.ipp:        return (boost::asio::get_associated_allocator)(h_);
/home/kaworu/boost_1_69_0/boost/beast/http/impl/file_body_win32.ipp:        boost::asio::associated_executor_t<Handler, decltype(std::declval<
/home/kaworu/boost_1_69_0/boost/beast/http/impl/file_body_win32.ipp:            boost::asio::basic_stream_socket<Protocol>&>().get_executor())>;
/home/kaworu/boost_1_69_0/boost/beast/http/impl/file_body_win32.ipp:        return (boost::asio::get_associated_executor)(
/home/kaworu/boost_1_69_0/boost/beast/http/impl/file_body_win32.ipp:        using boost::asio::asio_handler_is_continuation;
/home/kaworu/boost_1_69_0/boost/beast/http/impl/file_body_win32.ipp:        using boost::asio::asio_handler_invoke;
/home/kaworu/boost_1_69_0/boost/beast/http/impl/file_body_win32.ipp:    boost::asio::windows::overlapped_ptr overlapped{
/home/kaworu/boost_1_69_0/boost/beast/http/impl/file_body_win32.ipp:    boost::asio::basic_stream_socket<Protocol>& sock,
/home/kaworu/boost_1_69_0/boost/beast/http/impl/file_body_win32.ipp:    boost::asio::basic_stream_socket<Protocol>& sock,
/home/kaworu/boost_1_69_0/boost/beast/http/chunk_encode.hpp:        boost::asio::write(stream, chunk_crlf{});
/home/kaworu/boost_1_69_0/boost/beast/http/chunk_encode.hpp:        boost::asio::write(stream, chunk_header{1024, "x"});
/home/kaworu/boost_1_69_0/boost/beast/http/chunk_encode.hpp:        boost::asio::const_buffer,   // chunk-extensions
/home/kaworu/boost_1_69_0/boost/beast/http/chunk_encode.hpp:        boost::asio::const_buffer,   // chunk-extensions
/home/kaworu/boost_1_69_0/boost/beast/http/chunk_encode.hpp:        boost::asio::is_const_buffer_sequence<Trailer>::value,
/home/kaworu/boost_1_69_0/boost/beast/http/span_body.hpp:            using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/beast/http/span_body.hpp:            using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/boost/beast/http/span_body.hpp:            buffer_copy(boost::asio::buffer(
/home/kaworu/boost_1_69_0/boost/beast/http/span_body.hpp:            boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/boost/beast/http/detail/chunk_encode.hpp:    virtual boost::asio::const_buffer str() = 0;
/home/kaworu/boost_1_69_0/boost/beast/http/detail/chunk_encode.hpp:    boost::asio::const_buffer
/home/kaworu/boost_1_69_0/boost/beast/http/detail/chunk_encode.hpp:        boost::asio::const_buffer b;
/home/kaworu/boost_1_69_0/boost/beast/http/detail/chunk_encode.hpp:    using value_type = boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/boost/beast/http/detail/chunk_encode.hpp:boost::asio::const_buffer
/home/kaworu/boost_1_69_0/boost/beast/http/detail/chunk_encode.hpp:boost::asio::const_buffer
/home/kaworu/boost_1_69_0/boost/beast/http/detail/chunk_encode.hpp:        boost::asio::const_buffer() const
/home/kaworu/boost_1_69_0/boost/beast/http/detail/chunk_encode.hpp:        boost::asio::const_buffer() const
/home/kaworu/boost_1_69_0/boost/beast/http/error.hpp:        and the stream returns the error `boost::asio::error::eof`
/home/kaworu/boost_1_69_0/boost/asio/read.hpp: * @defgroup read boost::asio::read
/home/kaworu/boost_1_69_0/boost/asio/read.hpp: * @code boost::asio::read(s, boost::asio::buffer(data, size)); @endcode
/home/kaworu/boost_1_69_0/boost/asio/read.hpp: * @code boost::asio::read(
/home/kaworu/boost_1_69_0/boost/asio/read.hpp: *     boost::asio::transfer_all()); @endcode
/home/kaworu/boost_1_69_0/boost/asio/read.hpp: * @code boost::asio::read(s, boost::asio::buffer(data, size), ec); @endcode
/home/kaworu/boost_1_69_0/boost/asio/read.hpp: * @code boost::asio::read(
/home/kaworu/boost_1_69_0/boost/asio/read.hpp: *     boost::asio::transfer_all(), ec); @endcode
/home/kaworu/boost_1_69_0/boost/asio/read.hpp: * @code boost::asio::read(s, boost::asio::buffer(data, size),
/home/kaworu/boost_1_69_0/boost/asio/read.hpp: *     boost::asio::transfer_at_least(32)); @endcode
/home/kaworu/boost_1_69_0/boost/asio/read.hpp: * @code boost::asio::read(
/home/kaworu/boost_1_69_0/boost/asio/read.hpp: *     boost::asio::transfer_all()); @endcode
/home/kaworu/boost_1_69_0/boost/asio/read.hpp: * @code boost::asio::read(
/home/kaworu/boost_1_69_0/boost/asio/read.hpp: *     boost::asio::transfer_all(), ec); @endcode
/home/kaworu/boost_1_69_0/boost/asio/read.hpp: * @code boost::asio::read(
/home/kaworu/boost_1_69_0/boost/asio/read.hpp: *     boost::asio::transfer_all()); @endcode
/home/kaworu/boost_1_69_0/boost/asio/read.hpp: * @code boost::asio::read(
/home/kaworu/boost_1_69_0/boost/asio/read.hpp: *     boost::asio::transfer_all(), ec); @endcode
/home/kaworu/boost_1_69_0/boost/asio/read.hpp: * @defgroup async_read boost::asio::async_read
/home/kaworu/boost_1_69_0/boost/asio/read.hpp: * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/read.hpp: * boost::asio::async_read(s, boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/boost/asio/read.hpp: * @code boost::asio::async_read(
/home/kaworu/boost_1_69_0/boost/asio/read.hpp: *     boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/boost/asio/read.hpp: * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/read.hpp: * @code boost::asio::async_read(s,
/home/kaworu/boost_1_69_0/boost/asio/read.hpp: *     boost::asio::buffer(data, size),
/home/kaworu/boost_1_69_0/boost/asio/read.hpp: *     boost::asio::transfer_at_least(32),
/home/kaworu/boost_1_69_0/boost/asio/read.hpp: * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/read.hpp: * @code boost::asio::async_read(
/home/kaworu/boost_1_69_0/boost/asio/read.hpp: *     boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/boost/asio/read.hpp: * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/read.hpp: * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/read.hpp: * @code boost::asio::async_read(
/home/kaworu/boost_1_69_0/boost/asio/read.hpp: *     boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/boost/asio/read.hpp: * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/spawn.hpp: * @defgroup spawn boost::asio::spawn
/home/kaworu/boost_1_69_0/boost/asio/spawn.hpp: * @code boost::asio::spawn(my_strand, do_echo);
/home/kaworu/boost_1_69_0/boost/asio/spawn.hpp: * void do_echo(boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/boost/asio/spawn.hpp: *           boost::asio::buffer(data), yield);
/home/kaworu/boost_1_69_0/boost/asio/spawn.hpp: *       boost::asio::async_write(my_socket,
/home/kaworu/boost_1_69_0/boost/asio/spawn.hpp: *           boost::asio::buffer(data, length), yield);
/home/kaworu/boost_1_69_0/boost/asio/spawn.hpp:void spawn(const boost::asio::io_context::strand& s,
/home/kaworu/boost_1_69_0/boost/asio/placeholders.hpp:/// as boost::asio::basic_stream_socket::async_write_some or
/home/kaworu/boost_1_69_0/boost/asio/placeholders.hpp:/// boost::asio::async_write.
/home/kaworu/boost_1_69_0/boost/asio/placeholders.hpp:/// boost::asio::async_connect.
/home/kaworu/boost_1_69_0/boost/asio/placeholders.hpp:/// boost::asio::basic_resolver::async_resolve.
/home/kaworu/boost_1_69_0/boost/asio/placeholders.hpp:/// boost::asio::async_connect.
/home/kaworu/boost_1_69_0/boost/asio/placeholders.hpp:/// boost::asio::signal_set::async_wait.
/home/kaworu/boost_1_69_0/boost/asio/placeholders.hpp:  = boost::asio::placeholders::detail::placeholder<1>::get();
/home/kaworu/boost_1_69_0/boost/asio/placeholders.hpp:  = boost::asio::placeholders::detail::placeholder<2>::get();
/home/kaworu/boost_1_69_0/boost/asio/placeholders.hpp:  = boost::asio::placeholders::detail::placeholder<2>::get();
/home/kaworu/boost_1_69_0/boost/asio/placeholders.hpp:  = boost::asio::placeholders::detail::placeholder<2>::get();
/home/kaworu/boost_1_69_0/boost/asio/placeholders.hpp:  = boost::asio::placeholders::detail::placeholder<2>::get();
/home/kaworu/boost_1_69_0/boost/asio/placeholders.hpp:  = boost::asio::placeholders::detail::placeholder<2>::get();
/home/kaworu/boost_1_69_0/boost/asio/placeholders.hpp:    = boost::asio::placeholders::detail::placeholder<1>::get();
/home/kaworu/boost_1_69_0/boost/asio/placeholders.hpp:    = boost::asio::placeholders::detail::placeholder<2>::get();
/home/kaworu/boost_1_69_0/boost/asio/placeholders.hpp:    = boost::asio::placeholders::detail::placeholder<2>::get();
/home/kaworu/boost_1_69_0/boost/asio/placeholders.hpp:    = boost::asio::placeholders::detail::placeholder<2>::get();
/home/kaworu/boost_1_69_0/boost/asio/placeholders.hpp:    = boost::asio::placeholders::detail::placeholder<2>::get();
/home/kaworu/boost_1_69_0/boost/asio/placeholders.hpp:    = boost::asio::placeholders::detail::placeholder<2>::get();
/home/kaworu/boost_1_69_0/boost/asio/socket_acceptor_service.hpp:  : public boost::asio::io_context::service
/home/kaworu/boost_1_69_0/boost/asio/socket_acceptor_service.hpp:  : public boost::asio::detail::service_base<socket_acceptor_service<Protocol> >
/home/kaworu/boost_1_69_0/boost/asio/socket_acceptor_service.hpp:  static boost::asio::io_context::id id;
/home/kaworu/boost_1_69_0/boost/asio/socket_acceptor_service.hpp:  explicit socket_acceptor_service(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/socket_acceptor_service.hpp:    : boost::asio::detail::service_base<
/home/kaworu/boost_1_69_0/boost/asio/socket_acceptor_service.hpp:      boost::asio::io_context* peer_io_context, endpoint_type* peer_endpoint,
/home/kaworu/boost_1_69_0/boost/asio/buffered_write_stream.hpp:  boost::asio::io_context& get_io_context()
/home/kaworu/boost_1_69_0/boost/asio/buffered_write_stream.hpp:  boost::asio::io_context& get_io_service()
/home/kaworu/boost_1_69_0/boost/asio/execution_context.hpp:   * @throws boost::asio::service_already_exists Thrown if a service of the
/home/kaworu/boost_1_69_0/boost/asio/execution_context.hpp:   * @throws boost::asio::service_already_exists Thrown if a service of the
/home/kaworu/boost_1_69_0/boost/asio/execution_context.hpp:   * @throws boost::asio::invalid_service_owner Thrown if the service's owning
/home/kaworu/boost_1_69_0/boost/asio/execution_context.hpp:  boost::asio::detail::service_registry* service_registry_;
/home/kaworu/boost_1_69_0/boost/asio/execution_context.hpp:  friend class boost::asio::detail::service_registry;
/home/kaworu/boost_1_69_0/boost/asio/seq_packet_socket_service.hpp:  : public boost::asio::io_context::service
/home/kaworu/boost_1_69_0/boost/asio/seq_packet_socket_service.hpp:  : public boost::asio::detail::service_base<
/home/kaworu/boost_1_69_0/boost/asio/seq_packet_socket_service.hpp:  static boost::asio::io_context::id id;
/home/kaworu/boost_1_69_0/boost/asio/seq_packet_socket_service.hpp:  explicit seq_packet_socket_service(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/seq_packet_socket_service.hpp:    : boost::asio::detail::service_base<
/home/kaworu/boost_1_69_0/boost/asio/seq_packet_socket_service.hpp:      ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_stream_handle.hpp:  explicit basic_stream_handle(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_stream_handle.hpp:  basic_stream_handle(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_stream_handle.hpp:   * boost::asio::error::eof indicates that the connection was closed by the
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_stream_handle.hpp:   * handle.write_some(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_stream_handle.hpp:    boost::asio::detail::throw_error(ec, "write_some");
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_stream_handle.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_stream_handle.hpp:   * handle.async_write_some(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_stream_handle.hpp:   * boost::asio::error::eof indicates that the connection was closed by the
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_stream_handle.hpp:   * handle.read_some(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_stream_handle.hpp:    boost::asio::detail::throw_error(ec, "read_some");
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_stream_handle.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_stream_handle.hpp:   * handle.async_read_some(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/boost/asio/windows/random_access_handle_service.hpp:  : public boost::asio::io_context::service
/home/kaworu/boost_1_69_0/boost/asio/windows/random_access_handle_service.hpp:  : public boost::asio::detail::service_base<random_access_handle_service>
/home/kaworu/boost_1_69_0/boost/asio/windows/random_access_handle_service.hpp:  static boost::asio::io_context::id id;
/home/kaworu/boost_1_69_0/boost/asio/windows/random_access_handle_service.hpp:  explicit random_access_handle_service(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/windows/random_access_handle_service.hpp:    : boost::asio::detail::service_base<
/home/kaworu/boost_1_69_0/boost/asio/windows/random_access_handle_service.hpp:    boost::asio::async_completion<WriteHandler,
/home/kaworu/boost_1_69_0/boost/asio/windows/random_access_handle_service.hpp:    boost::asio::async_completion<ReadHandler,
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_handle.hpp:  explicit basic_handle(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_handle.hpp:  basic_handle(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_handle.hpp:    boost::asio::detail::throw_error(ec, "assign");
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_handle.hpp:    boost::asio::detail::throw_error(ec, "assign");
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_handle.hpp:   * boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_handle.hpp:    boost::asio::detail::throw_error(ec, "close");
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_handle.hpp:   * boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_handle.hpp:   * passed the boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_handle.hpp:    boost::asio::detail::throw_error(ec, "cancel");
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_handle.hpp:   * passed the boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/windows/stream_handle.hpp:  explicit stream_handle(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/windows/stream_handle.hpp:  stream_handle(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/windows/stream_handle.hpp:   * boost::asio::error::eof indicates that the connection was closed by the
/home/kaworu/boost_1_69_0/boost/asio/windows/stream_handle.hpp:   * handle.write_some(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/boost/asio/windows/stream_handle.hpp:    boost::asio::detail::throw_error(ec, "write_some");
/home/kaworu/boost_1_69_0/boost/asio/windows/stream_handle.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/windows/stream_handle.hpp:   * handle.async_write_some(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/boost/asio/windows/stream_handle.hpp:    boost::asio::async_completion<WriteHandler,
/home/kaworu/boost_1_69_0/boost/asio/windows/stream_handle.hpp:   * boost::asio::error::eof indicates that the connection was closed by the
/home/kaworu/boost_1_69_0/boost/asio/windows/stream_handle.hpp:   * handle.read_some(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/boost/asio/windows/stream_handle.hpp:    boost::asio::detail::throw_error(ec, "read_some");
/home/kaworu/boost_1_69_0/boost/asio/windows/stream_handle.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/windows/stream_handle.hpp:   * handle.async_read_some(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/boost/asio/windows/stream_handle.hpp:    boost::asio::async_completion<ReadHandler,
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_object_handle.hpp:  explicit basic_object_handle(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_object_handle.hpp:  basic_object_handle(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_object_handle.hpp:    boost::asio::detail::throw_error(ec, "wait");
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_object_handle.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/windows/stream_handle_service.hpp:  : public boost::asio::io_context::service
/home/kaworu/boost_1_69_0/boost/asio/windows/stream_handle_service.hpp:  : public boost::asio::detail::service_base<stream_handle_service>
/home/kaworu/boost_1_69_0/boost/asio/windows/stream_handle_service.hpp:  static boost::asio::io_context::id id;
/home/kaworu/boost_1_69_0/boost/asio/windows/stream_handle_service.hpp:  explicit stream_handle_service(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/windows/stream_handle_service.hpp:    : boost::asio::detail::service_base<stream_handle_service>(io_context),
/home/kaworu/boost_1_69_0/boost/asio/windows/stream_handle_service.hpp:    boost::asio::async_completion<WriteHandler,
/home/kaworu/boost_1_69_0/boost/asio/windows/stream_handle_service.hpp:    boost::asio::async_completion<ReadHandler,
/home/kaworu/boost_1_69_0/boost/asio/windows/object_handle.hpp:#define BOOST_ASIO_SVC_T boost::asio::detail::win_object_handle_service
/home/kaworu/boost_1_69_0/boost/asio/windows/object_handle.hpp:  explicit object_handle(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/windows/object_handle.hpp:  object_handle(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/windows/object_handle.hpp:    boost::asio::detail::throw_error(ec, "assign");
/home/kaworu/boost_1_69_0/boost/asio/windows/object_handle.hpp:  boost::asio::io_context& get_io_context()
/home/kaworu/boost_1_69_0/boost/asio/windows/object_handle.hpp:  boost::asio::io_context& get_io_service()
/home/kaworu/boost_1_69_0/boost/asio/windows/object_handle.hpp:    boost::asio::detail::throw_error(ec, "assign");
/home/kaworu/boost_1_69_0/boost/asio/windows/object_handle.hpp:   * boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/windows/object_handle.hpp:    boost::asio::detail::throw_error(ec, "close");
/home/kaworu/boost_1_69_0/boost/asio/windows/object_handle.hpp:   * boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/windows/object_handle.hpp:   * passed the boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/windows/object_handle.hpp:    boost::asio::detail::throw_error(ec, "cancel");
/home/kaworu/boost_1_69_0/boost/asio/windows/object_handle.hpp:   * passed the boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/windows/object_handle.hpp:    boost::asio::detail::throw_error(ec, "wait");
/home/kaworu/boost_1_69_0/boost/asio/windows/object_handle.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/windows/object_handle.hpp:    boost::asio::async_completion<WaitHandler,
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_random_access_handle.hpp:  explicit basic_random_access_handle(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_random_access_handle.hpp:  basic_random_access_handle(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_random_access_handle.hpp:   * boost::asio::error::eof indicates that the connection was closed by the
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_random_access_handle.hpp:   * handle.write_some_at(42, boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_random_access_handle.hpp:    boost::asio::detail::throw_error(ec, "write_some_at");
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_random_access_handle.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_random_access_handle.hpp:   * handle.async_write_some_at(42, boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_random_access_handle.hpp:   * boost::asio::error::eof indicates that the connection was closed by the
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_random_access_handle.hpp:   * handle.read_some_at(42, boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_random_access_handle.hpp:    boost::asio::detail::throw_error(ec, "read_some_at");
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_random_access_handle.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/windows/basic_random_access_handle.hpp:   * handle.async_read_some_at(42, boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/boost/asio/windows/object_handle_service.hpp:  : public boost::asio::io_context::service
/home/kaworu/boost_1_69_0/boost/asio/windows/object_handle_service.hpp:  : public boost::asio::detail::service_base<object_handle_service>
/home/kaworu/boost_1_69_0/boost/asio/windows/object_handle_service.hpp:  static boost::asio::io_context::id id;
/home/kaworu/boost_1_69_0/boost/asio/windows/object_handle_service.hpp:  explicit object_handle_service(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/windows/object_handle_service.hpp:    : boost::asio::detail::service_base<object_handle_service>(io_context),
/home/kaworu/boost_1_69_0/boost/asio/windows/object_handle_service.hpp:    boost::asio::async_completion<WaitHandler,
/home/kaworu/boost_1_69_0/boost/asio/windows/overlapped_handle.hpp:#define BOOST_ASIO_SVC_T boost::asio::detail::win_iocp_handle_service
/home/kaworu/boost_1_69_0/boost/asio/windows/overlapped_handle.hpp:  explicit overlapped_handle(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/windows/overlapped_handle.hpp:  overlapped_handle(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/windows/overlapped_handle.hpp:    boost::asio::detail::throw_error(ec, "assign");
/home/kaworu/boost_1_69_0/boost/asio/windows/overlapped_handle.hpp:  boost::asio::io_context& get_io_context()
/home/kaworu/boost_1_69_0/boost/asio/windows/overlapped_handle.hpp:  boost::asio::io_context& get_io_service()
/home/kaworu/boost_1_69_0/boost/asio/windows/overlapped_handle.hpp:    boost::asio::detail::throw_error(ec, "assign");
/home/kaworu/boost_1_69_0/boost/asio/windows/overlapped_handle.hpp:   * boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/windows/overlapped_handle.hpp:    boost::asio::detail::throw_error(ec, "close");
/home/kaworu/boost_1_69_0/boost/asio/windows/overlapped_handle.hpp:   * boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/windows/overlapped_handle.hpp:   * passed the boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/windows/overlapped_handle.hpp:    boost::asio::detail::throw_error(ec, "cancel");
/home/kaworu/boost_1_69_0/boost/asio/windows/overlapped_handle.hpp:   * passed the boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/windows/overlapped_ptr.hpp:  explicit overlapped_ptr(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/windows/overlapped_ptr.hpp:  void reset(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/windows/random_access_handle.hpp:  explicit random_access_handle(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/windows/random_access_handle.hpp:  random_access_handle(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/windows/random_access_handle.hpp:   * boost::asio::error::eof indicates that the connection was closed by the
/home/kaworu/boost_1_69_0/boost/asio/windows/random_access_handle.hpp:   * handle.write_some_at(42, boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/boost/asio/windows/random_access_handle.hpp:    boost::asio::detail::throw_error(ec, "write_some_at");
/home/kaworu/boost_1_69_0/boost/asio/windows/random_access_handle.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/windows/random_access_handle.hpp:   * handle.async_write_some_at(42, boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/boost/asio/windows/random_access_handle.hpp:    boost::asio::async_completion<WriteHandler,
/home/kaworu/boost_1_69_0/boost/asio/windows/random_access_handle.hpp:   * boost::asio::error::eof indicates that the connection was closed by the
/home/kaworu/boost_1_69_0/boost/asio/windows/random_access_handle.hpp:   * handle.read_some_at(42, boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/boost/asio/windows/random_access_handle.hpp:    boost::asio::detail::throw_error(ec, "read_some_at");
/home/kaworu/boost_1_69_0/boost/asio/windows/random_access_handle.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/windows/random_access_handle.hpp:   * handle.async_read_some_at(42, boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/boost/asio/windows/random_access_handle.hpp:    boost::asio::async_completion<ReadHandler,
/home/kaworu/boost_1_69_0/boost/asio/basic_datagram_socket.hpp:  explicit basic_datagram_socket(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/basic_datagram_socket.hpp:  basic_datagram_socket(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/basic_datagram_socket.hpp:  basic_datagram_socket(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/basic_datagram_socket.hpp:  basic_datagram_socket(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/basic_datagram_socket.hpp:   * @code socket.send(boost::asio::buffer(data, size)); @endcode
/home/kaworu/boost_1_69_0/boost/asio/basic_datagram_socket.hpp:    boost::asio::detail::throw_error(ec, "send");
/home/kaworu/boost_1_69_0/boost/asio/basic_datagram_socket.hpp:    boost::asio::detail::throw_error(ec, "send");
/home/kaworu/boost_1_69_0/boost/asio/basic_datagram_socket.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_datagram_socket.hpp:   * socket.async_send(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/boost/asio/basic_datagram_socket.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_datagram_socket.hpp:   * boost::asio::ip::udp::endpoint destination(
/home/kaworu/boost_1_69_0/boost/asio/basic_datagram_socket.hpp:   *     boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/boost/asio/basic_datagram_socket.hpp:   * socket.send_to(boost::asio::buffer(data, size), destination);
/home/kaworu/boost_1_69_0/boost/asio/basic_datagram_socket.hpp:    boost::asio::detail::throw_error(ec, "send_to");
/home/kaworu/boost_1_69_0/boost/asio/basic_datagram_socket.hpp:    boost::asio::detail::throw_error(ec, "send_to");
/home/kaworu/boost_1_69_0/boost/asio/basic_datagram_socket.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_datagram_socket.hpp:   * boost::asio::ip::udp::endpoint destination(
/home/kaworu/boost_1_69_0/boost/asio/basic_datagram_socket.hpp:   *     boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/boost/asio/basic_datagram_socket.hpp:   *     boost::asio::buffer(data, size), destination, handler);
/home/kaworu/boost_1_69_0/boost/asio/basic_datagram_socket.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_datagram_socket.hpp:   * @code socket.receive(boost::asio::buffer(data, size)); @endcode
/home/kaworu/boost_1_69_0/boost/asio/basic_datagram_socket.hpp:    boost::asio::detail::throw_error(ec, "receive");
/home/kaworu/boost_1_69_0/boost/asio/basic_datagram_socket.hpp:    boost::asio::detail::throw_error(ec, "receive");
/home/kaworu/boost_1_69_0/boost/asio/basic_datagram_socket.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_datagram_socket.hpp:   * socket.async_receive(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/boost/asio/basic_datagram_socket.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_datagram_socket.hpp:   * boost::asio::ip::udp::endpoint sender_endpoint;
/home/kaworu/boost_1_69_0/boost/asio/basic_datagram_socket.hpp:   *     boost::asio::buffer(data, size), sender_endpoint);
/home/kaworu/boost_1_69_0/boost/asio/basic_datagram_socket.hpp:    boost::asio::detail::throw_error(ec, "receive_from");
/home/kaworu/boost_1_69_0/boost/asio/basic_datagram_socket.hpp:    boost::asio::detail::throw_error(ec, "receive_from");
/home/kaworu/boost_1_69_0/boost/asio/basic_datagram_socket.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_datagram_socket.hpp:   *     boost::asio::buffer(data, size), sender_endpoint, handler); @endcode
/home/kaworu/boost_1_69_0/boost/asio/basic_datagram_socket.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_seq_packet_socket.hpp:  explicit basic_seq_packet_socket(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/basic_seq_packet_socket.hpp:  basic_seq_packet_socket(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/basic_seq_packet_socket.hpp:  basic_seq_packet_socket(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/basic_seq_packet_socket.hpp:  basic_seq_packet_socket(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/basic_seq_packet_socket.hpp:   * socket.send(boost::asio::buffer(data, size), 0);
/home/kaworu/boost_1_69_0/boost/asio/basic_seq_packet_socket.hpp:    boost::asio::detail::throw_error(ec, "send");
/home/kaworu/boost_1_69_0/boost/asio/basic_seq_packet_socket.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_seq_packet_socket.hpp:   * socket.async_send(boost::asio::buffer(data, size), 0, handler);
/home/kaworu/boost_1_69_0/boost/asio/basic_seq_packet_socket.hpp:   * boost::asio::error::eof indicates that the connection was closed by the
/home/kaworu/boost_1_69_0/boost/asio/basic_seq_packet_socket.hpp:   * socket.receive(boost::asio::buffer(data, size), out_flags);
/home/kaworu/boost_1_69_0/boost/asio/basic_seq_packet_socket.hpp:    boost::asio::detail::throw_error(ec, "receive");
/home/kaworu/boost_1_69_0/boost/asio/basic_seq_packet_socket.hpp:   * boost::asio::error::eof indicates that the connection was closed by the
/home/kaworu/boost_1_69_0/boost/asio/basic_seq_packet_socket.hpp:   * socket.receive(boost::asio::buffer(data, size), 0, out_flags);
/home/kaworu/boost_1_69_0/boost/asio/basic_seq_packet_socket.hpp:    boost::asio::detail::throw_error(ec, "receive");
/home/kaworu/boost_1_69_0/boost/asio/basic_seq_packet_socket.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_seq_packet_socket.hpp:   * socket.async_receive(boost::asio::buffer(data, size), out_flags, handler);
/home/kaworu/boost_1_69_0/boost/asio/basic_seq_packet_socket.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_seq_packet_socket.hpp:   *     boost::asio::buffer(data, size),
/home/kaworu/boost_1_69_0/boost/asio/datagram_socket_service.hpp:  : public boost::asio::io_context::service
/home/kaworu/boost_1_69_0/boost/asio/datagram_socket_service.hpp:  : public boost::asio::detail::service_base<datagram_socket_service<Protocol> >
/home/kaworu/boost_1_69_0/boost/asio/datagram_socket_service.hpp:  static boost::asio::io_context::id id;
/home/kaworu/boost_1_69_0/boost/asio/datagram_socket_service.hpp:  explicit datagram_socket_service(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/datagram_socket_service.hpp:    : boost::asio::detail::service_base<
/home/kaworu/boost_1_69_0/boost/asio/datagram_socket_service.hpp:      ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/raw_socket_service.hpp:  : public boost::asio::io_context::service
/home/kaworu/boost_1_69_0/boost/asio/raw_socket_service.hpp:  : public boost::asio::detail::service_base<raw_socket_service<Protocol> >
/home/kaworu/boost_1_69_0/boost/asio/raw_socket_service.hpp:  static boost::asio::io_context::id id;
/home/kaworu/boost_1_69_0/boost/asio/raw_socket_service.hpp:  explicit raw_socket_service(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/raw_socket_service.hpp:    : boost::asio::detail::service_base<
/home/kaworu/boost_1_69_0/boost/asio/raw_socket_service.hpp:      ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/experimental/detached.hpp: * @c boost::asio::experimental::detached. For example:
/home/kaworu/boost_1_69_0/boost/asio/experimental/detached.hpp: * @code my_socket.async_send(my_buffer, boost::asio::experimental::detached);
/home/kaworu/boost_1_69_0/boost/asio/experimental/detached.hpp: * See the documentation for boost::asio::experimental::detached_t for a usage
/home/kaworu/boost_1_69_0/boost/asio/experimental/impl/detached.hpp:  typedef boost::asio::experimental::detail::detached_handler
/home/kaworu/boost_1_69_0/boost/asio/experimental/impl/co_spawn.hpp:    return boost::asio::detail::thread_info_base::allocate(
/home/kaworu/boost_1_69_0/boost/asio/experimental/impl/co_spawn.hpp:        boost::asio::detail::thread_info_base::awaitee_tag(),
/home/kaworu/boost_1_69_0/boost/asio/experimental/impl/co_spawn.hpp:        boost::asio::detail::thread_context::thread_call_stack::top(),
/home/kaworu/boost_1_69_0/boost/asio/experimental/impl/co_spawn.hpp:    boost::asio::detail::thread_info_base::deallocate(
/home/kaworu/boost_1_69_0/boost/asio/experimental/impl/co_spawn.hpp:        boost::asio::detail::thread_info_base::awaitee_tag(),
/home/kaworu/boost_1_69_0/boost/asio/experimental/impl/co_spawn.hpp:        boost::asio::detail::thread_context::thread_call_stack::top(),
/home/kaworu/boost_1_69_0/boost/asio/experimental/impl/co_spawn.hpp:  boost::asio::experimental::detail::awaiter<Executor>*, Args...>
/home/kaworu/boost_1_69_0/boost/asio/experimental/impl/co_spawn.hpp:  typedef boost::asio::experimental::detail::awaiter<Executor> promise_type;
/home/kaworu/boost_1_69_0/boost/asio/experimental/impl/co_spawn.hpp:  boost::asio::experimental::awaitable<T, Executor>, Args...>
/home/kaworu/boost_1_69_0/boost/asio/experimental/impl/co_spawn.hpp:  typedef boost::asio::experimental::detail::awaitee<T, Executor> promise_type;
/home/kaworu/boost_1_69_0/boost/asio/signal_set.hpp: * boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/home/kaworu/boost_1_69_0/boost/asio/signal_set.hpp:  explicit signal_set(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/signal_set.hpp:   * @code boost::asio::signal_set signals(io_context);
/home/kaworu/boost_1_69_0/boost/asio/signal_set.hpp:  signal_set(boost::asio::io_context& io_context, int signal_number_1)
/home/kaworu/boost_1_69_0/boost/asio/signal_set.hpp:    boost::asio::detail::throw_error(ec, "add");
/home/kaworu/boost_1_69_0/boost/asio/signal_set.hpp:   * @code boost::asio::signal_set signals(io_context);
/home/kaworu/boost_1_69_0/boost/asio/signal_set.hpp:  signal_set(boost::asio::io_context& io_context, int signal_number_1,
/home/kaworu/boost_1_69_0/boost/asio/signal_set.hpp:    boost::asio::detail::throw_error(ec, "add");
/home/kaworu/boost_1_69_0/boost/asio/signal_set.hpp:    boost::asio::detail::throw_error(ec, "add");
/home/kaworu/boost_1_69_0/boost/asio/signal_set.hpp:   * @code boost::asio::signal_set signals(io_context);
/home/kaworu/boost_1_69_0/boost/asio/signal_set.hpp:  signal_set(boost::asio::io_context& io_context, int signal_number_1,
/home/kaworu/boost_1_69_0/boost/asio/signal_set.hpp:    boost::asio::detail::throw_error(ec, "add");
/home/kaworu/boost_1_69_0/boost/asio/signal_set.hpp:    boost::asio::detail::throw_error(ec, "add");
/home/kaworu/boost_1_69_0/boost/asio/signal_set.hpp:    boost::asio::detail::throw_error(ec, "add");
/home/kaworu/boost_1_69_0/boost/asio/signal_set.hpp:  boost::asio::io_context& get_io_context()
/home/kaworu/boost_1_69_0/boost/asio/signal_set.hpp:  boost::asio::io_context& get_io_service()
/home/kaworu/boost_1_69_0/boost/asio/signal_set.hpp:    boost::asio::detail::throw_error(ec, "add");
/home/kaworu/boost_1_69_0/boost/asio/signal_set.hpp:    boost::asio::detail::throw_error(ec, "remove");
/home/kaworu/boost_1_69_0/boost/asio/signal_set.hpp:    boost::asio::detail::throw_error(ec, "clear");
/home/kaworu/boost_1_69_0/boost/asio/signal_set.hpp:   * operation will be invoked with the boost::asio::error::operation_aborted
/home/kaworu/boost_1_69_0/boost/asio/signal_set.hpp:    boost::asio::detail::throw_error(ec, "cancel");
/home/kaworu/boost_1_69_0/boost/asio/signal_set.hpp:   * operation will be invoked with the boost::asio::error::operation_aborted
/home/kaworu/boost_1_69_0/boost/asio/signal_set.hpp:   * error code boost::asio::error::operation_aborted.
/home/kaworu/boost_1_69_0/boost/asio/signal_set.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/completion_condition.hpp: * std::size_t n = boost::asio::read(
/home/kaworu/boost_1_69_0/boost/asio/completion_condition.hpp: *     sock, boost::asio::buffer(buf),
/home/kaworu/boost_1_69_0/boost/asio/completion_condition.hpp: *     boost::asio::transfer_all(), ec);
/home/kaworu/boost_1_69_0/boost/asio/completion_condition.hpp: * std::size_t n = boost::asio::read(
/home/kaworu/boost_1_69_0/boost/asio/completion_condition.hpp: *     sock, boost::asio::buffer(buf),
/home/kaworu/boost_1_69_0/boost/asio/completion_condition.hpp: *     boost::asio::transfer_at_least(64), ec);
/home/kaworu/boost_1_69_0/boost/asio/completion_condition.hpp: * std::size_t n = boost::asio::read(
/home/kaworu/boost_1_69_0/boost/asio/completion_condition.hpp: *     sock, boost::asio::buffer(buf),
/home/kaworu/boost_1_69_0/boost/asio/completion_condition.hpp: *     boost::asio::transfer_exactly(64), ec);
/home/kaworu/boost_1_69_0/boost/asio/buffered_read_stream.hpp:  boost::asio::io_context& get_io_context()
/home/kaworu/boost_1_69_0/boost/asio/buffered_read_stream.hpp:  boost::asio::io_context& get_io_service()
/home/kaworu/boost_1_69_0/boost/asio/buffered_read_stream.hpp:    std::size_t bytes_copied = boost::asio::buffer_copy(
/home/kaworu/boost_1_69_0/boost/asio/buffered_read_stream.hpp:    return boost::asio::buffer_copy(buffers, storage_.data(), storage_.size());
/home/kaworu/boost_1_69_0/boost/asio/serial_port_service.hpp:  : public boost::asio::io_context::service
/home/kaworu/boost_1_69_0/boost/asio/serial_port_service.hpp:  : public boost::asio::detail::service_base<serial_port_service>
/home/kaworu/boost_1_69_0/boost/asio/serial_port_service.hpp:  static boost::asio::io_context::id id;
/home/kaworu/boost_1_69_0/boost/asio/serial_port_service.hpp:  explicit serial_port_service(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/serial_port_service.hpp:    : boost::asio::detail::service_base<serial_port_service>(io_context),
/home/kaworu/boost_1_69_0/boost/asio/ts/netfwd.hpp:    typename WaitTraits = boost::asio::wait_traits<Clock>
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_stream_descriptor.hpp:  explicit basic_stream_descriptor(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_stream_descriptor.hpp:  basic_stream_descriptor(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_stream_descriptor.hpp:   * boost::asio::error::eof indicates that the connection was closed by the
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_stream_descriptor.hpp:   * descriptor.write_some(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_stream_descriptor.hpp:    boost::asio::detail::throw_error(ec, "write_some");
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_stream_descriptor.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_stream_descriptor.hpp:   * descriptor.async_write_some(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_stream_descriptor.hpp:   * boost::asio::error::eof indicates that the connection was closed by the
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_stream_descriptor.hpp:   * descriptor.read_some(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_stream_descriptor.hpp:    boost::asio::detail::throw_error(ec, "read_some");
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_stream_descriptor.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_stream_descriptor.hpp:   * descriptor.async_read_some(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:#define BOOST_ASIO_SVC_T boost::asio::detail::reactive_descriptor_service
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:  explicit descriptor(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:  descriptor(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:    boost::asio::detail::throw_error(ec, "assign");
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:  boost::asio::io_context& get_io_context()
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:  boost::asio::io_context& get_io_service()
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:    boost::asio::detail::throw_error(ec, "assign");
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:   * boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:    boost::asio::detail::throw_error(ec, "close");
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:   * boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:   * boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:   * passed the boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:    boost::asio::detail::throw_error(ec, "cancel");
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:   * passed the boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:   * boost::asio::posix::descriptor_base::bytes_readable @n
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:   * boost::asio::posix::descriptor_base::non_blocking_io
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:   * boost::asio::posix::stream_descriptor descriptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:   * boost::asio::posix::stream_descriptor::bytes_readable command;
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:    boost::asio::detail::throw_error(ec, "io_control");
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:   * boost::asio::posix::descriptor_base::bytes_readable @n
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:   * boost::asio::posix::descriptor_base::non_blocking_io
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:   * boost::asio::posix::stream_descriptor descriptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:   * boost::asio::posix::stream_descriptor::bytes_readable command;
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:   * boost::asio::error::would_block if they are unable to perform the requested
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:   * boost::asio::error::would_block.
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:   * with boost::asio::error::would_block if they are unable to perform the
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:   * boost::asio::error::would_block.
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:    boost::asio::detail::throw_error(ec, "non_blocking");
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:   * with boost::asio::error::would_block if they are unable to perform the
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:   * boost::asio::error::would_block.
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:   * direct system calls may fail with boost::asio::error::would_block (or the
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:   * mode and direct system calls may fail with boost::asio::error::would_block
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:   * function fails with boost::asio::error::invalid_argument, as the
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:    boost::asio::detail::throw_error(ec, "native_non_blocking");
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:   * mode and direct system calls may fail with boost::asio::error::would_block
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:   * function fails with boost::asio::error::invalid_argument, as the
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:   * boost::asio::posix::stream_descriptor descriptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:   * descriptor.wait(boost::asio::posix::stream_descriptor::wait_read);
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:    boost::asio::detail::throw_error(ec, "wait");
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:   * boost::asio::posix::stream_descriptor descriptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:   * descriptor.wait(boost::asio::posix::stream_descriptor::wait_read, ec);
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:   * boost::asio::posix::stream_descriptor descriptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor.hpp:   *     boost::asio::posix::stream_descriptor::wait_read,
/home/kaworu/boost_1_69_0/boost/asio/posix/stream_descriptor_service.hpp:  : public boost::asio::io_context::service
/home/kaworu/boost_1_69_0/boost/asio/posix/stream_descriptor_service.hpp:  : public boost::asio::detail::service_base<stream_descriptor_service>
/home/kaworu/boost_1_69_0/boost/asio/posix/stream_descriptor_service.hpp:  static boost::asio::io_context::id id;
/home/kaworu/boost_1_69_0/boost/asio/posix/stream_descriptor_service.hpp:  explicit stream_descriptor_service(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/posix/stream_descriptor_service.hpp:    : boost::asio::detail::service_base<stream_descriptor_service>(io_context),
/home/kaworu/boost_1_69_0/boost/asio/posix/stream_descriptor_service.hpp:    boost::asio::async_completion<WriteHandler,
/home/kaworu/boost_1_69_0/boost/asio/posix/stream_descriptor_service.hpp:    boost::asio::async_completion<ReadHandler,
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:  explicit basic_descriptor(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:  basic_descriptor(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:    boost::asio::detail::throw_error(ec, "assign");
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:    boost::asio::detail::throw_error(ec, "assign");
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:   * boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:    boost::asio::detail::throw_error(ec, "close");
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:   * boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:   * boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:   * passed the boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:    boost::asio::detail::throw_error(ec, "cancel");
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:   * passed the boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:   * boost::asio::posix::descriptor_base::bytes_readable @n
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:   * boost::asio::posix::descriptor_base::non_blocking_io
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:   * boost::asio::posix::stream_descriptor descriptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:   * boost::asio::posix::stream_descriptor::bytes_readable command;
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:    boost::asio::detail::throw_error(ec, "io_control");
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:   * boost::asio::posix::descriptor_base::bytes_readable @n
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:   * boost::asio::posix::descriptor_base::non_blocking_io
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:   * boost::asio::posix::stream_descriptor descriptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:   * boost::asio::posix::stream_descriptor::bytes_readable command;
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:   * boost::asio::error::would_block if they are unable to perform the requested
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:   * boost::asio::error::would_block.
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:   * with boost::asio::error::would_block if they are unable to perform the
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:   * boost::asio::error::would_block.
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:    boost::asio::detail::throw_error(ec, "non_blocking");
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:   * with boost::asio::error::would_block if they are unable to perform the
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:   * boost::asio::error::would_block.
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:   * direct system calls may fail with boost::asio::error::would_block (or the
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:   * mode and direct system calls may fail with boost::asio::error::would_block
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:   * function fails with boost::asio::error::invalid_argument, as the
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:    boost::asio::detail::throw_error(ec, "native_non_blocking");
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:   * mode and direct system calls may fail with boost::asio::error::would_block
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:   * function fails with boost::asio::error::invalid_argument, as the
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:   * boost::asio::posix::stream_descriptor descriptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:   * descriptor.wait(boost::asio::posix::stream_descriptor::wait_read);
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:    boost::asio::detail::throw_error(ec, "wait");
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:   * boost::asio::posix::stream_descriptor descriptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:   * descriptor.wait(boost::asio::posix::stream_descriptor::wait_read, ec);
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:   * boost::asio::posix::stream_descriptor descriptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/posix/basic_descriptor.hpp:   *     boost::asio::posix::stream_descriptor::wait_read,
/home/kaworu/boost_1_69_0/boost/asio/posix/stream_descriptor.hpp:  explicit stream_descriptor(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/posix/stream_descriptor.hpp:  stream_descriptor(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/posix/stream_descriptor.hpp:   * boost::asio::error::eof indicates that the connection was closed by the
/home/kaworu/boost_1_69_0/boost/asio/posix/stream_descriptor.hpp:   * descriptor.write_some(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/boost/asio/posix/stream_descriptor.hpp:    boost::asio::detail::throw_error(ec, "write_some");
/home/kaworu/boost_1_69_0/boost/asio/posix/stream_descriptor.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/posix/stream_descriptor.hpp:   * descriptor.async_write_some(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/boost/asio/posix/stream_descriptor.hpp:    boost::asio::async_completion<WriteHandler,
/home/kaworu/boost_1_69_0/boost/asio/posix/stream_descriptor.hpp:   * boost::asio::error::eof indicates that the connection was closed by the
/home/kaworu/boost_1_69_0/boost/asio/posix/stream_descriptor.hpp:   * descriptor.read_some(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/boost/asio/posix/stream_descriptor.hpp:    boost::asio::detail::throw_error(ec, "read_some");
/home/kaworu/boost_1_69_0/boost/asio/posix/stream_descriptor.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/posix/stream_descriptor.hpp:   * descriptor.async_read_some(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/boost/asio/posix/stream_descriptor.hpp:    boost::asio::async_completion<ReadHandler,
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor_base.hpp:   * boost::asio::posix::stream_descriptor descriptor(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor_base.hpp:   * boost::asio::descriptor_base::bytes_readable command(true);
/home/kaworu/boost_1_69_0/boost/asio/posix/descriptor_base.hpp:  typedef boost::asio::detail::io_control::bytes_readable bytes_readable;
/home/kaworu/boost_1_69_0/boost/asio/generic/stream_protocol.hpp: * The boost::asio::generic::stream_protocol class contains flags necessary for
/home/kaworu/boost_1_69_0/boost/asio/generic/stream_protocol.hpp: * @code stream_protocol p(boost::asio::ip::tcp::v4()); @endcode
/home/kaworu/boost_1_69_0/boost/asio/generic/stream_protocol.hpp:      boost::asio::detail::throw_exception(ex);
/home/kaworu/boost_1_69_0/boost/asio/generic/datagram_protocol.hpp: * The boost::asio::generic::datagram_protocol class contains flags necessary
/home/kaworu/boost_1_69_0/boost/asio/generic/datagram_protocol.hpp: * @code datagram_protocol p(boost::asio::ip::udp::v4()); @endcode
/home/kaworu/boost_1_69_0/boost/asio/generic/datagram_protocol.hpp:      boost::asio::detail::throw_exception(ex);
/home/kaworu/boost_1_69_0/boost/asio/generic/seq_packet_protocol.hpp: * The boost::asio::generic::seq_packet_protocol class contains flags necessary
/home/kaworu/boost_1_69_0/boost/asio/generic/seq_packet_protocol.hpp:      boost::asio::detail::throw_exception(ex);
/home/kaworu/boost_1_69_0/boost/asio/generic/raw_protocol.hpp: * The boost::asio::generic::raw_protocol class contains flags necessary for
/home/kaworu/boost_1_69_0/boost/asio/generic/raw_protocol.hpp: * @code raw_protocol p(boost::asio::ip::icmp::v4()); @endcode
/home/kaworu/boost_1_69_0/boost/asio/generic/raw_protocol.hpp:      boost::asio::detail::throw_exception(ex);
/home/kaworu/boost_1_69_0/boost/asio/generic/basic_endpoint.hpp: * The boost::asio::generic::basic_endpoint class template describes an endpoint
/home/kaworu/boost_1_69_0/boost/asio/generic/basic_endpoint.hpp:  typedef boost::asio::detail::socket_addr_type data_type;
/home/kaworu/boost_1_69_0/boost/asio/generic/basic_endpoint.hpp:  boost::asio::generic::detail::endpoint impl_;
/home/kaworu/boost_1_69_0/boost/asio/generic/detail/endpoint.hpp:  boost::asio::detail::socket_addr_type* data()
/home/kaworu/boost_1_69_0/boost/asio/generic/detail/endpoint.hpp:  const boost::asio::detail::socket_addr_type* data() const
/home/kaworu/boost_1_69_0/boost/asio/generic/detail/endpoint.hpp:    return sizeof(boost::asio::detail::sockaddr_storage_type);
/home/kaworu/boost_1_69_0/boost/asio/generic/detail/endpoint.hpp:    boost::asio::detail::socket_addr_type base;
/home/kaworu/boost_1_69_0/boost/asio/generic/detail/endpoint.hpp:    boost::asio::detail::sockaddr_storage_type generic;
/home/kaworu/boost_1_69_0/boost/asio/generic/detail/impl/endpoint.ipp:  if (new_size > sizeof(boost::asio::detail::sockaddr_storage_type))
/home/kaworu/boost_1_69_0/boost/asio/generic/detail/impl/endpoint.ipp:    boost::system::error_code ec(boost::asio::error::invalid_argument);
/home/kaworu/boost_1_69_0/boost/asio/generic/detail/impl/endpoint.ipp:    boost::asio::detail::throw_error(ec);
/home/kaworu/boost_1_69_0/boost/asio/generic/detail/impl/endpoint.ipp:  if (sock_addr_size > sizeof(boost::asio::detail::sockaddr_storage_type))
/home/kaworu/boost_1_69_0/boost/asio/generic/detail/impl/endpoint.ipp:    boost::system::error_code ec(boost::asio::error::invalid_argument);
/home/kaworu/boost_1_69_0/boost/asio/generic/detail/impl/endpoint.ipp:    boost::asio::detail::throw_error(ec);
/home/kaworu/boost_1_69_0/boost/asio/generic/detail/impl/endpoint.ipp:  memset(&data_.generic, 0, sizeof(boost::asio::detail::sockaddr_storage_type));
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_streambuf.hpp:   * boost::asio::error::operation_aborted.
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_streambuf.hpp:   * boost::asio::error::operation_aborted.
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_streambuf.hpp:   * boost::asio::error::operation_aborted.
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_streambuf.hpp:    ec_ = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_streambuf.hpp:        ec_ = boost::asio::error::timed_out;
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_streambuf.hpp:        bufs(boost::asio::buffer(get_buffer_) + putback_max);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_streambuf.hpp:        ec_ = boost::asio::error::eof;
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_streambuf.hpp:      if (ec_ != boost::asio::error::would_block
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_streambuf.hpp:          && ec_ != boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_streambuf.hpp:    ec_ = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_streambuf.hpp:      output_buffer = boost::asio::buffer(&ch, sizeof(char_type));
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_streambuf.hpp:      output_buffer = boost::asio::buffer(pbase(),
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_streambuf.hpp:        ec_ = boost::asio::error::timed_out;
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_streambuf.hpp:      if (ec_ != boost::asio::error::would_block
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_streambuf.hpp:          && ec_ != boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_streambuf.hpp:    ec_ = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_streambuf.hpp:    ec_ = boost::asio::error::not_found;
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_streambuf.hpp:        ec_ = boost::asio::error::timed_out;
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_streambuf.hpp:      if (ec_ != boost::asio::error::in_progress
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_streambuf.hpp:          && ec_ != boost::asio::error::would_block)
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_streambuf.hpp:          boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/io_context.hpp: * @li boost::asio::ip::tcp::socket
/home/kaworu/boost_1_69_0/boost/asio/io_context.hpp: * @li boost::asio::ip::tcp::acceptor
/home/kaworu/boost_1_69_0/boost/asio/io_context.hpp: * @li boost::asio::ip::udp::socket
/home/kaworu/boost_1_69_0/boost/asio/io_context.hpp: * @li boost::asio::deadline_timer.
/home/kaworu/boost_1_69_0/boost/asio/io_context.hpp: * boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/boost/asio/io_context.hpp: * To submit functions to the io_context, use the @ref boost::asio::dispatch,
/home/kaworu/boost_1_69_0/boost/asio/io_context.hpp: * @ref boost::asio::post or @ref boost::asio::defer free functions.
/home/kaworu/boost_1_69_0/boost/asio/io_context.hpp: * boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/boost/asio/io_context.hpp: * boost::asio::post(io_context, my_task);
/home/kaworu/boost_1_69_0/boost/asio/io_context.hpp: * boost::asio::post(io_context,
/home/kaworu/boost_1_69_0/boost/asio/io_context.hpp: * boost::asio::executor_work_guard<io_context::executor_type>:
/home/kaworu/boost_1_69_0/boost/asio/io_context.hpp: * @code boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/boost/asio/io_context.hpp: * boost::asio::executor_work_guard<boost::asio::io_context::executor_type>
/home/kaworu/boost_1_69_0/boost/asio/io_context.hpp: *   = boost::asio::make_work_guard(io_context);
/home/kaworu/boost_1_69_0/boost/asio/io_context.hpp: * @code boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/boost/asio/io_context.hpp: * boost::asio::executor_work_guard<boost::asio::io_context::executor_type>
/home/kaworu/boost_1_69_0/boost/asio/io_context.hpp: *   = boost::asio::make_work_guard(io_context);
/home/kaworu/boost_1_69_0/boost/asio/io_context.hpp:  /// (Deprecated: Use boost::asio::dispatch().) Request the io_context to
/home/kaworu/boost_1_69_0/boost/asio/io_context.hpp:  /// (Deprecated: Use boost::asio::post().) Request the io_context to invoke
/home/kaworu/boost_1_69_0/boost/asio/io_context.hpp:  /// (Deprecated: Use boost::asio::bind_executor().) Create a new handler that
/home/kaworu/boost_1_69_0/boost/asio/io_context.hpp:  explicit work(boost::asio::io_context& io_context);
/home/kaworu/boost_1_69_0/boost/asio/io_context.hpp:  boost::asio::io_context& get_io_context();
/home/kaworu/boost_1_69_0/boost/asio/io_context.hpp:  boost::asio::io_context& get_io_service();
/home/kaworu/boost_1_69_0/boost/asio/io_context.hpp:  boost::asio::io_context& get_io_context();
/home/kaworu/boost_1_69_0/boost/asio/io_context.hpp:  boost::asio::io_context& get_io_service();
/home/kaworu/boost_1_69_0/boost/asio/io_context.hpp:  BOOST_ASIO_DECL service(boost::asio::io_context& owner);
/home/kaworu/boost_1_69_0/boost/asio/io_context.hpp:  : public boost::asio::io_context::service
/home/kaworu/boost_1_69_0/boost/asio/io_context.hpp:  static boost::asio::detail::service_id<Type> id;
/home/kaworu/boost_1_69_0/boost/asio/io_context.hpp:  service_base(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/io_context.hpp:    : boost::asio::io_context::service(io_context)
/home/kaworu/boost_1_69_0/boost/asio/io_context.hpp:boost::asio::detail::service_id<Type> service_base<Type>::id;
/home/kaworu/boost_1_69_0/boost/asio/basic_stream_socket.hpp:  explicit basic_stream_socket(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/basic_stream_socket.hpp:  basic_stream_socket(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/basic_stream_socket.hpp:  basic_stream_socket(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/basic_stream_socket.hpp:  basic_stream_socket(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/basic_stream_socket.hpp:   * socket.send(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/boost/asio/basic_stream_socket.hpp:    boost::asio::detail::throw_error(ec, "send");
/home/kaworu/boost_1_69_0/boost/asio/basic_stream_socket.hpp:   * socket.send(boost::asio::buffer(data, size), 0);
/home/kaworu/boost_1_69_0/boost/asio/basic_stream_socket.hpp:    boost::asio::detail::throw_error(ec, "send");
/home/kaworu/boost_1_69_0/boost/asio/basic_stream_socket.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_stream_socket.hpp:   * socket.async_send(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/boost/asio/basic_stream_socket.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_stream_socket.hpp:   * socket.async_send(boost::asio::buffer(data, size), 0, handler);
/home/kaworu/boost_1_69_0/boost/asio/basic_stream_socket.hpp:   * boost::asio::error::eof indicates that the connection was closed by the
/home/kaworu/boost_1_69_0/boost/asio/basic_stream_socket.hpp:   * socket.receive(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/boost/asio/basic_stream_socket.hpp:    boost::asio::detail::throw_error(ec, "receive");
/home/kaworu/boost_1_69_0/boost/asio/basic_stream_socket.hpp:   * boost::asio::error::eof indicates that the connection was closed by the
/home/kaworu/boost_1_69_0/boost/asio/basic_stream_socket.hpp:   * socket.receive(boost::asio::buffer(data, size), 0);
/home/kaworu/boost_1_69_0/boost/asio/basic_stream_socket.hpp:    boost::asio::detail::throw_error(ec, "receive");
/home/kaworu/boost_1_69_0/boost/asio/basic_stream_socket.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_stream_socket.hpp:   * socket.async_receive(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/boost/asio/basic_stream_socket.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_stream_socket.hpp:   * socket.async_receive(boost::asio::buffer(data, size), 0, handler);
/home/kaworu/boost_1_69_0/boost/asio/basic_stream_socket.hpp:   * boost::asio::error::eof indicates that the connection was closed by the
/home/kaworu/boost_1_69_0/boost/asio/basic_stream_socket.hpp:   * socket.write_some(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/boost/asio/basic_stream_socket.hpp:    boost::asio::detail::throw_error(ec, "write_some");
/home/kaworu/boost_1_69_0/boost/asio/basic_stream_socket.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_stream_socket.hpp:   * socket.async_write_some(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/boost/asio/basic_stream_socket.hpp:   * boost::asio::error::eof indicates that the connection was closed by the
/home/kaworu/boost_1_69_0/boost/asio/basic_stream_socket.hpp:   * socket.read_some(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/boost/asio/basic_stream_socket.hpp:    boost::asio::detail::throw_error(ec, "read_some");
/home/kaworu/boost_1_69_0/boost/asio/basic_stream_socket.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_stream_socket.hpp:   * socket.async_read_some(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/boost/asio/basic_streambuf.hpp: * boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/boost/asio/basic_streambuf.hpp: * boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/boost/asio/basic_streambuf.hpp: * boost::asio::streambuf::mutable_buffers_type bufs = b.prepare(512);
/home/kaworu/boost_1_69_0/boost/asio/basic_streambuf.hpp:    return boost::asio::buffer(boost::asio::const_buffer(gptr(),
/home/kaworu/boost_1_69_0/boost/asio/basic_streambuf.hpp:    return boost::asio::buffer(boost::asio::mutable_buffer(
/home/kaworu/boost_1_69_0/boost/asio/basic_streambuf.hpp:        std::length_error ex("boost::asio::streambuf too long");
/home/kaworu/boost_1_69_0/boost/asio/basic_streambuf.hpp:        boost::asio::detail::throw_exception(ex);
/home/kaworu/boost_1_69_0/boost/asio/ssl/stream.hpp: * boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/boost/asio/ssl/stream.hpp: * boost::asio::ssl::context ctx(boost::asio::ssl::context::sslv23);
/home/kaworu/boost_1_69_0/boost/asio/ssl/stream.hpp: * boost::asio::ssl::stream<asio:ip::tcp::socket> sock(io_context, ctx);
/home/kaworu/boost_1_69_0/boost/asio/ssl/stream.hpp:  boost::asio::io_context& get_io_context()
/home/kaworu/boost_1_69_0/boost/asio/ssl/stream.hpp:  boost::asio::io_context& get_io_service()
/home/kaworu/boost_1_69_0/boost/asio/ssl/stream.hpp:   * boost::asio::ssl::stream<asio:ip::tcp::socket> sock(io_context, ctx);
/home/kaworu/boost_1_69_0/boost/asio/ssl/stream.hpp:    boost::asio::detail::throw_error(ec, "set_verify_mode");
/home/kaworu/boost_1_69_0/boost/asio/ssl/stream.hpp:    boost::asio::detail::throw_error(ec, "set_verify_depth");
/home/kaworu/boost_1_69_0/boost/asio/ssl/stream.hpp:    boost::asio::detail::throw_error(ec, "set_verify_callback");
/home/kaworu/boost_1_69_0/boost/asio/ssl/stream.hpp:    boost::asio::detail::throw_error(ec, "handshake");
/home/kaworu/boost_1_69_0/boost/asio/ssl/stream.hpp:    boost::asio::detail::throw_error(ec, "handshake");
/home/kaworu/boost_1_69_0/boost/asio/ssl/stream.hpp:    boost::asio::async_completion<HandshakeHandler,
/home/kaworu/boost_1_69_0/boost/asio/ssl/stream.hpp:    boost::asio::async_completion<BufferedHandshakeHandler,
/home/kaworu/boost_1_69_0/boost/asio/ssl/stream.hpp:    boost::asio::detail::throw_error(ec, "shutdown");
/home/kaworu/boost_1_69_0/boost/asio/ssl/stream.hpp:    boost::asio::async_completion<ShutdownHandler,
/home/kaworu/boost_1_69_0/boost/asio/ssl/stream.hpp:    boost::asio::detail::throw_error(ec, "write_some");
/home/kaworu/boost_1_69_0/boost/asio/ssl/stream.hpp:    boost::asio::async_completion<WriteHandler,
/home/kaworu/boost_1_69_0/boost/asio/ssl/stream.hpp:    boost::asio::detail::throw_error(ec, "read_some");
/home/kaworu/boost_1_69_0/boost/asio/ssl/stream.hpp:    boost::asio::async_completion<ReadHandler,
/home/kaworu/boost_1_69_0/boost/asio/ssl/context.hpp:  boost::asio::ssl::detail::openssl_init<> init_;
/home/kaworu/boost_1_69_0/boost/asio/ssl/context_base.hpp:  // in the boost::asio::ssl namespace.
/home/kaworu/boost_1_69_0/boost/asio/ssl/stream_base.hpp:/// The stream_base class is used as a base for the boost::asio::ssl::stream
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.hpp:  boost::asio::detail::throw_error(ec, "set_verify_callback");
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.hpp:  boost::asio::detail::throw_error(ec, "set_password_callback");
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/error.ipp:  return boost::asio::error::get_ssl_category();
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:    boost::asio::detail::throw_error(
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:        boost::asio::error::invalid_argument, "context");
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:    boost::asio::detail::throw_error(
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:        boost::asio::error::invalid_argument, "context");
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:    boost::asio::detail::throw_error(
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:        boost::asio::error::invalid_argument, "context");
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:    boost::asio::detail::throw_error(
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:        boost::asio::error::invalid_argument, "context");
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:    boost::asio::detail::throw_error(
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:        boost::asio::error::invalid_argument, "context");
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:    boost::asio::detail::throw_error(
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:        boost::asio::error::invalid_argument, "context");
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:        boost::asio::error::get_ssl_category());
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:    boost::asio::detail::throw_error(ec, "context");
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:  boost::asio::detail::throw_error(ec, "clear_options");
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:  ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:  boost::asio::detail::throw_error(ec, "set_options");
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:      boost::asio::ssl::detail::openssl_init<>::get_null_compression_methods();
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:  boost::asio::detail::throw_error(ec, "set_verify_mode");
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:  boost::asio::detail::throw_error(ec, "set_verify_depth");
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:  boost::asio::detail::throw_error(ec, "load_verify_file");
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:        boost::asio::error::get_ssl_category());
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:  boost::asio::detail::throw_error(ec, "add_certificate_authority");
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:              boost::asio::error::get_ssl_category());
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:  boost::asio::detail::throw_error(ec, "set_default_verify_paths");
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:        boost::asio::error::get_ssl_category());
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:  boost::asio::detail::throw_error(ec, "add_verify_path");
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:        boost::asio::error::get_ssl_category());
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:  boost::asio::detail::throw_error(ec, "use_certificate");
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:    ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:      boost::asio::error::get_ssl_category());
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:  boost::asio::detail::throw_error(ec, "use_certificate_file");
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:      ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:        boost::asio::error::get_ssl_category());
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:  boost::asio::detail::throw_error(ec, "use_certificate_chain");
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:          boost::asio::error::get_ssl_category());
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:          boost::asio::error::get_ssl_category());
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:            boost::asio::error::get_ssl_category());
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:      boost::asio::error::get_ssl_category());
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:  boost::asio::detail::throw_error(ec, "use_certificate_chain_file");
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:        boost::asio::error::get_ssl_category());
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:  boost::asio::detail::throw_error(ec, "use_private_key");
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:        ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:      boost::asio::error::get_ssl_category());
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:  boost::asio::detail::throw_error(ec, "use_private_key_file");
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:  boost::asio::detail::throw_error(ec, "use_rsa_private_key");
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:        ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:      boost::asio::error::get_ssl_category());
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:      ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:        boost::asio::error::get_ssl_category());
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:  boost::asio::detail::throw_error(ec, "use_rsa_private_key_file");
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:      ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:        boost::asio::error::get_ssl_category());
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:  boost::asio::detail::throw_error(ec, "use_tmp_dh");
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:      boost::asio::error::get_ssl_category());
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:  boost::asio::detail::throw_error(ec, "use_tmp_dh_file");
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:      boost::asio::error::get_ssl_category());
/home/kaworu/boost_1_69_0/boost/asio/ssl/impl/context.ipp:      boost::asio::error::get_ssl_category());
/home/kaworu/boost_1_69_0/boost/asio/ssl/rfc2818_verification.hpp: * using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/boost/asio/ssl/rfc2818_verification.hpp: * namespace ssl = boost::asio::ssl;
/home/kaworu/boost_1_69_0/boost/asio/ssl/rfc2818_verification.hpp: * boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/boost/asio/ssl/rfc2818_verification.hpp: * boost::asio::connect(sock.lowest_layer(), resolver.resolve(query));
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/openssl_init.hpp:  BOOST_ASIO_DECL static boost::asio::detail::shared_ptr<do_init> instance();
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/openssl_init.hpp:  boost::asio::detail::shared_ptr<do_init> ref_;
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/io.hpp:      core.input_ = boost::asio::buffer(core.input_buffer_,
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/io.hpp:    boost::asio::write(next_layer,
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/io.hpp:    boost::asio::write(next_layer,
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/io.hpp:                boost::asio::buffer(core_.input_buffer_),
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/io.hpp:            boost::asio::async_write(next_layer_,
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/io.hpp:                boost::asio::buffer(core_.input_buffer_, 0),
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/io.hpp:          core_.input_ = boost::asio::buffer(
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/write_op.hpp:    boost::asio::const_buffer buffer =
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/write_op.hpp:      boost::asio::detail::buffer_sequence_adapter<boost::asio::const_buffer,
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/engine.hpp:  BOOST_ASIO_DECL want write(const boost::asio::const_buffer& data,
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/engine.hpp:  BOOST_ASIO_DECL want read(const boost::asio::mutable_buffer& data,
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/engine.hpp:  BOOST_ASIO_DECL boost::asio::mutable_buffer get_output(
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/engine.hpp:      const boost::asio::mutable_buffer& data);
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/engine.hpp:  BOOST_ASIO_DECL boost::asio::const_buffer put_input(
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/engine.hpp:      const boost::asio::const_buffer& data);
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/engine.hpp:  BOOST_ASIO_DECL static boost::asio::detail::static_mutex& accept_mutex();
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/read_op.hpp:    boost::asio::mutable_buffer buffer =
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/read_op.hpp:      boost::asio::detail::buffer_sequence_adapter<boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/impl/engine.ipp:        boost::asio::error::get_ssl_category());
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/impl/engine.ipp:    boost::asio::detail::throw_error(ec, "engine");
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/impl/engine.ipp:  return perform((type == boost::asio::ssl::stream_base::client)
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/impl/engine.ipp:engine::want engine::write(const boost::asio::const_buffer& data,
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/impl/engine.ipp:engine::want engine::read(const boost::asio::mutable_buffer& data,
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/impl/engine.ipp:boost::asio::mutable_buffer engine::get_output(
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/impl/engine.ipp:    const boost::asio::mutable_buffer& data)
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/impl/engine.ipp:  return boost::asio::buffer(data,
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/impl/engine.ipp:boost::asio::const_buffer engine::put_input(
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/impl/engine.ipp:    const boost::asio::const_buffer& data)
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/impl/engine.ipp:  return boost::asio::buffer(data +
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/impl/engine.ipp:  if (ec != boost::asio::error::eof)
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/impl/engine.ipp:    ec = boost::asio::ssl::error::stream_truncated;
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/impl/engine.ipp:    ec = boost::asio::ssl::error::stream_truncated;
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/impl/engine.ipp:boost::asio::detail::static_mutex& engine::accept_mutex()
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/impl/engine.ipp:  static boost::asio::detail::static_mutex mutex = BOOST_ASIO_STATIC_MUTEX_INIT;
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/impl/engine.ipp:        boost::asio::error::get_ssl_category());
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/impl/engine.ipp:        boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/impl/engine.ipp:    ec = boost::asio::error::eof;
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/impl/engine.ipp:  boost::asio::detail::static_mutex::scoped_lock lock(accept_mutex());
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/impl/openssl_init.ipp:      mutexes_[i].reset(new boost::asio::detail::mutex);
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/impl/openssl_init.ipp:  std::vector<boost::asio::detail::shared_ptr<
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/impl/openssl_init.ipp:        boost::asio::detail::mutex> > mutexes_;
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/impl/openssl_init.ipp:boost::asio::detail::shared_ptr<openssl_init_base::do_init>
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/impl/openssl_init.ipp:  static boost::asio::detail::shared_ptr<do_init> init(new do_init);
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/stream_core.hpp:  stream_core(SSL_CTX* context, boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/stream_core.hpp:      output_buffer_(boost::asio::buffer(output_buffer_space_)),
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/stream_core.hpp:      input_buffer_(boost::asio::buffer(input_buffer_space_))
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/stream_core.hpp:  boost::asio::deadline_timer pending_read_;
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/stream_core.hpp:  boost::asio::deadline_timer pending_write_;
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/stream_core.hpp:  static boost::asio::deadline_timer::time_type neg_infin()
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/stream_core.hpp:  static boost::asio::deadline_timer::time_type pos_infin()
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/stream_core.hpp:  static boost::asio::deadline_timer::time_type expiry(
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/stream_core.hpp:      const boost::asio::deadline_timer& timer)
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/stream_core.hpp:  boost::asio::steady_timer pending_read_;
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/stream_core.hpp:  boost::asio::steady_timer pending_write_;
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/stream_core.hpp:  static boost::asio::steady_timer::time_point neg_infin()
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/stream_core.hpp:    return (boost::asio::steady_timer::time_point::min)();
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/stream_core.hpp:  static boost::asio::steady_timer::time_point pos_infin()
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/stream_core.hpp:    return (boost::asio::steady_timer::time_point::max)();
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/stream_core.hpp:  static boost::asio::steady_timer::time_point expiry(
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/stream_core.hpp:      const boost::asio::steady_timer& timer)
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/stream_core.hpp:  const boost::asio::mutable_buffer output_buffer_;
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/stream_core.hpp:  const boost::asio::mutable_buffer input_buffer_;
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/stream_core.hpp:  boost::asio::const_buffer input_;
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/buffered_handshake_op.hpp:      total_buffer_size_(boost::asio::buffer_size(buffers_))
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/buffered_handshake_op.hpp:        boost::asio::buffer_sequence_begin(buffers_),
/home/kaworu/boost_1_69_0/boost/asio/ssl/detail/buffered_handshake_op.hpp:        boost::asio::buffer_sequence_end(buffers_));
/home/kaworu/boost_1_69_0/boost/asio/ssl/error.hpp:  = boost::asio::error::get_ssl_category();
/home/kaworu/boost_1_69_0/boost/asio/ssl/error.hpp:  = boost::asio::ssl::error::get_stream_category();
/home/kaworu/boost_1_69_0/boost/asio/ssl/error.hpp:template<> struct is_error_code_enum<boost::asio::error::ssl_errors>
/home/kaworu/boost_1_69_0/boost/asio/ssl/error.hpp:template<> struct is_error_code_enum<boost::asio::ssl::error::stream_errors>
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::socket_base::broadcast option(true);
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::socket_base::broadcast option;
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:  typedef boost::asio::detail::socket_option::boolean<
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::socket_base::debug option(true);
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::socket_base::debug option;
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:  typedef boost::asio::detail::socket_option::boolean<
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::socket_base::do_not_route option(true);
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::socket_base::do_not_route option;
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:  typedef boost::asio::detail::socket_option::boolean<
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::socket_base::keep_alive option(true);
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::socket_base::keep_alive option;
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:  typedef boost::asio::detail::socket_option::boolean<
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::socket_base::send_buffer_size option(8192);
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::socket_base::send_buffer_size option;
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:  typedef boost::asio::detail::socket_option::integer<
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::socket_base::send_low_watermark option(1024);
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::socket_base::send_low_watermark option;
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:  typedef boost::asio::detail::socket_option::integer<
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::socket_base::receive_buffer_size option(8192);
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::socket_base::receive_buffer_size option;
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:  typedef boost::asio::detail::socket_option::integer<
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::socket_base::receive_low_watermark option(1024);
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::socket_base::receive_low_watermark option;
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:  typedef boost::asio::detail::socket_option::integer<
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::socket_base::reuse_address option(true);
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::socket_base::reuse_address option;
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:  typedef boost::asio::detail::socket_option::boolean<
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::socket_base::linger option(true, 30);
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::socket_base::linger option;
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:  typedef boost::asio::detail::socket_option::linger<
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::socket_base::out_of_band_inline option(true);
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::socket_base::out_of_band_inline option;
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:  typedef boost::asio::detail::socket_option::boolean<
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * operation is permitted to fail with boost::asio::error::connection_aborted.
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::socket_base::enable_connection_aborted option(true);
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::socket_base::enable_connection_aborted option;
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:  typedef boost::asio::detail::socket_option::boolean<
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:    boost::asio::detail::custom_socket_option_level,
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:    boost::asio::detail::enable_connection_aborted_option>
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:   * boost::asio::socket_base::bytes_readable command(true);
/home/kaworu/boost_1_69_0/boost/asio/socket_base.hpp:  typedef boost::asio::detail::io_control::bytes_readable bytes_readable;
/home/kaworu/boost_1_69_0/boost/asio/local/stream_protocol.hpp: * The boost::asio::local::stream_protocol class contains flags necessary for
/home/kaworu/boost_1_69_0/boost/asio/local/datagram_protocol.hpp: * The boost::asio::local::datagram_protocol class contains flags necessary for
/home/kaworu/boost_1_69_0/boost/asio/local/connect_pair.hpp:  boost::asio::detail::throw_error(ec, "connect_pair");
/home/kaworu/boost_1_69_0/boost/asio/local/connect_pair.hpp:  boost::asio::local::basic_endpoint<Protocol>* tmp
/home/kaworu/boost_1_69_0/boost/asio/local/connect_pair.hpp:  boost::asio::detail::socket_type sv[2];
/home/kaworu/boost_1_69_0/boost/asio/local/connect_pair.hpp:  if (boost::asio::detail::socket_ops::socketpair(protocol.family(),
/home/kaworu/boost_1_69_0/boost/asio/local/connect_pair.hpp:      == boost::asio::detail::socket_error_retval)
/home/kaworu/boost_1_69_0/boost/asio/local/connect_pair.hpp:    boost::asio::detail::socket_ops::state_type state[2] = { 0, 0 };
/home/kaworu/boost_1_69_0/boost/asio/local/connect_pair.hpp:    boost::asio::detail::socket_ops::close(sv[0], state[0], true, temp_ec);
/home/kaworu/boost_1_69_0/boost/asio/local/connect_pair.hpp:    boost::asio::detail::socket_ops::close(sv[1], state[1], true, temp_ec);
/home/kaworu/boost_1_69_0/boost/asio/local/connect_pair.hpp:    boost::asio::detail::socket_ops::state_type state = 0;
/home/kaworu/boost_1_69_0/boost/asio/local/connect_pair.hpp:    boost::asio::detail::socket_ops::close(sv[1], state, true, temp_ec);
/home/kaworu/boost_1_69_0/boost/asio/local/basic_endpoint.hpp: * The boost::asio::local::basic_endpoint class template describes an endpoint
/home/kaworu/boost_1_69_0/boost/asio/local/basic_endpoint.hpp:  typedef boost::asio::detail::socket_addr_type data_type;
/home/kaworu/boost_1_69_0/boost/asio/local/basic_endpoint.hpp:  boost::asio::local::detail::endpoint impl_;
/home/kaworu/boost_1_69_0/boost/asio/local/basic_endpoint.hpp: * @relates boost::asio::local::basic_endpoint
/home/kaworu/boost_1_69_0/boost/asio/local/detail/endpoint.hpp:  boost::asio::detail::socket_addr_type* data()
/home/kaworu/boost_1_69_0/boost/asio/local/detail/endpoint.hpp:  const boost::asio::detail::socket_addr_type* data() const
/home/kaworu/boost_1_69_0/boost/asio/local/detail/endpoint.hpp:      + offsetof(boost::asio::detail::sockaddr_un_type, sun_path);
/home/kaworu/boost_1_69_0/boost/asio/local/detail/endpoint.hpp:    return sizeof(boost::asio::detail::sockaddr_un_type);
/home/kaworu/boost_1_69_0/boost/asio/local/detail/endpoint.hpp:    boost::asio::detail::socket_addr_type base;
/home/kaworu/boost_1_69_0/boost/asio/local/detail/endpoint.hpp:    boost::asio::detail::sockaddr_un_type local;
/home/kaworu/boost_1_69_0/boost/asio/local/detail/impl/endpoint.ipp:  if (new_size > sizeof(boost::asio::detail::sockaddr_un_type))
/home/kaworu/boost_1_69_0/boost/asio/local/detail/impl/endpoint.ipp:    boost::system::error_code ec(boost::asio::error::invalid_argument);
/home/kaworu/boost_1_69_0/boost/asio/local/detail/impl/endpoint.ipp:    boost::asio::detail::throw_error(ec);
/home/kaworu/boost_1_69_0/boost/asio/local/detail/impl/endpoint.ipp:      - offsetof(boost::asio::detail::sockaddr_un_type, sun_path);
/home/kaworu/boost_1_69_0/boost/asio/local/detail/impl/endpoint.ipp:    boost::system::error_code ec(boost::asio::error::name_too_long);
/home/kaworu/boost_1_69_0/boost/asio/local/detail/impl/endpoint.ipp:    boost::asio::detail::throw_error(ec);
/home/kaworu/boost_1_69_0/boost/asio/local/detail/impl/endpoint.ipp:  data_.local = boost::asio::detail::sockaddr_un_type();
/home/kaworu/boost_1_69_0/boost/asio/use_future.hpp: * boost::asio::use_future. For example:
/home/kaworu/boost_1_69_0/boost/asio/use_future.hpp: *   = my_socket.async_read_some(my_buffer, boost::asio::use_future); @endcode
/home/kaworu/boost_1_69_0/boost/asio/use_future.hpp: * See the documentation for boost::asio::use_future_t for a usage example.
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_iostream.hpp:   * boost::asio::error::operation_aborted.
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_iostream.hpp:   * boost::asio::error::operation_aborted.
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_iostream.hpp:   * boost::asio::error::operation_aborted.
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:  explicit serial_port(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:  explicit serial_port(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:    boost::asio::detail::throw_error(ec, "open");
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:  explicit serial_port(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:    boost::asio::detail::throw_error(ec, "open");
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:  serial_port(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:    boost::asio::detail::throw_error(ec, "assign");
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:  boost::asio::io_context& get_io_context()
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:  boost::asio::io_context& get_io_service()
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:    boost::asio::detail::throw_error(ec, "open");
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:    boost::asio::detail::throw_error(ec, "assign");
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:   * boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:    boost::asio::detail::throw_error(ec, "close");
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:   * boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:   * passed the boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:    boost::asio::detail::throw_error(ec, "cancel");
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:   * passed the boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:    boost::asio::detail::throw_error(ec, "send_break");
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:   * boost::asio::serial_port_base::baud_rate @n
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:   * boost::asio::serial_port_base::flow_control @n
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:   * boost::asio::serial_port_base::parity @n
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:   * boost::asio::serial_port_base::stop_bits @n
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:   * boost::asio::serial_port_base::character_size
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:    boost::asio::detail::throw_error(ec, "set_option");
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:   * boost::asio::serial_port_base::baud_rate @n
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:   * boost::asio::serial_port_base::flow_control @n
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:   * boost::asio::serial_port_base::parity @n
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:   * boost::asio::serial_port_base::stop_bits @n
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:   * boost::asio::serial_port_base::character_size
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:   * boost::asio::serial_port_base::baud_rate @n
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:   * boost::asio::serial_port_base::flow_control @n
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:   * boost::asio::serial_port_base::parity @n
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:   * boost::asio::serial_port_base::stop_bits @n
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:   * boost::asio::serial_port_base::character_size
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:    boost::asio::detail::throw_error(ec, "get_option");
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:   * boost::asio::serial_port_base::baud_rate @n
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:   * boost::asio::serial_port_base::flow_control @n
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:   * boost::asio::serial_port_base::parity @n
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:   * boost::asio::serial_port_base::stop_bits @n
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:   * boost::asio::serial_port_base::character_size
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:   * boost::asio::error::eof indicates that the connection was closed by the
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:   * serial_port.write_some(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:    boost::asio::detail::throw_error(ec, "write_some");
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:   * serial_port.async_write_some(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:   * boost::asio::error::eof indicates that the connection was closed by the
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:   * serial_port.read_some(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:    boost::asio::detail::throw_error(ec, "read_some");
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/serial_port.hpp:   * serial_port.async_read_some(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp:    value = boost::asio::is_function<
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp:        typename boost::asio::remove_pointer<T>::type>::value
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * @defgroup read_until boost::asio::read_until
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * std::string n = boost::asio::read_until(s,
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: *     boost::asio::dynamic_buffer(data), '\n');
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * std::string n = boost::asio::read_until(s,
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: *     boost::asio::dynamic_buffer(data), "\r\n");
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * std::string n = boost::asio::read_until(s,
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: *     boost::asio::dynamic_buffer(data), boost::regex("\r\n"));
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * @code typedef boost::asio::buffers_iterator<
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: *     boost::asio::const_buffers_1> iterator;
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * boost::asio::read_until(s, data, match_whitespace);
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * boost::asio::read_until(s, data, match_char('a'));
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * @code boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * boost::asio::read_until(s, b, '\n');
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp:    boost::asio::basic_streambuf<Allocator>& b, char delim);
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp:    boost::asio::basic_streambuf<Allocator>& b, char delim,
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * @code boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * boost::asio::read_until(s, b, "\r\n");
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp:    boost::asio::basic_streambuf<Allocator>& b,
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp:    boost::asio::basic_streambuf<Allocator>& b,
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * @code boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * boost::asio::read_until(s, b, boost::regex("\r\n"));
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp:    boost::asio::basic_streambuf<Allocator>& b, const boost::regex& expr);
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp:    boost::asio::basic_streambuf<Allocator>& b, const boost::regex& expr,
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * @code typedef boost::asio::buffers_iterator<
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: *     boost::asio::streambuf::const_buffers_type> iterator;
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * boost::asio::read_until(s, b, match_whitespace);
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * boost::asio::read_until(s, b, match_char('a'));
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp:    boost::asio::basic_streambuf<Allocator>& b, MatchCondition match_condition,
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp:    boost::asio::basic_streambuf<Allocator>& b,
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * @defgroup async_read_until boost::asio::async_read_until
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * boost::asio::async_read_until(s, data, '\n', handler); @endcode
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * boost::asio::async_read_until(s, data, "\r\n", handler); @endcode
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * boost::asio::async_read_until(s, data,
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * @code typedef boost::asio::buffers_iterator<
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: *     boost::asio::const_buffers_1> iterator;
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * boost::asio::async_read_until(s, data, match_whitespace, handler);
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * boost::asio::async_read_until(s, data, match_char('a'), handler);
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * @code boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * boost::asio::async_read_until(s, b, '\n', handler); @endcode
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp:    boost::asio::basic_streambuf<Allocator>& b,
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * @code boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * boost::asio::async_read_until(s, b, "\r\n", handler); @endcode
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp:    boost::asio::basic_streambuf<Allocator>& b,
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * @code boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * boost::asio::async_read_until(s, b, boost::regex("\r\n"), handler); @endcode
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp:    boost::asio::basic_streambuf<Allocator>& b, const boost::regex& expr,
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * @code typedef boost::asio::buffers_iterator<
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: *     boost::asio::streambuf::const_buffers_type> iterator;
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * boost::asio::async_read_until(s, b, match_whitespace, handler);
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp: * boost::asio::async_read_until(s, b, match_char('a'), handler);
/home/kaworu/boost_1_69_0/boost/asio/read_until.hpp:    boost::asio::basic_streambuf<Allocator>& b,
/home/kaworu/boost_1_69_0/boost/asio/signal_set_service.hpp:  : public boost::asio::io_context::service
/home/kaworu/boost_1_69_0/boost/asio/signal_set_service.hpp:  : public boost::asio::detail::service_base<signal_set_service>
/home/kaworu/boost_1_69_0/boost/asio/signal_set_service.hpp:  static boost::asio::io_context::id id;
/home/kaworu/boost_1_69_0/boost/asio/signal_set_service.hpp:  explicit signal_set_service(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/signal_set_service.hpp:    : boost::asio::detail::service_base<signal_set_service>(io_context),
/home/kaworu/boost_1_69_0/boost/asio/signal_set_service.hpp:  void notify_fork(boost::asio::io_context::fork_event event)
/home/kaworu/boost_1_69_0/boost/asio/handler_invoke_hook.hpp:/** @defgroup asio_handler_invoke boost::asio::asio_handler_invoke
/home/kaworu/boost_1_69_0/boost/asio/basic_waitable_timer.hpp:    typename WaitTraits = boost::asio::wait_traits<Clock>
/home/kaworu/boost_1_69_0/boost/asio/basic_waitable_timer.hpp: * Most applications will use one of the boost::asio::steady_timer,
/home/kaworu/boost_1_69_0/boost/asio/basic_waitable_timer.hpp: * boost::asio::system_timer or boost::asio::high_resolution_timer typedefs.
/home/kaworu/boost_1_69_0/boost/asio/basic_waitable_timer.hpp: * boost::asio::steady_timer timer(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_waitable_timer.hpp: * boost::asio::steady_timer timer(io_context,
/home/kaworu/boost_1_69_0/boost/asio/basic_waitable_timer.hpp: *   if (e != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/boost/asio/basic_waitable_timer.hpp: * @li The boost::asio::basic_waitable_timer::expires_after() function
/home/kaworu/boost_1_69_0/boost/asio/basic_waitable_timer.hpp: * it contains the value boost::asio::error::operation_aborted.
/home/kaworu/boost_1_69_0/boost/asio/basic_waitable_timer.hpp:  explicit basic_waitable_timer(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/basic_waitable_timer.hpp:  basic_waitable_timer(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/basic_waitable_timer.hpp:    boost::asio::detail::throw_error(ec, "expires_at");
/home/kaworu/boost_1_69_0/boost/asio/basic_waitable_timer.hpp:  basic_waitable_timer(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/basic_waitable_timer.hpp:    boost::asio::detail::throw_error(ec, "expires_after");
/home/kaworu/boost_1_69_0/boost/asio/basic_waitable_timer.hpp:  boost::asio::io_context& get_io_context()
/home/kaworu/boost_1_69_0/boost/asio/basic_waitable_timer.hpp:  boost::asio::io_context& get_io_service()
/home/kaworu/boost_1_69_0/boost/asio/basic_waitable_timer.hpp:   * be invoked with the boost::asio::error::operation_aborted error code.
/home/kaworu/boost_1_69_0/boost/asio/basic_waitable_timer.hpp:    boost::asio::detail::throw_error(ec, "cancel");
/home/kaworu/boost_1_69_0/boost/asio/basic_waitable_timer.hpp:   * be invoked with the boost::asio::error::operation_aborted error code.
/home/kaworu/boost_1_69_0/boost/asio/basic_waitable_timer.hpp:   * boost::asio::error::operation_aborted error code.
/home/kaworu/boost_1_69_0/boost/asio/basic_waitable_timer.hpp:    boost::asio::detail::throw_error(ec, "cancel_one");
/home/kaworu/boost_1_69_0/boost/asio/basic_waitable_timer.hpp:   * boost::asio::error::operation_aborted error code.
/home/kaworu/boost_1_69_0/boost/asio/basic_waitable_timer.hpp:   * be invoked with the boost::asio::error::operation_aborted error code.
/home/kaworu/boost_1_69_0/boost/asio/basic_waitable_timer.hpp:    boost::asio::detail::throw_error(ec, "expires_at");
/home/kaworu/boost_1_69_0/boost/asio/basic_waitable_timer.hpp:   * be invoked with the boost::asio::error::operation_aborted error code.
/home/kaworu/boost_1_69_0/boost/asio/basic_waitable_timer.hpp:   * be invoked with the boost::asio::error::operation_aborted error code.
/home/kaworu/boost_1_69_0/boost/asio/basic_waitable_timer.hpp:    boost::asio::detail::throw_error(ec, "expires_after");
/home/kaworu/boost_1_69_0/boost/asio/basic_waitable_timer.hpp:   * be invoked with the boost::asio::error::operation_aborted error code.
/home/kaworu/boost_1_69_0/boost/asio/basic_waitable_timer.hpp:    boost::asio::detail::throw_error(ec, "expires_from_now");
/home/kaworu/boost_1_69_0/boost/asio/basic_waitable_timer.hpp:   * be invoked with the boost::asio::error::operation_aborted error code.
/home/kaworu/boost_1_69_0/boost/asio/basic_waitable_timer.hpp:    boost::asio::detail::throw_error(ec, "wait");
/home/kaworu/boost_1_69_0/boost/asio/basic_waitable_timer.hpp:   * code boost::asio::error::operation_aborted.
/home/kaworu/boost_1_69_0/boost/asio/basic_waitable_timer.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:  explicit basic_socket(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:  basic_socket(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:    boost::asio::detail::throw_error(ec, "open");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:  basic_socket(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:    boost::asio::detail::throw_error(ec, "open");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:    boost::asio::detail::throw_error(ec, "bind");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:  basic_socket(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:    boost::asio::detail::throw_error(ec, "assign");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:  boost::asio::io_context& get_io_context()
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:  boost::asio::io_context& get_io_service()
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * socket.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:    boost::asio::detail::throw_error(ec, "open");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * socket.open(boost::asio::ip::tcp::v4(), ec);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:    boost::asio::detail::throw_error(ec, "assign");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * with the boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:    boost::asio::detail::throw_error(ec, "close");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * with the boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * will be passed the boost::asio::error::operation_aborted error. Ownership
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * 8.1, and will fail with boost::asio::error::operation_not_supported on
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:    boost::asio::detail::throw_error(ec, "release");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * will be passed the boost::asio::error::operation_aborted error. Ownership
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * 8.1, and will fail with boost::asio::error::operation_not_supported on
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * will be passed the boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::error::operation_not_supported when run on Windows XP, Windows
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:    boost::asio::detail::throw_error(ec, "cancel");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * will be passed the boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::error::operation_not_supported when run on Windows XP, Windows
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:    boost::asio::detail::throw_error(ec, "at_mark");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:    boost::asio::detail::throw_error(ec, "available");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * socket.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * socket.bind(boost::asio::ip::tcp::endpoint(
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   *       boost::asio::ip::tcp::v4(), 12345));
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:    boost::asio::detail::throw_error(ec, "bind");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * socket.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * socket.bind(boost::asio::ip::tcp::endpoint(
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   *       boost::asio::ip::tcp::v4(), 12345), ec);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::endpoint endpoint(
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   *     boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:      boost::asio::detail::throw_error(ec, "connect");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:    boost::asio::detail::throw_error(ec, "connect");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::endpoint endpoint(
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   *     boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::endpoint endpoint(
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   *     boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:        boost::asio::post(this->get_executor(),
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:            boost::asio::detail::bind_handler(
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::broadcast @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::do_not_route @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::keep_alive @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::linger @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::receive_buffer_size @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::receive_low_watermark @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::reuse_address @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::send_buffer_size @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::send_low_watermark @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::multicast::join_group @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::multicast::leave_group @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::multicast::enable_loopback @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::multicast::outbound_interface @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::multicast::hops @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::no_delay
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::no_delay option(true);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:    boost::asio::detail::throw_error(ec, "set_option");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::broadcast @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::do_not_route @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::keep_alive @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::linger @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::receive_buffer_size @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::receive_low_watermark @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::reuse_address @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::send_buffer_size @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::send_low_watermark @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::multicast::join_group @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::multicast::leave_group @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::multicast::enable_loopback @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::multicast::outbound_interface @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::multicast::hops @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::no_delay
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::no_delay option(true);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::broadcast @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::do_not_route @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::keep_alive @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::linger @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::receive_buffer_size @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::receive_low_watermark @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::reuse_address @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::send_buffer_size @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::send_low_watermark @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::multicast::join_group @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::multicast::leave_group @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::multicast::enable_loopback @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::multicast::outbound_interface @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::multicast::hops @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::no_delay
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::socket::keep_alive option;
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:    boost::asio::detail::throw_error(ec, "get_option");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::broadcast @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::do_not_route @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::keep_alive @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::linger @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::receive_buffer_size @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::receive_low_watermark @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::reuse_address @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::send_buffer_size @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::send_low_watermark @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::multicast::join_group @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::multicast::leave_group @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::multicast::enable_loopback @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::multicast::outbound_interface @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::multicast::hops @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::no_delay
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::socket::keep_alive option;
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::bytes_readable @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::non_blocking_io
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::socket::bytes_readable command;
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:    boost::asio::detail::throw_error(ec, "io_control");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::bytes_readable @n
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::socket_base::non_blocking_io
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::socket::bytes_readable command;
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::error::would_block if they are unable to perform the requested
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::error::would_block.
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::error::would_block if they are unable to perform the requested
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::error::would_block.
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:    boost::asio::detail::throw_error(ec, "non_blocking");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::error::would_block if they are unable to perform the requested
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::error::would_block.
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * direct system calls may fail with boost::asio::error::would_block (or the
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   *             boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   *         if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   *         if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   *             || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * mode and direct system calls may fail with boost::asio::error::would_block
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * function fails with boost::asio::error::invalid_argument, as the
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   *             boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   *         if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   *         if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   *             || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:    boost::asio::detail::throw_error(ec, "native_non_blocking");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * mode and direct system calls may fail with boost::asio::error::would_block
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * function fails with boost::asio::error::invalid_argument, as the
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   *             boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   *         if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   *         if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   *             || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::endpoint endpoint = socket.local_endpoint();
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:    boost::asio::detail::throw_error(ec, "local_endpoint");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::endpoint endpoint = socket.local_endpoint(ec);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::endpoint endpoint = socket.remote_endpoint();
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:    boost::asio::detail::throw_error(ec, "remote_endpoint");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::endpoint endpoint = socket.remote_endpoint(ec);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * socket.shutdown(boost::asio::ip::tcp::socket::shutdown_send);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:    boost::asio::detail::throw_error(ec, "shutdown");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * socket.shutdown(boost::asio::ip::tcp::socket::shutdown_send, ec);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * socket.wait(boost::asio::ip::tcp::socket::wait_read);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:    boost::asio::detail::throw_error(ec, "wait");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * socket.wait(boost::asio::ip::tcp::socket::wait_read, ec);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket.hpp:   * socket.async_wait(boost::asio::ip::tcp::socket::wait_read, wait_handler);
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: * @code boost::asio::mutable_buffer b1 = ...;
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:      boost::asio::detail::function<void()> debug_check)
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:  const boost::asio::detail::function<void()>& get_debug_check() const
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:  boost::asio::detail::function<void()> debug_check_;
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:      boost::asio::detail::function<void()> debug_check)
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: * @code boost::asio::const_buffer b1 = ...;
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:      boost::asio::detail::function<void()> debug_check)
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:  const boost::asio::detail::function<void()>& get_debug_check() const
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:  boost::asio::detail::function<void()> debug_check_;
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:      boost::asio::detail::function<void()> debug_check)
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:/** @defgroup buffer_sequence_begin boost::asio::buffer_sequence_begin
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: * @brief The boost::asio::buffer_sequence_begin function returns an iterator
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:/** @defgroup buffer_sequence_end boost::asio::buffer_sequence_end
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: * @brief The boost::asio::buffer_sequence_end function returns an iterator
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: * auto i = boost::asio::buffer_sequence_begin(buffers);
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: * auto end = boost::asio::buffer_sequence_end(buffers);
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:      boost::asio::buffer_sequence_begin(b),
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:      boost::asio::buffer_sequence_end(b));
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:/** @defgroup buffer_cast boost::asio::buffer_cast
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: * boost::asio::buffer_cast function is used to obtain a pointer to the
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: * @code boost::asio::const_buffer b1 = ...;
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: * const unsigned char* p1 = boost::asio::buffer_cast<const unsigned char*>(b1);
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: * @code boost::asio::mutable_buffer b2 = ...;
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: * unsigned char* p2 = boost::asio::buffer_cast<unsigned char*>(b2);
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: * The boost::asio::buffer_cast function permits violations of type safety, so
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:/** @defgroup buffer boost::asio::buffer
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: * @brief The boost::asio::buffer function is used to create a buffer object to
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: * @code sock.send(boost::asio::buffer(data, size)); @endcode
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: * In the above example, the return value of boost::asio::buffer meets the
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: * size_t bytes_transferred = sock.receive(boost::asio::buffer(d1));
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: * bytes_transferred = sock.receive(boost::asio::buffer(d2));
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: * bytes_transferred = sock.receive(boost::asio::buffer(d3));
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: * bytes_transferred = sock.receive(boost::asio::buffer(d4)); @endcode
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: * @code boost::asio::mutable_buffer b1 = ...;
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: * boost::asio::const_buffer b2 = ...;
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: * vector<unsigned char> data(boost::asio::buffer_size(buffers));
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: * boost::asio::buffer_copy(boost::asio::buffer(data), buffers); @endcode
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: * For the boost::asio::buffer overloads that accept an argument of type
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: * For the boost::asio::buffer overloads that accept an argument of type
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: * @code b1 = boost::asio::buffer(a); @endcode
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: * optional second argument to the boost::asio::buffer function may be used to
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: * @code b2 = boost::asio::buffer(a, 3); @endcode
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: * @code b4 = boost::asio::buffer(b1 + 1, 3); @endcode
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: *   boost::asio::buffer(d1),
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: *   boost::asio::buffer(d2),
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: *   boost::asio::buffer(d3) };
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: * bufs2.push_back(boost::asio::buffer(d1));
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: * bufs2.push_back(boost::asio::buffer(d2));
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: * bufs2.push_back(boost::asio::buffer(d3));
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:  typedef typename boost::asio::detail::buffer_types<PodType>::buffer_type
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:  typedef typename boost::asio::detail::buffer_types<PodType>::container_type
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:  typedef typename boost::asio::detail::buffer_types<PodType>::buffer_type
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:  typedef typename boost::asio::detail::buffer_types<PodType>::container_type
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:    return const_buffers_type(boost::asio::buffer(string_, size_));
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:      boost::asio::detail::throw_exception(ex);
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:    return boost::asio::buffer(boost::asio::buffer(string_) + size_, n);
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:    return const_buffers_type(boost::asio::buffer(vector_, size_));
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:      boost::asio::detail::throw_exception(ex);
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:    return boost::asio::buffer(boost::asio::buffer(vector_) + size_, n);
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:/** @defgroup dynamic_buffer boost::asio::dynamic_buffer
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: * @brief The boost::asio::dynamic_buffer function is used to create a
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:/** @defgroup buffer_copy boost::asio::buffer_copy
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp: * @brief The boost::asio::buffer_copy function is used to copy bytes from a
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:      boost::asio::buffer(*source_begin, max_bytes_to_copy));
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:        boost::asio::buffer(*target_begin, max_bytes_to_copy));
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:        boost::asio::buffer(*source_begin, max_bytes_to_copy));
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:        target_buffer, boost::asio::buffer(source_buffer,
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:      boost::asio::buffer_sequence_begin(target),
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:      boost::asio::buffer_sequence_end(target),
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:      boost::asio::buffer_sequence_begin(source),
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:      boost::asio::buffer_sequence_end(source));
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:      boost::asio::buffer_sequence_begin(target),
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:      boost::asio::buffer_sequence_end(target),
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:      boost::asio::buffer_sequence_begin(source),
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:      boost::asio::buffer_sequence_end(source), max_bytes_to_copy);
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:  : boost::asio::detail::is_buffer_sequence<T, mutable_buffer>
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:  : boost::asio::detail::is_buffer_sequence<T, const_buffer>
/home/kaworu/boost_1_69_0/boost/asio/buffer.hpp:  : boost::asio::detail::is_dynamic_buffer<T>
/home/kaworu/boost_1_69_0/boost/asio/buffers_iterator.hpp:    new_iter.begin_ = boost::asio::buffer_sequence_begin(buffers);
/home/kaworu/boost_1_69_0/boost/asio/buffers_iterator.hpp:    new_iter.current_ = boost::asio::buffer_sequence_begin(buffers);
/home/kaworu/boost_1_69_0/boost/asio/buffers_iterator.hpp:    new_iter.end_ = boost::asio::buffer_sequence_end(buffers);
/home/kaworu/boost_1_69_0/boost/asio/buffers_iterator.hpp:    new_iter.begin_ = boost::asio::buffer_sequence_begin(buffers);
/home/kaworu/boost_1_69_0/boost/asio/buffers_iterator.hpp:    new_iter.current_ = boost::asio::buffer_sequence_begin(buffers);
/home/kaworu/boost_1_69_0/boost/asio/buffers_iterator.hpp:    new_iter.end_ = boost::asio::buffer_sequence_end(buffers);
/home/kaworu/boost_1_69_0/boost/asio/basic_deadline_timer.hpp: * Most applications will use the boost::asio::deadline_timer typedef.
/home/kaworu/boost_1_69_0/boost/asio/basic_deadline_timer.hpp: * boost::asio::deadline_timer timer(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_deadline_timer.hpp: * boost::asio::deadline_timer timer(io_context,
/home/kaworu/boost_1_69_0/boost/asio/basic_deadline_timer.hpp: *   if (e != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/boost/asio/basic_deadline_timer.hpp: * @li The boost::asio::basic_deadline_timer::expires_from_now() function
/home/kaworu/boost_1_69_0/boost/asio/basic_deadline_timer.hpp: * it contains the value boost::asio::error::operation_aborted.
/home/kaworu/boost_1_69_0/boost/asio/basic_deadline_timer.hpp:    typename TimeTraits = boost::asio::time_traits<Time>
/home/kaworu/boost_1_69_0/boost/asio/basic_deadline_timer.hpp:  explicit basic_deadline_timer(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/basic_deadline_timer.hpp:  basic_deadline_timer(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/basic_deadline_timer.hpp:    boost::asio::detail::throw_error(ec, "expires_at");
/home/kaworu/boost_1_69_0/boost/asio/basic_deadline_timer.hpp:  basic_deadline_timer(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/basic_deadline_timer.hpp:    boost::asio::detail::throw_error(ec, "expires_from_now");
/home/kaworu/boost_1_69_0/boost/asio/basic_deadline_timer.hpp:  boost::asio::io_context& get_io_context()
/home/kaworu/boost_1_69_0/boost/asio/basic_deadline_timer.hpp:  boost::asio::io_context& get_io_service()
/home/kaworu/boost_1_69_0/boost/asio/basic_deadline_timer.hpp:   * be invoked with the boost::asio::error::operation_aborted error code.
/home/kaworu/boost_1_69_0/boost/asio/basic_deadline_timer.hpp:    boost::asio::detail::throw_error(ec, "cancel");
/home/kaworu/boost_1_69_0/boost/asio/basic_deadline_timer.hpp:   * be invoked with the boost::asio::error::operation_aborted error code.
/home/kaworu/boost_1_69_0/boost/asio/basic_deadline_timer.hpp:   * boost::asio::error::operation_aborted error code.
/home/kaworu/boost_1_69_0/boost/asio/basic_deadline_timer.hpp:    boost::asio::detail::throw_error(ec, "cancel_one");
/home/kaworu/boost_1_69_0/boost/asio/basic_deadline_timer.hpp:   * boost::asio::error::operation_aborted error code.
/home/kaworu/boost_1_69_0/boost/asio/basic_deadline_timer.hpp:   * be invoked with the boost::asio::error::operation_aborted error code.
/home/kaworu/boost_1_69_0/boost/asio/basic_deadline_timer.hpp:    boost::asio::detail::throw_error(ec, "expires_at");
/home/kaworu/boost_1_69_0/boost/asio/basic_deadline_timer.hpp:   * be invoked with the boost::asio::error::operation_aborted error code.
/home/kaworu/boost_1_69_0/boost/asio/basic_deadline_timer.hpp:   * be invoked with the boost::asio::error::operation_aborted error code.
/home/kaworu/boost_1_69_0/boost/asio/basic_deadline_timer.hpp:    boost::asio::detail::throw_error(ec, "expires_from_now");
/home/kaworu/boost_1_69_0/boost/asio/basic_deadline_timer.hpp:   * be invoked with the boost::asio::error::operation_aborted error code.
/home/kaworu/boost_1_69_0/boost/asio/basic_deadline_timer.hpp:    boost::asio::detail::throw_error(ec, "wait");
/home/kaworu/boost_1_69_0/boost/asio/basic_deadline_timer.hpp:   * code boost::asio::error::operation_aborted.
/home/kaworu/boost_1_69_0/boost/asio/basic_deadline_timer.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/stream_socket_service.hpp:  : public boost::asio::io_context::service
/home/kaworu/boost_1_69_0/boost/asio/stream_socket_service.hpp:  : public boost::asio::detail::service_base<stream_socket_service<Protocol> >
/home/kaworu/boost_1_69_0/boost/asio/stream_socket_service.hpp:  static boost::asio::io_context::id id;
/home/kaworu/boost_1_69_0/boost/asio/stream_socket_service.hpp:  explicit stream_socket_service(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/stream_socket_service.hpp:    : boost::asio::detail::service_base<
/home/kaworu/boost_1_69_0/boost/asio/stream_socket_service.hpp:      ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/coroutine.hpp:  switch (::boost::asio::detail::coroutine_ref _coro_value = c) \
/home/kaworu/boost_1_69_0/boost/asio/write.hpp: * @defgroup write boost::asio::write
/home/kaworu/boost_1_69_0/boost/asio/write.hpp: * @code boost::asio::write(s, boost::asio::buffer(data, size)); @endcode
/home/kaworu/boost_1_69_0/boost/asio/write.hpp: * @code boost::asio::write(
/home/kaworu/boost_1_69_0/boost/asio/write.hpp: *     boost::asio::transfer_all()); @endcode
/home/kaworu/boost_1_69_0/boost/asio/write.hpp: * @code boost::asio::write(s, boost::asio::buffer(data, size), ec); @endcode
/home/kaworu/boost_1_69_0/boost/asio/write.hpp: * @code boost::asio::write(
/home/kaworu/boost_1_69_0/boost/asio/write.hpp: *     boost::asio::transfer_all(), ec); @endcode
/home/kaworu/boost_1_69_0/boost/asio/write.hpp: * @code boost::asio::write(s, boost::asio::buffer(data, size),
/home/kaworu/boost_1_69_0/boost/asio/write.hpp: *     boost::asio::transfer_at_least(32)); @endcode
/home/kaworu/boost_1_69_0/boost/asio/write.hpp: * @code boost::asio::write(
/home/kaworu/boost_1_69_0/boost/asio/write.hpp: *     boost::asio::transfer_all()); @endcode
/home/kaworu/boost_1_69_0/boost/asio/write.hpp: * @code boost::asio::write(
/home/kaworu/boost_1_69_0/boost/asio/write.hpp: *     boost::asio::transfer_all(), ec); @endcode
/home/kaworu/boost_1_69_0/boost/asio/write.hpp: * @code boost::asio::write(
/home/kaworu/boost_1_69_0/boost/asio/write.hpp: *     boost::asio::transfer_all()); @endcode
/home/kaworu/boost_1_69_0/boost/asio/write.hpp: * @code boost::asio::write(
/home/kaworu/boost_1_69_0/boost/asio/write.hpp: *     boost::asio::transfer_all(), ec); @endcode
/home/kaworu/boost_1_69_0/boost/asio/write.hpp: * @defgroup async_write boost::asio::async_write
/home/kaworu/boost_1_69_0/boost/asio/write.hpp: * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/write.hpp: * boost::asio::async_write(s, boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/boost/asio/write.hpp: * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/write.hpp: * @code boost::asio::async_write(s,
/home/kaworu/boost_1_69_0/boost/asio/write.hpp: *     boost::asio::buffer(data, size),
/home/kaworu/boost_1_69_0/boost/asio/write.hpp: *     boost::asio::transfer_at_least(32),
/home/kaworu/boost_1_69_0/boost/asio/write.hpp: * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/write.hpp: * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/write.hpp: * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/write.hpp: * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/async_result.hpp:  typedef typename boost::asio::async_result<
/home/kaworu/boost_1_69_0/boost/asio/async_result.hpp:  typename ::boost::asio::detail::async_result_helper< \
/home/kaworu/boost_1_69_0/boost/asio/async_result.hpp:  typename ::boost::asio::detail::async_result_helper< \
/home/kaworu/boost_1_69_0/boost/asio/async_result.hpp:  typename ::boost::asio::async_result< \
/home/kaworu/boost_1_69_0/boost/asio/async_result.hpp:    typename ::boost::asio::decay<ct>::type, sig>::return_type
/home/kaworu/boost_1_69_0/boost/asio/async_result.hpp:  typename ::boost::asio::async_result< \
/home/kaworu/boost_1_69_0/boost/asio/async_result.hpp:    typename ::boost::asio::decay<ct>::type, sig>::completion_handler_type
/home/kaworu/boost_1_69_0/boost/asio/waitable_timer_service.hpp:    typename WaitTraits = boost::asio::wait_traits<Clock> >
/home/kaworu/boost_1_69_0/boost/asio/waitable_timer_service.hpp:  : public boost::asio::io_context::service
/home/kaworu/boost_1_69_0/boost/asio/waitable_timer_service.hpp:  : public boost::asio::detail::service_base<
/home/kaworu/boost_1_69_0/boost/asio/waitable_timer_service.hpp:  static boost::asio::io_context::id id;
/home/kaworu/boost_1_69_0/boost/asio/waitable_timer_service.hpp:  explicit waitable_timer_service(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/waitable_timer_service.hpp:    : boost::asio::detail::service_base<
/home/kaworu/boost_1_69_0/boost/asio/basic_raw_socket.hpp:  explicit basic_raw_socket(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/basic_raw_socket.hpp:  basic_raw_socket(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/basic_raw_socket.hpp:  basic_raw_socket(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/basic_raw_socket.hpp:  basic_raw_socket(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/basic_raw_socket.hpp:   * @code socket.send(boost::asio::buffer(data, size)); @endcode
/home/kaworu/boost_1_69_0/boost/asio/basic_raw_socket.hpp:    boost::asio::detail::throw_error(ec, "send");
/home/kaworu/boost_1_69_0/boost/asio/basic_raw_socket.hpp:    boost::asio::detail::throw_error(ec, "send");
/home/kaworu/boost_1_69_0/boost/asio/basic_raw_socket.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_raw_socket.hpp:   * socket.async_send(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/boost/asio/basic_raw_socket.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_raw_socket.hpp:   * boost::asio::ip::udp::endpoint destination(
/home/kaworu/boost_1_69_0/boost/asio/basic_raw_socket.hpp:   *     boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/boost/asio/basic_raw_socket.hpp:   * socket.send_to(boost::asio::buffer(data, size), destination);
/home/kaworu/boost_1_69_0/boost/asio/basic_raw_socket.hpp:    boost::asio::detail::throw_error(ec, "send_to");
/home/kaworu/boost_1_69_0/boost/asio/basic_raw_socket.hpp:    boost::asio::detail::throw_error(ec, "send_to");
/home/kaworu/boost_1_69_0/boost/asio/basic_raw_socket.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_raw_socket.hpp:   * boost::asio::ip::udp::endpoint destination(
/home/kaworu/boost_1_69_0/boost/asio/basic_raw_socket.hpp:   *     boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/boost/asio/basic_raw_socket.hpp:   *     boost::asio::buffer(data, size), destination, handler);
/home/kaworu/boost_1_69_0/boost/asio/basic_raw_socket.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_raw_socket.hpp:   * @code socket.receive(boost::asio::buffer(data, size)); @endcode
/home/kaworu/boost_1_69_0/boost/asio/basic_raw_socket.hpp:    boost::asio::detail::throw_error(ec, "receive");
/home/kaworu/boost_1_69_0/boost/asio/basic_raw_socket.hpp:    boost::asio::detail::throw_error(ec, "receive");
/home/kaworu/boost_1_69_0/boost/asio/basic_raw_socket.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_raw_socket.hpp:   * socket.async_receive(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/boost/asio/basic_raw_socket.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_raw_socket.hpp:   * boost::asio::ip::udp::endpoint sender_endpoint;
/home/kaworu/boost_1_69_0/boost/asio/basic_raw_socket.hpp:   *     boost::asio::buffer(data, size), sender_endpoint);
/home/kaworu/boost_1_69_0/boost/asio/basic_raw_socket.hpp:    boost::asio::detail::throw_error(ec, "receive_from");
/home/kaworu/boost_1_69_0/boost/asio/basic_raw_socket.hpp:    boost::asio::detail::throw_error(ec, "receive_from");
/home/kaworu/boost_1_69_0/boost/asio/basic_raw_socket.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_raw_socket.hpp:   *     boost::asio::buffer(data, size), 0, sender_endpoint, handler); @endcode
/home/kaworu/boost_1_69_0/boost/asio/basic_raw_socket.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/executor.hpp:      boost::asio::detail::throw_exception(ex);
/home/kaworu/boost_1_69_0/boost/asio/executor.hpp:BOOST_ASIO_USES_ALLOCATOR(boost::asio::executor)
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:  explicit basic_serial_port(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:  explicit basic_serial_port(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:    boost::asio::detail::throw_error(ec, "open");
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:  explicit basic_serial_port(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:    boost::asio::detail::throw_error(ec, "open");
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:  basic_serial_port(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:    boost::asio::detail::throw_error(ec, "assign");
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:    boost::asio::detail::throw_error(ec, "open");
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:    boost::asio::detail::throw_error(ec, "assign");
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:   * boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:    boost::asio::detail::throw_error(ec, "close");
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:   * boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:   * passed the boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:    boost::asio::detail::throw_error(ec, "cancel");
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:   * passed the boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:    boost::asio::detail::throw_error(ec, "send_break");
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:   * boost::asio::serial_port_base::baud_rate @n
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:   * boost::asio::serial_port_base::flow_control @n
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:   * boost::asio::serial_port_base::parity @n
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:   * boost::asio::serial_port_base::stop_bits @n
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:   * boost::asio::serial_port_base::character_size
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:    boost::asio::detail::throw_error(ec, "set_option");
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:   * boost::asio::serial_port_base::baud_rate @n
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:   * boost::asio::serial_port_base::flow_control @n
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:   * boost::asio::serial_port_base::parity @n
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:   * boost::asio::serial_port_base::stop_bits @n
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:   * boost::asio::serial_port_base::character_size
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:   * boost::asio::serial_port_base::baud_rate @n
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:   * boost::asio::serial_port_base::flow_control @n
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:   * boost::asio::serial_port_base::parity @n
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:   * boost::asio::serial_port_base::stop_bits @n
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:   * boost::asio::serial_port_base::character_size
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:    boost::asio::detail::throw_error(ec, "get_option");
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:   * boost::asio::serial_port_base::baud_rate @n
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:   * boost::asio::serial_port_base::flow_control @n
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:   * boost::asio::serial_port_base::parity @n
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:   * boost::asio::serial_port_base::stop_bits @n
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:   * boost::asio::serial_port_base::character_size
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:   * boost::asio::error::eof indicates that the connection was closed by the
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:   * serial_port.write_some(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:    boost::asio::detail::throw_error(ec, "write_some");
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:   * serial_port.async_write_some(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:   * boost::asio::error::eof indicates that the connection was closed by the
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:   * serial_port.read_some(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:    boost::asio::detail::throw_error(ec, "read_some");
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_serial_port.hpp:   * serial_port.async_read_some(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/boost/asio/impl/read.hpp:    boost::asio::detail::consuming_buffers<mutable_buffer,
/home/kaworu/boost_1_69_0/boost/asio/impl/read.hpp:      boost::asio::buffer_sequence_begin(buffers), completion_condition, ec);
/home/kaworu/boost_1_69_0/boost/asio/impl/read.hpp:  boost::asio::detail::throw_error(ec, "read");
/home/kaworu/boost_1_69_0/boost/asio/impl/read.hpp:  boost::asio::detail::throw_error(ec, "read");
/home/kaworu/boost_1_69_0/boost/asio/impl/read.hpp:  boost::asio::detail::throw_error(ec, "read");
/home/kaworu/boost_1_69_0/boost/asio/impl/read.hpp:  boost::asio::detail::throw_error(ec, "read");
/home/kaworu/boost_1_69_0/boost/asio/impl/read.hpp:    boost::asio::basic_streambuf<Allocator>& b,
/home/kaworu/boost_1_69_0/boost/asio/impl/read.hpp:    boost::asio::basic_streambuf<Allocator>& b)
/home/kaworu/boost_1_69_0/boost/asio/impl/read.hpp:    boost::asio::basic_streambuf<Allocator>& b,
/home/kaworu/boost_1_69_0/boost/asio/impl/read.hpp:    boost::asio::basic_streambuf<Allocator>& b,
/home/kaworu/boost_1_69_0/boost/asio/impl/read.hpp:    boost::asio::detail::consuming_buffers<mutable_buffer,
/home/kaworu/boost_1_69_0/boost/asio/impl/read.hpp:      boost::asio::buffer_sequence_begin(buffers), completion_condition,
/home/kaworu/boost_1_69_0/boost/asio/impl/read.hpp:      boost::asio::buffer_sequence_begin(buffers), transfer_all(),
/home/kaworu/boost_1_69_0/boost/asio/impl/spawn.hpp:  boost::asio::spawn(ex, BOOST_ASIO_MOVE_CAST(Function)(function), attributes);
/home/kaworu/boost_1_69_0/boost/asio/impl/spawn.hpp:  boost::asio::spawn(boost::asio::strand<Executor>(ex),
/home/kaworu/boost_1_69_0/boost/asio/impl/spawn.hpp:  boost::asio::spawn(boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/boost/asio/impl/spawn.hpp:inline void spawn(const boost::asio::io_context::strand& s,
/home/kaworu/boost_1_69_0/boost/asio/impl/spawn.hpp:  boost::asio::spawn(boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/boost/asio/impl/spawn.hpp:  boost::asio::spawn(ctx.get_executor(),
/home/kaworu/boost_1_69_0/boost/asio/impl/buffered_write_stream.hpp:  using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/asio/impl/buffered_write_stream.hpp:  using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/asio/impl/buffered_write_stream.hpp:        using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/asio/impl/buffered_write_stream.hpp:        const std::size_t bytes_copied = boost::asio::buffer_copy(
/home/kaworu/boost_1_69_0/boost/asio/impl/buffered_write_stream.hpp:  using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/asio/impl/buffered_write_stream.hpp:  using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/asio/impl/buffered_write_stream.hpp:  return boost::asio::buffer_copy(
/home/kaworu/boost_1_69_0/boost/asio/impl/execution_context.ipp:  : service_registry_(new boost::asio::detail::service_registry(*this))
/home/kaworu/boost_1_69_0/boost/asio/impl/execution_context.ipp:    boost::asio::execution_context::fork_event event)
/home/kaworu/boost_1_69_0/boost/asio/impl/buffered_read_stream.hpp:  using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/asio/impl/buffered_read_stream.hpp:  using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/asio/impl/buffered_read_stream.hpp:        const std::size_t bytes_copied = boost::asio::buffer_copy(
/home/kaworu/boost_1_69_0/boost/asio/impl/buffered_read_stream.hpp:  using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/asio/impl/io_context.hpp:    boost::asio::detail::throw_error(ec);
/home/kaworu/boost_1_69_0/boost/asio/impl/io_context.hpp:inline io_context::work::work(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/impl/io_context.hpp:inline boost::asio::io_context& io_context::work::get_io_context()
/home/kaworu/boost_1_69_0/boost/asio/impl/io_context.hpp:  return static_cast<boost::asio::io_context&>(io_context_impl_.context());
/home/kaworu/boost_1_69_0/boost/asio/impl/io_context.hpp:inline boost::asio::io_context& io_context::work::get_io_service()
/home/kaworu/boost_1_69_0/boost/asio/impl/io_context.hpp:  return static_cast<boost::asio::io_context&>(io_context_impl_.context());
/home/kaworu/boost_1_69_0/boost/asio/impl/io_context.hpp:inline boost::asio::io_context& io_context::service::get_io_context()
/home/kaworu/boost_1_69_0/boost/asio/impl/io_context.hpp:  return static_cast<boost::asio::io_context&>(context());
/home/kaworu/boost_1_69_0/boost/asio/impl/io_context.hpp:inline boost::asio::io_context& io_context::service::get_io_service()
/home/kaworu/boost_1_69_0/boost/asio/impl/io_context.hpp:  return static_cast<boost::asio::io_context&>(context());
/home/kaworu/boost_1_69_0/boost/asio/impl/read_until.hpp:  boost::asio::detail::throw_error(ec, "read_until");
/home/kaworu/boost_1_69_0/boost/asio/impl/read_until.hpp:  boost::asio::detail::throw_error(ec, "read_until");
/home/kaworu/boost_1_69_0/boost/asio/impl/read_until.hpp:  boost::asio::detail::throw_error(ec, "read_until");
/home/kaworu/boost_1_69_0/boost/asio/impl/read_until.hpp:  boost::asio::detail::throw_error(ec, "read_until");
/home/kaworu/boost_1_69_0/boost/asio/impl/read_until.hpp:    boost::asio::basic_streambuf<Allocator>& b, char delim)
/home/kaworu/boost_1_69_0/boost/asio/impl/read_until.hpp:    boost::asio::basic_streambuf<Allocator>& b, char delim,
/home/kaworu/boost_1_69_0/boost/asio/impl/read_until.hpp:    boost::asio::basic_streambuf<Allocator>& b,
/home/kaworu/boost_1_69_0/boost/asio/impl/read_until.hpp:    boost::asio::basic_streambuf<Allocator>& b,
/home/kaworu/boost_1_69_0/boost/asio/impl/read_until.hpp:    boost::asio::basic_streambuf<Allocator>& b, const boost::regex& expr)
/home/kaworu/boost_1_69_0/boost/asio/impl/read_until.hpp:    boost::asio::basic_streambuf<Allocator>& b, const boost::regex& expr,
/home/kaworu/boost_1_69_0/boost/asio/impl/read_until.hpp:    boost::asio::basic_streambuf<Allocator>& b, MatchCondition match_condition,
/home/kaworu/boost_1_69_0/boost/asio/impl/read_until.hpp:    boost::asio::basic_streambuf<Allocator>& b,
/home/kaworu/boost_1_69_0/boost/asio/impl/read_until.hpp:    boost::asio::basic_streambuf<Allocator>& b,
/home/kaworu/boost_1_69_0/boost/asio/impl/read_until.hpp:    boost::asio::basic_streambuf<Allocator>& b,
/home/kaworu/boost_1_69_0/boost/asio/impl/read_until.hpp:    boost::asio::basic_streambuf<Allocator>& b, const boost::regex& expr,
/home/kaworu/boost_1_69_0/boost/asio/impl/read_until.hpp:    boost::asio::basic_streambuf<Allocator>& b,
/home/kaworu/boost_1_69_0/boost/asio/impl/serial_port_base.ipp:    ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/impl/serial_port_base.ipp:    ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/impl/serial_port_base.ipp:    boost::asio::detail::throw_exception(ex);
/home/kaworu/boost_1_69_0/boost/asio/impl/serial_port_base.ipp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/impl/serial_port_base.ipp:    boost::asio::detail::throw_exception(ex);
/home/kaworu/boost_1_69_0/boost/asio/impl/serial_port_base.ipp:    boost::asio::detail::throw_exception(ex);
/home/kaworu/boost_1_69_0/boost/asio/impl/serial_port_base.ipp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/impl/serial_port_base.ipp:    boost::asio::detail::throw_exception(ex);
/home/kaworu/boost_1_69_0/boost/asio/impl/write.hpp:    boost::asio::detail::consuming_buffers<const_buffer,
/home/kaworu/boost_1_69_0/boost/asio/impl/write.hpp:      boost::asio::buffer_sequence_begin(buffers), completion_condition, ec);
/home/kaworu/boost_1_69_0/boost/asio/impl/write.hpp:  boost::asio::detail::throw_error(ec, "write");
/home/kaworu/boost_1_69_0/boost/asio/impl/write.hpp:  boost::asio::detail::throw_error(ec, "write");
/home/kaworu/boost_1_69_0/boost/asio/impl/write.hpp:  boost::asio::detail::throw_error(ec, "write");
/home/kaworu/boost_1_69_0/boost/asio/impl/write.hpp:  boost::asio::detail::throw_error(ec, "write");
/home/kaworu/boost_1_69_0/boost/asio/impl/write.hpp:    boost::asio::basic_streambuf<Allocator>& b,
/home/kaworu/boost_1_69_0/boost/asio/impl/write.hpp:    boost::asio::basic_streambuf<Allocator>& b)
/home/kaworu/boost_1_69_0/boost/asio/impl/write.hpp:    boost::asio::basic_streambuf<Allocator>& b,
/home/kaworu/boost_1_69_0/boost/asio/impl/write.hpp:    boost::asio::basic_streambuf<Allocator>& b,
/home/kaworu/boost_1_69_0/boost/asio/impl/write.hpp:    boost::asio::detail::consuming_buffers<const_buffer,
/home/kaworu/boost_1_69_0/boost/asio/impl/write.hpp:      boost::asio::buffer_sequence_begin(buffers), completion_condition,
/home/kaworu/boost_1_69_0/boost/asio/impl/write.hpp:      boost::asio::buffer_sequence_begin(buffers), transfer_all(),
/home/kaworu/boost_1_69_0/boost/asio/impl/write.hpp:    boost::asio::basic_streambuf<Allocator>& b,
/home/kaworu/boost_1_69_0/boost/asio/impl/write.hpp:    boost::asio::basic_streambuf<Allocator>& b,
/home/kaworu/boost_1_69_0/boost/asio/impl/io_context.ipp:  boost::asio::detail::scoped_ptr<impl_type> scoped_impl(impl);
/home/kaworu/boost_1_69_0/boost/asio/impl/io_context.ipp:  boost::asio::add_service<impl_type>(*this, scoped_impl.get());
/home/kaworu/boost_1_69_0/boost/asio/impl/io_context.ipp:  boost::asio::detail::throw_error(ec);
/home/kaworu/boost_1_69_0/boost/asio/impl/io_context.ipp:  boost::asio::detail::throw_error(ec);
/home/kaworu/boost_1_69_0/boost/asio/impl/io_context.ipp:  boost::asio::detail::throw_error(ec);
/home/kaworu/boost_1_69_0/boost/asio/impl/io_context.ipp:  boost::asio::detail::throw_error(ec);
/home/kaworu/boost_1_69_0/boost/asio/impl/io_context.ipp:io_context::service::service(boost::asio::io_context& owner)
/home/kaworu/boost_1_69_0/boost/asio/impl/connect.hpp:  boost::asio::detail::throw_error(ec, "connect");
/home/kaworu/boost_1_69_0/boost/asio/impl/connect.hpp:  boost::asio::detail::throw_error(ec, "connect");
/home/kaworu/boost_1_69_0/boost/asio/impl/connect.hpp:  boost::asio::detail::throw_error(ec, "connect");
/home/kaworu/boost_1_69_0/boost/asio/impl/connect.hpp:  boost::asio::detail::throw_error(ec, "connect");
/home/kaworu/boost_1_69_0/boost/asio/impl/connect.hpp:  boost::asio::detail::throw_error(ec, "connect");
/home/kaworu/boost_1_69_0/boost/asio/impl/connect.hpp:  boost::asio::detail::throw_error(ec, "connect");
/home/kaworu/boost_1_69_0/boost/asio/impl/connect.hpp:    ec = boost::asio::error::not_found;
/home/kaworu/boost_1_69_0/boost/asio/impl/connect.hpp:            ec = boost::asio::error::not_found;
/home/kaworu/boost_1_69_0/boost/asio/impl/connect.hpp:            boost::asio::post(socket_.get_executor(),
/home/kaworu/boost_1_69_0/boost/asio/impl/connect.hpp:            ec = boost::asio::error::operation_aborted;
/home/kaworu/boost_1_69_0/boost/asio/impl/connect.hpp:            ec = boost::asio::error::not_found;
/home/kaworu/boost_1_69_0/boost/asio/impl/connect.hpp:            boost::asio::post(socket_.get_executor(),
/home/kaworu/boost_1_69_0/boost/asio/impl/connect.hpp:            ec = boost::asio::error::operation_aborted;
/home/kaworu/boost_1_69_0/boost/asio/impl/read_at.hpp:    boost::asio::detail::consuming_buffers<mutable_buffer,
/home/kaworu/boost_1_69_0/boost/asio/impl/read_at.hpp:      boost::asio::buffer_sequence_begin(buffers), completion_condition, ec);
/home/kaworu/boost_1_69_0/boost/asio/impl/read_at.hpp:  boost::asio::detail::throw_error(ec, "read_at");
/home/kaworu/boost_1_69_0/boost/asio/impl/read_at.hpp:  boost::asio::detail::throw_error(ec, "read_at");
/home/kaworu/boost_1_69_0/boost/asio/impl/read_at.hpp:    uint64_t offset, boost::asio::basic_streambuf<Allocator>& b,
/home/kaworu/boost_1_69_0/boost/asio/impl/read_at.hpp:    uint64_t offset, boost::asio::basic_streambuf<Allocator>& b)
/home/kaworu/boost_1_69_0/boost/asio/impl/read_at.hpp:  boost::asio::detail::throw_error(ec, "read_at");
/home/kaworu/boost_1_69_0/boost/asio/impl/read_at.hpp:    uint64_t offset, boost::asio::basic_streambuf<Allocator>& b,
/home/kaworu/boost_1_69_0/boost/asio/impl/read_at.hpp:    uint64_t offset, boost::asio::basic_streambuf<Allocator>& b,
/home/kaworu/boost_1_69_0/boost/asio/impl/read_at.hpp:  boost::asio::detail::throw_error(ec, "read_at");
/home/kaworu/boost_1_69_0/boost/asio/impl/read_at.hpp:    boost::asio::detail::consuming_buffers<mutable_buffer,
/home/kaworu/boost_1_69_0/boost/asio/impl/read_at.hpp:      boost::asio::buffer_sequence_begin(buffers), completion_condition,
/home/kaworu/boost_1_69_0/boost/asio/impl/read_at.hpp:      boost::asio::buffer_sequence_begin(buffers), transfer_all(),
/home/kaworu/boost_1_69_0/boost/asio/impl/read_at.hpp:    boost::asio::basic_streambuf<Allocator>& streambuf_;
/home/kaworu/boost_1_69_0/boost/asio/impl/read_at.hpp:    uint64_t offset, boost::asio::basic_streambuf<Allocator>& b,
/home/kaworu/boost_1_69_0/boost/asio/impl/read_at.hpp:    uint64_t offset, boost::asio::basic_streambuf<Allocator>& b,
/home/kaworu/boost_1_69_0/boost/asio/impl/write_at.hpp:    boost::asio::detail::consuming_buffers<const_buffer,
/home/kaworu/boost_1_69_0/boost/asio/impl/write_at.hpp:      boost::asio::buffer_sequence_begin(buffers), completion_condition, ec);
/home/kaworu/boost_1_69_0/boost/asio/impl/write_at.hpp:  boost::asio::detail::throw_error(ec, "write_at");
/home/kaworu/boost_1_69_0/boost/asio/impl/write_at.hpp:  boost::asio::detail::throw_error(ec, "write_at");
/home/kaworu/boost_1_69_0/boost/asio/impl/write_at.hpp:    uint64_t offset, boost::asio::basic_streambuf<Allocator>& b,
/home/kaworu/boost_1_69_0/boost/asio/impl/write_at.hpp:    uint64_t offset, boost::asio::basic_streambuf<Allocator>& b)
/home/kaworu/boost_1_69_0/boost/asio/impl/write_at.hpp:  boost::asio::detail::throw_error(ec, "write_at");
/home/kaworu/boost_1_69_0/boost/asio/impl/write_at.hpp:    uint64_t offset, boost::asio::basic_streambuf<Allocator>& b,
/home/kaworu/boost_1_69_0/boost/asio/impl/write_at.hpp:    uint64_t offset, boost::asio::basic_streambuf<Allocator>& b,
/home/kaworu/boost_1_69_0/boost/asio/impl/write_at.hpp:  boost::asio::detail::throw_error(ec, "write_at");
/home/kaworu/boost_1_69_0/boost/asio/impl/write_at.hpp:    boost::asio::detail::consuming_buffers<const_buffer,
/home/kaworu/boost_1_69_0/boost/asio/impl/write_at.hpp:      boost::asio::buffer_sequence_begin(buffers), completion_condition,
/home/kaworu/boost_1_69_0/boost/asio/impl/write_at.hpp:      boost::asio::buffer_sequence_begin(buffers), transfer_all(),
/home/kaworu/boost_1_69_0/boost/asio/impl/write_at.hpp:        boost::asio::basic_streambuf<Allocator>& streambuf,
/home/kaworu/boost_1_69_0/boost/asio/impl/write_at.hpp:    boost::asio::basic_streambuf<Allocator>& streambuf_;
/home/kaworu/boost_1_69_0/boost/asio/impl/write_at.hpp:      boost::asio::basic_streambuf<Allocator>& b, WriteHandler handler)
/home/kaworu/boost_1_69_0/boost/asio/impl/write_at.hpp:    uint64_t offset, boost::asio::basic_streambuf<Allocator>& b,
/home/kaworu/boost_1_69_0/boost/asio/impl/write_at.hpp:    uint64_t offset, boost::asio::basic_streambuf<Allocator>& b,
/home/kaworu/boost_1_69_0/boost/asio/is_executor.hpp:  : boost::asio::detail::is_executor<T>
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * @defgroup connect boost::asio::connect
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * empty, the associated @c error_code is boost::asio::error::not_found.
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * boost::asio::connect(s, r.resolve(q)); @endcode
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * empty, set to boost::asio::error::not_found. Otherwise, contains the error
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * boost::asio::connect(s, r.resolve(q), ec);
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * empty, the associated @c error_code is boost::asio::error::not_found.
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * iterator types such as @c boost::asio::ip::tcp::resolver::iterator.
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * empty, set to boost::asio::error::not_found. Otherwise, contains the error
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * iterator types such as @c boost::asio::ip::tcp::resolver::iterator.
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * empty, the associated @c error_code is boost::asio::error::not_found.
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * boost::asio::connect(s, e.begin(), e.end()); @endcode
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * empty, set to boost::asio::error::not_found. Otherwise, contains the error
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * boost::asio::connect(s, e.begin(), e.end(), ec);
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * empty, the associated @c error_code is boost::asio::error::not_found.
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * It would be used with the boost::asio::connect function as follows:
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * tcp::endpoint e = boost::asio::connect(s,
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * empty, set to boost::asio::error::not_found. Otherwise, contains the error
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * It would be used with the boost::asio::connect function as follows:
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * tcp::endpoint e = boost::asio::connect(s,
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * empty, the associated @c error_code is boost::asio::error::not_found.
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * iterator types such as @c boost::asio::ip::tcp::resolver::iterator.
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * empty, set to boost::asio::error::not_found. Otherwise, contains the error
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * iterator types such as @c boost::asio::ip::tcp::resolver::iterator.
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * empty, the associated @c error_code is boost::asio::error::not_found.
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * It would be used with the boost::asio::connect function as follows:
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * tcp::resolver::results_type::iterator i = boost::asio::connect(
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * empty, set to boost::asio::error::not_found. Otherwise, contains the error
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * It would be used with the boost::asio::connect function as follows:
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * tcp::resolver::results_type::iterator i = boost::asio::connect(
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * @defgroup async_connect boost::asio::async_connect
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: *   // boost::asio::error::not_found. Otherwise, contains the
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: *     boost::asio::async_connect(s, results, connect_handler);
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: *   // boost::asio::error::not_found. Otherwise, contains the
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * iterator types such as @c boost::asio::ip::tcp::resolver::iterator.
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: *   // boost::asio::error::not_found. Otherwise, contains the
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * boost::asio::async_connect(s,
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: *   // boost::asio::error::not_found. Otherwise, contains the
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * It would be used with the boost::asio::connect function as follows:
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: *     boost::asio::async_connect(s, results,
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: *   // boost::asio::error::not_found. Otherwise, contains the
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * iterator types such as @c boost::asio::ip::tcp::resolver::iterator.
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: *   // boost::asio::error::not_found. Otherwise, contains the
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: * It would be used with the boost::asio::connect function as follows:
/home/kaworu/boost_1_69_0/boost/asio/connect.hpp: *     boost::asio::async_connect(s, i, end,
/home/kaworu/boost_1_69_0/boost/asio/read_at.hpp: * @defgroup read_at boost::asio::read_at
/home/kaworu/boost_1_69_0/boost/asio/read_at.hpp: * @code boost::asio::read_at(d, 42, boost::asio::buffer(data, size)); @endcode
/home/kaworu/boost_1_69_0/boost/asio/read_at.hpp: * @code boost::asio::read_at(
/home/kaworu/boost_1_69_0/boost/asio/read_at.hpp: *     boost::asio::transfer_all()); @endcode
/home/kaworu/boost_1_69_0/boost/asio/read_at.hpp: * @code boost::asio::read_at(d, 42,
/home/kaworu/boost_1_69_0/boost/asio/read_at.hpp: *     boost::asio::buffer(data, size), ec); @endcode
/home/kaworu/boost_1_69_0/boost/asio/read_at.hpp: * @code boost::asio::read_at(
/home/kaworu/boost_1_69_0/boost/asio/read_at.hpp: *     boost::asio::transfer_all(), ec); @endcode
/home/kaworu/boost_1_69_0/boost/asio/read_at.hpp: * @code boost::asio::read_at(d, 42, boost::asio::buffer(data, size),
/home/kaworu/boost_1_69_0/boost/asio/read_at.hpp: *     boost::asio::transfer_at_least(32)); @endcode
/home/kaworu/boost_1_69_0/boost/asio/read_at.hpp: * @code boost::asio::read_at(
/home/kaworu/boost_1_69_0/boost/asio/read_at.hpp: *     boost::asio::transfer_all()); @endcode
/home/kaworu/boost_1_69_0/boost/asio/read_at.hpp: * @code boost::asio::read_at(
/home/kaworu/boost_1_69_0/boost/asio/read_at.hpp: *     boost::asio::transfer_all(), ec); @endcode
/home/kaworu/boost_1_69_0/boost/asio/read_at.hpp: * @defgroup async_read_at boost::asio::async_read_at
/home/kaworu/boost_1_69_0/boost/asio/read_at.hpp: * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/read_at.hpp: * boost::asio::async_read_at(d, 42, boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/boost/asio/read_at.hpp: * @code boost::asio::async_read_at(
/home/kaworu/boost_1_69_0/boost/asio/read_at.hpp: *     boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/boost/asio/read_at.hpp: * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/read_at.hpp: * @code boost::asio::async_read_at(d, 42,
/home/kaworu/boost_1_69_0/boost/asio/read_at.hpp: *     boost::asio::buffer(data, size),
/home/kaworu/boost_1_69_0/boost/asio/read_at.hpp: *     boost::asio::transfer_at_least(32),
/home/kaworu/boost_1_69_0/boost/asio/read_at.hpp: * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/read_at.hpp: * @code boost::asio::async_read_at(
/home/kaworu/boost_1_69_0/boost/asio/read_at.hpp: *     boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/boost/asio/read_at.hpp: * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_signal_set.hpp: * Most applications will use the boost::asio::signal_set typedef.
/home/kaworu/boost_1_69_0/boost/asio/basic_signal_set.hpp: * boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/home/kaworu/boost_1_69_0/boost/asio/basic_signal_set.hpp:  explicit basic_signal_set(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/basic_signal_set.hpp:   * @code boost::asio::signal_set signals(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_signal_set.hpp:  basic_signal_set(boost::asio::io_context& io_context, int signal_number_1)
/home/kaworu/boost_1_69_0/boost/asio/basic_signal_set.hpp:    boost::asio::detail::throw_error(ec, "add");
/home/kaworu/boost_1_69_0/boost/asio/basic_signal_set.hpp:   * @code boost::asio::signal_set signals(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_signal_set.hpp:  basic_signal_set(boost::asio::io_context& io_context, int signal_number_1,
/home/kaworu/boost_1_69_0/boost/asio/basic_signal_set.hpp:    boost::asio::detail::throw_error(ec, "add");
/home/kaworu/boost_1_69_0/boost/asio/basic_signal_set.hpp:    boost::asio::detail::throw_error(ec, "add");
/home/kaworu/boost_1_69_0/boost/asio/basic_signal_set.hpp:   * @code boost::asio::signal_set signals(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_signal_set.hpp:  basic_signal_set(boost::asio::io_context& io_context, int signal_number_1,
/home/kaworu/boost_1_69_0/boost/asio/basic_signal_set.hpp:    boost::asio::detail::throw_error(ec, "add");
/home/kaworu/boost_1_69_0/boost/asio/basic_signal_set.hpp:    boost::asio::detail::throw_error(ec, "add");
/home/kaworu/boost_1_69_0/boost/asio/basic_signal_set.hpp:    boost::asio::detail::throw_error(ec, "add");
/home/kaworu/boost_1_69_0/boost/asio/basic_signal_set.hpp:    boost::asio::detail::throw_error(ec, "add");
/home/kaworu/boost_1_69_0/boost/asio/basic_signal_set.hpp:    boost::asio::detail::throw_error(ec, "remove");
/home/kaworu/boost_1_69_0/boost/asio/basic_signal_set.hpp:    boost::asio::detail::throw_error(ec, "clear");
/home/kaworu/boost_1_69_0/boost/asio/basic_signal_set.hpp:   * operation will be invoked with the boost::asio::error::operation_aborted
/home/kaworu/boost_1_69_0/boost/asio/basic_signal_set.hpp:    boost::asio::detail::throw_error(ec, "cancel");
/home/kaworu/boost_1_69_0/boost/asio/basic_signal_set.hpp:   * operation will be invoked with the boost::asio::error::operation_aborted
/home/kaworu/boost_1_69_0/boost/asio/basic_signal_set.hpp:   * error code boost::asio::error::operation_aborted.
/home/kaworu/boost_1_69_0/boost/asio/basic_signal_set.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/deadline_timer_service.hpp:    typename TimeTraits = boost::asio::time_traits<TimeType> >
/home/kaworu/boost_1_69_0/boost/asio/deadline_timer_service.hpp:  : public boost::asio::io_context::service
/home/kaworu/boost_1_69_0/boost/asio/deadline_timer_service.hpp:  : public boost::asio::detail::service_base<
/home/kaworu/boost_1_69_0/boost/asio/deadline_timer_service.hpp:  static boost::asio::io_context::id id;
/home/kaworu/boost_1_69_0/boost/asio/deadline_timer_service.hpp:  explicit deadline_timer_service(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/deadline_timer_service.hpp:    : boost::asio::detail::service_base<
/home/kaworu/boost_1_69_0/boost/asio/uses_executor.hpp: * See boost::asio::executor_arg_t and boost::asio::uses_executor
/home/kaworu/boost_1_69_0/boost/asio/ip/network_v4.hpp: * The boost::asio::ip::network_v4 class provides the ability to use and
/home/kaworu/boost_1_69_0/boost/asio/ip/network_v4.hpp: * @relates boost::asio::ip::address_v4
/home/kaworu/boost_1_69_0/boost/asio/ip/icmp.hpp: * The boost::asio::ip::icmp class contains flags necessary for ICMP sockets.
/home/kaworu/boost_1_69_0/boost/asio/ip/multicast.hpp: * boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/ip/multicast.hpp: * boost::asio::ip::address multicast_address =
/home/kaworu/boost_1_69_0/boost/asio/ip/multicast.hpp: *   boost::asio::ip::address::from_string("225.0.0.1");
/home/kaworu/boost_1_69_0/boost/asio/ip/multicast.hpp: * boost::asio::ip::multicast::join_group option(multicast_address);
/home/kaworu/boost_1_69_0/boost/asio/ip/multicast.hpp:typedef boost::asio::ip::detail::socket_option::multicast_request<
/home/kaworu/boost_1_69_0/boost/asio/ip/multicast.hpp: * boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/ip/multicast.hpp: * boost::asio::ip::address multicast_address =
/home/kaworu/boost_1_69_0/boost/asio/ip/multicast.hpp: *   boost::asio::ip::address::from_string("225.0.0.1");
/home/kaworu/boost_1_69_0/boost/asio/ip/multicast.hpp: * boost::asio::ip::multicast::leave_group option(multicast_address);
/home/kaworu/boost_1_69_0/boost/asio/ip/multicast.hpp:typedef boost::asio::ip::detail::socket_option::multicast_request<
/home/kaworu/boost_1_69_0/boost/asio/ip/multicast.hpp: * boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/ip/multicast.hpp: * boost::asio::ip::address_v4 local_interface =
/home/kaworu/boost_1_69_0/boost/asio/ip/multicast.hpp: *   boost::asio::ip::address_v4::from_string("1.2.3.4");
/home/kaworu/boost_1_69_0/boost/asio/ip/multicast.hpp: * boost::asio::ip::multicast::outbound_interface option(local_interface);
/home/kaworu/boost_1_69_0/boost/asio/ip/multicast.hpp:typedef boost::asio::ip::detail::socket_option::network_interface<
/home/kaworu/boost_1_69_0/boost/asio/ip/multicast.hpp: * boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/ip/multicast.hpp: * boost::asio::ip::multicast::hops option(4);
/home/kaworu/boost_1_69_0/boost/asio/ip/multicast.hpp: * boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/ip/multicast.hpp: * boost::asio::ip::multicast::hops option;
/home/kaworu/boost_1_69_0/boost/asio/ip/multicast.hpp:typedef boost::asio::ip::detail::socket_option::multicast_hops<
/home/kaworu/boost_1_69_0/boost/asio/ip/multicast.hpp: * boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/ip/multicast.hpp: * boost::asio::ip::multicast::enable_loopback option(true);
/home/kaworu/boost_1_69_0/boost/asio/ip/multicast.hpp: * boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/ip/multicast.hpp: * boost::asio::ip::multicast::enable_loopback option;
/home/kaworu/boost_1_69_0/boost/asio/ip/multicast.hpp:typedef boost::asio::ip::detail::socket_option::multicast_enable_loopback<
/home/kaworu/boost_1_69_0/boost/asio/ip/address_v4.hpp: * The boost::asio::ip::address_v4 class provides the ability to use and
/home/kaworu/boost_1_69_0/boost/asio/ip/address_v4.hpp:  typedef boost::asio::detail::array<unsigned char, 4> bytes_type;
/home/kaworu/boost_1_69_0/boost/asio/ip/address_v4.hpp:  boost::asio::detail::in4_addr_type addr_;
/home/kaworu/boost_1_69_0/boost/asio/ip/address_v4.hpp: * @relates boost::asio::ip::address_v4
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_resolver_entry.hpp: * The boost::asio::ip::basic_resolver_entry class template describes an entry
/home/kaworu/boost_1_69_0/boost/asio/ip/address.hpp: * The boost::asio::ip::address class provides the ability to use either IP
/home/kaworu/boost_1_69_0/boost/asio/ip/address.hpp:  BOOST_ASIO_DECL address(const boost::asio::ip::address_v4& ipv4_address);
/home/kaworu/boost_1_69_0/boost/asio/ip/address.hpp:  BOOST_ASIO_DECL address(const boost::asio::ip::address_v6& ipv6_address);
/home/kaworu/boost_1_69_0/boost/asio/ip/address.hpp:      const boost::asio::ip::address_v4& ipv4_address);
/home/kaworu/boost_1_69_0/boost/asio/ip/address.hpp:      const boost::asio::ip::address_v6& ipv6_address);
/home/kaworu/boost_1_69_0/boost/asio/ip/address.hpp:  BOOST_ASIO_DECL boost::asio::ip::address_v4 to_v4() const;
/home/kaworu/boost_1_69_0/boost/asio/ip/address.hpp:  BOOST_ASIO_DECL boost::asio::ip::address_v6 to_v6() const;
/home/kaworu/boost_1_69_0/boost/asio/ip/address.hpp:  boost::asio::ip::address_v4 ipv4_address_;
/home/kaworu/boost_1_69_0/boost/asio/ip/address.hpp:  boost::asio::ip::address_v6 ipv6_address_;
/home/kaworu/boost_1_69_0/boost/asio/ip/address.hpp: * @relates boost::asio::ip::address
/home/kaworu/boost_1_69_0/boost/asio/ip/udp.hpp: * The boost::asio::ip::udp class contains flags necessary for UDP sockets.
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_resolver_query.hpp: * The boost::asio::ip::basic_resolver_query class template describes a query
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_resolver_query.hpp:  const boost::asio::detail::addrinfo_type& hints() const
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_resolver_query.hpp:  boost::asio::detail::addrinfo_type hints_;
/home/kaworu/boost_1_69_0/boost/asio/ip/unicast.hpp: * boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/ip/unicast.hpp: * boost::asio::ip::unicast::hops option(4);
/home/kaworu/boost_1_69_0/boost/asio/ip/unicast.hpp: * boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/ip/unicast.hpp: * boost::asio::ip::unicast::hops option;
/home/kaworu/boost_1_69_0/boost/asio/ip/unicast.hpp:typedef boost::asio::ip::detail::socket_option::unicast_hops<
/home/kaworu/boost_1_69_0/boost/asio/ip/address_v6.hpp: * The boost::asio::ip::address_v6 class provides the ability to use and
/home/kaworu/boost_1_69_0/boost/asio/ip/address_v6.hpp:  typedef boost::asio::detail::array<unsigned char, 16> bytes_type;
/home/kaworu/boost_1_69_0/boost/asio/ip/address_v6.hpp:  boost::asio::detail::in6_addr_type addr_;
/home/kaworu/boost_1_69_0/boost/asio/ip/address_v6.hpp: * @relates boost::asio::ip::address_v6
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_resolver.hpp:    boost::asio::detail::winrt_resolver_service<InternetProtocol>
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_resolver.hpp:    boost::asio::detail::resolver_service<InternetProtocol>
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_resolver.hpp:  explicit basic_resolver(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_resolver.hpp:  boost::asio::io_context& get_io_context()
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_resolver.hpp:  boost::asio::io_context& get_io_service()
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_resolver.hpp:   * will be invoked with the boost::asio::error::operation_aborted error code.
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_resolver.hpp:    boost::asio::detail::throw_error(ec, "resolve");
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_resolver.hpp:    boost::asio::detail::throw_error(ec, "resolve");
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_resolver.hpp:    boost::asio::detail::throw_error(ec, "resolve");
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_resolver.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_resolver.hpp:    boost::asio::async_completion<ResolveHandler,
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_resolver.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_resolver.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_resolver.hpp:    boost::asio::async_completion<ResolveHandler,
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_resolver.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_resolver.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_resolver.hpp:    boost::asio::async_completion<ResolveHandler,
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_resolver.hpp:    boost::asio::detail::throw_error(ec, "resolve");
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_resolver.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_resolver.hpp:    boost::asio::async_completion<ResolveHandler,
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_resolver_iterator.hpp: * The boost::asio::ip::basic_resolver_iterator class template is used to define
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_resolver_iterator.hpp:  typedef boost::asio::detail::shared_ptr<values_type> values_ptr_type;
/home/kaworu/boost_1_69_0/boost/asio/ip/tcp.hpp: * The boost::asio::ip::tcp class contains flags necessary for TCP sockets.
/home/kaworu/boost_1_69_0/boost/asio/ip/tcp.hpp:   * boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/ip/tcp.hpp:   * boost::asio::ip::tcp::no_delay option(true);
/home/kaworu/boost_1_69_0/boost/asio/ip/tcp.hpp:   * boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/ip/tcp.hpp:   * boost::asio::ip::tcp::no_delay option;
/home/kaworu/boost_1_69_0/boost/asio/ip/tcp.hpp:  typedef boost::asio::detail::socket_option::boolean<
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/network_v4.hpp:      boost::asio::detail::throw_error(ec);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/host_name.ipp:  if (boost::asio::detail::socket_ops::gethostname(name, sizeof(name), ec) != 0)
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/host_name.ipp:    boost::asio::detail::throw_error(ec);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/host_name.ipp:  if (boost::asio::detail::socket_ops::gethostname(name, sizeof(name), ec) != 0)
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v4.ipp:    boost::asio::detail::throw_exception(ex);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v4.ipp:    boost::asio::detail::throw_exception(ex);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v4.ipp:  addr_.s_addr = boost::asio::detail::socket_ops::host_to_network_long(
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v4.ipp:      static_cast<boost::asio::detail::u_long_type>(addr));
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v4.ipp:  return boost::asio::detail::socket_ops::network_to_host_long(addr_.s_addr);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v4.ipp:  return boost::asio::detail::socket_ops::network_to_host_long(addr_.s_addr);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v4.ipp:  char addr_str[boost::asio::detail::max_addr_v4_str_len];
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v4.ipp:    boost::asio::detail::socket_ops::inet_ntop(
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v4.ipp:        boost::asio::detail::max_addr_v4_str_len, 0, ec);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v4.ipp:    boost::asio::detail::throw_error(ec);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v4.ipp:  char addr_str[boost::asio::detail::max_addr_v4_str_len];
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v4.ipp:    boost::asio::detail::socket_ops::inet_ntop(
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v4.ipp:        boost::asio::detail::max_addr_v4_str_len, 0, ec);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v4.ipp:  boost::asio::detail::throw_error(ec);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v4.ipp:  if (boost::asio::detail::socket_ops::inet_pton(
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v4.hpp:  return boost::asio::ip::make_address_v4(str);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v4.hpp:  return boost::asio::ip::make_address_v4(str, ec);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v4.hpp:  return boost::asio::ip::make_address_v4(str);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v4.hpp:  return boost::asio::ip::make_address_v4(str, ec);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address.hpp:  return boost::asio::ip::make_address(str);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address.hpp:  return boost::asio::ip::make_address(str, ec);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address.hpp:  return boost::asio::ip::make_address(str);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address.hpp:  return boost::asio::ip::make_address(str, ec);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/network_v4.ipp:    boost::asio::detail::throw_exception(ex);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/network_v4.ipp:        boost::asio::detail::throw_exception(ex);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/network_v4.ipp:        boost::asio::detail::throw_exception(ex);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/network_v4.ipp:  boost::asio::detail::throw_error(ec);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/network_v4.ipp:  boost::asio::detail::throw_error(ec);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/network_v4.ipp:    ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/network_v4.ipp:    ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/network_v4.ipp:    ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/network_v4.ipp:    ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v6.hpp:  return boost::asio::ip::make_address_v6(str);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v6.hpp:  return boost::asio::ip::make_address_v6(str, ec);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v6.hpp:  return boost::asio::ip::make_address_v6(str);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v6.hpp:  return boost::asio::ip::make_address_v6(str, ec);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v6.ipp:      boost::asio::detail::throw_exception(ex);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v6.ipp:  char addr_str[boost::asio::detail::max_addr_v6_str_len];
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v6.ipp:    boost::asio::detail::socket_ops::inet_ntop(
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v6.ipp:        boost::asio::detail::max_addr_v6_str_len, scope_id_, ec);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v6.ipp:    boost::asio::detail::throw_error(ec);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v6.ipp:  char addr_str[boost::asio::detail::max_addr_v6_str_len];
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v6.ipp:    boost::asio::detail::socket_ops::inet_ntop(
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v6.ipp:        boost::asio::detail::max_addr_v6_str_len, scope_id_, ec);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v6.ipp:    boost::asio::detail::throw_exception(ex);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v6.ipp:      sizeof(boost::asio::detail::in6_addr_type)) == 0
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v6.ipp:      sizeof(boost::asio::detail::in6_addr_type));
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v6.ipp:  boost::asio::detail::throw_error(ec);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v6.ipp:  if (boost::asio::detail::socket_ops::inet_pton(
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address_v6.ipp:    boost::asio::detail::throw_exception(ex);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/network_v6.hpp:      boost::asio::detail::throw_error(ec);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/network_v6.ipp:    boost::asio::detail::throw_exception(ex);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/network_v6.ipp:  boost::asio::detail::throw_error(ec);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/network_v6.ipp:  boost::asio::detail::throw_error(ec);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/network_v6.ipp:    ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/network_v6.ipp:    ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/network_v6.ipp:    ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/network_v6.ipp:    ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address.ipp:address::address(const boost::asio::ip::address_v4& ipv4_address)
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address.ipp:address::address(const boost::asio::ip::address_v6& ipv6_address)
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address.ipp:address& address::operator=(const boost::asio::ip::address_v4& ipv4_address)
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address.ipp:  ipv6_address_ = boost::asio::ip::address_v6();
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address.ipp:address& address::operator=(const boost::asio::ip::address_v6& ipv6_address)
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address.ipp:  ipv4_address_ = boost::asio::ip::address_v4();
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address.ipp:  boost::asio::detail::throw_error(ec);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address.ipp:  boost::asio::ip::address_v6 ipv6_address =
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address.ipp:    boost::asio::ip::make_address_v6(str, ec);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address.ipp:  boost::asio::ip::address_v4 ipv4_address =
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address.ipp:    boost::asio::ip::make_address_v4(str, ec);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address.ipp:boost::asio::ip::address_v4 address::to_v4() const
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address.ipp:    boost::asio::detail::throw_exception(ex);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address.ipp:boost::asio::ip::address_v6 address::to_v6() const
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/address.ipp:    boost::asio::detail::throw_exception(ex);
/home/kaworu/boost_1_69_0/boost/asio/ip/impl/basic_endpoint.hpp:  boost::asio::ip::detail::endpoint tmp_ep(endpoint.address(), endpoint.port());
/home/kaworu/boost_1_69_0/boost/asio/ip/network_v6.hpp: * The boost::asio::ip::network_v6 class provides the ability to use and
/home/kaworu/boost_1_69_0/boost/asio/ip/network_v6.hpp: * @relates boost::asio::ip::address_v6
/home/kaworu/boost_1_69_0/boost/asio/ip/resolver_service.hpp:  : public boost::asio::io_context::service
/home/kaworu/boost_1_69_0/boost/asio/ip/resolver_service.hpp:  : public boost::asio::detail::service_base<
/home/kaworu/boost_1_69_0/boost/asio/ip/resolver_service.hpp:  static boost::asio::io_context::id id;
/home/kaworu/boost_1_69_0/boost/asio/ip/resolver_service.hpp:  typedef boost::asio::detail::winrt_resolver_service<InternetProtocol>
/home/kaworu/boost_1_69_0/boost/asio/ip/resolver_service.hpp:  typedef boost::asio::detail::resolver_service<InternetProtocol>
/home/kaworu/boost_1_69_0/boost/asio/ip/resolver_service.hpp:  explicit resolver_service(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/ip/resolver_service.hpp:    : boost::asio::detail::service_base<
/home/kaworu/boost_1_69_0/boost/asio/ip/resolver_service.hpp:    boost::asio::async_completion<ResolveHandler,
/home/kaworu/boost_1_69_0/boost/asio/ip/resolver_service.hpp:    boost::asio::async_completion<ResolveHandler,
/home/kaworu/boost_1_69_0/boost/asio/ip/resolver_service.hpp:  void notify_fork(boost::asio::io_context::fork_event event)
/home/kaworu/boost_1_69_0/boost/asio/ip/v6_only.hpp: * boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/ip/v6_only.hpp: * boost::asio::ip::v6_only option(true);
/home/kaworu/boost_1_69_0/boost/asio/ip/v6_only.hpp: * boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/boost/asio/ip/v6_only.hpp: * boost::asio::ip::v6_only option;
/home/kaworu/boost_1_69_0/boost/asio/ip/v6_only.hpp:typedef boost::asio::detail::socket_option::boolean<
/home/kaworu/boost_1_69_0/boost/asio/ip/v6_only.hpp:typedef boost::asio::detail::socket_option::boolean<
/home/kaworu/boost_1_69_0/boost/asio/ip/v6_only.hpp:    boost::asio::detail::custom_socket_option_level,
/home/kaworu/boost_1_69_0/boost/asio/ip/v6_only.hpp:    boost::asio::detail::always_fail_option> v6_only;
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_endpoint.hpp: * The boost::asio::ip::basic_endpoint class template describes an endpoint that
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_endpoint.hpp:  typedef boost::asio::detail::socket_addr_type data_type;
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_endpoint.hpp:   * boost::asio::ip::tcp::endpoint ep(boost::asio::ip::tcp::v4(), 1234);
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_endpoint.hpp:   * boost::asio::ip::udp::endpoint ep(boost::asio::ip::udp::v6(), 9876);
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_endpoint.hpp:  basic_endpoint(const boost::asio::ip::address& addr, unsigned short port_num)
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_endpoint.hpp:  boost::asio::ip::address address() const
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_endpoint.hpp:  void address(const boost::asio::ip::address& addr)
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_endpoint.hpp:  boost::asio::ip::detail::endpoint impl_;
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_endpoint.hpp: * @relates boost::asio::ip::basic_endpoint
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/endpoint.hpp:  BOOST_ASIO_DECL endpoint(const boost::asio::ip::address& addr,
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/endpoint.hpp:  boost::asio::detail::socket_addr_type* data()
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/endpoint.hpp:  const boost::asio::detail::socket_addr_type* data() const
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/endpoint.hpp:      return sizeof(boost::asio::detail::sockaddr_in4_type);
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/endpoint.hpp:      return sizeof(boost::asio::detail::sockaddr_in6_type);
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/endpoint.hpp:  BOOST_ASIO_DECL boost::asio::ip::address address() const;
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/endpoint.hpp:  BOOST_ASIO_DECL void address(const boost::asio::ip::address& addr);
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/endpoint.hpp:    boost::asio::detail::socket_addr_type base;
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/endpoint.hpp:    boost::asio::detail::sockaddr_in4_type v4;
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/endpoint.hpp:    boost::asio::detail::sockaddr_in6_type v6;
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/impl/endpoint.ipp:      boost::asio::detail::socket_ops::host_to_network_short(port_num);
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/impl/endpoint.ipp:      boost::asio::detail::socket_ops::host_to_network_short(port_num);
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/impl/endpoint.ipp:endpoint::endpoint(const boost::asio::ip::address& addr,
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/impl/endpoint.ipp:      boost::asio::detail::socket_ops::host_to_network_short(port_num);
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/impl/endpoint.ipp:      boost::asio::detail::socket_ops::host_to_network_long(
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/impl/endpoint.ipp:      boost::asio::detail::socket_ops::host_to_network_short(port_num);
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/impl/endpoint.ipp:    boost::asio::ip::address_v6 v6_addr = addr.to_v6();
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/impl/endpoint.ipp:    boost::asio::ip::address_v6::bytes_type bytes = v6_addr.to_bytes();
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/impl/endpoint.ipp:      static_cast<boost::asio::detail::u_long_type>(
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/impl/endpoint.ipp:  if (new_size > sizeof(boost::asio::detail::sockaddr_storage_type))
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/impl/endpoint.ipp:    boost::system::error_code ec(boost::asio::error::invalid_argument);
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/impl/endpoint.ipp:    boost::asio::detail::throw_error(ec);
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/impl/endpoint.ipp:    return boost::asio::detail::socket_ops::network_to_host_short(
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/impl/endpoint.ipp:    return boost::asio::detail::socket_ops::network_to_host_short(
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/impl/endpoint.ipp:      = boost::asio::detail::socket_ops::host_to_network_short(port_num);
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/impl/endpoint.ipp:      = boost::asio::detail::socket_ops::host_to_network_short(port_num);
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/impl/endpoint.ipp:boost::asio::ip::address endpoint::address() const
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/impl/endpoint.ipp:    return boost::asio::ip::address_v4(
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/impl/endpoint.ipp:        boost::asio::detail::socket_ops::network_to_host_long(
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/impl/endpoint.ipp:    boost::asio::ip::address_v6::bytes_type bytes;
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/impl/endpoint.ipp:    return boost::asio::ip::address_v6(bytes, data_.v6.sin6_scope_id);
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/impl/endpoint.ipp:void endpoint::address(const boost::asio::ip::address& addr)
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/socket_option.hpp:        boost::asio::detail::throw_exception(ex);
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/socket_option.hpp:        boost::asio::detail::throw_exception(ex);
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/socket_option.hpp:      boost::asio::detail::throw_exception(ex);
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/socket_option.hpp:      boost::asio::detail::throw_exception(ex);
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/socket_option.hpp:      boost::asio::detail::throw_exception(ex);
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/socket_option.hpp:        boost::asio::detail::throw_exception(ex);
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/socket_option.hpp:        boost::asio::detail::throw_exception(ex);
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/socket_option.hpp:        boost::asio::detail::socket_ops::host_to_network_long(
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/socket_option.hpp:        boost::asio::detail::socket_ops::host_to_network_long(
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/socket_option.hpp:      boost::asio::detail::socket_ops::host_to_network_long(
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/socket_option.hpp:      boost::asio::detail::socket_ops::host_to_network_long(
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/socket_option.hpp:  boost::asio::detail::in4_mreq_type ipv4_value_;
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/socket_option.hpp:  boost::asio::detail::in6_mreq_type ipv6_value_;
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/socket_option.hpp:      boost::asio::detail::socket_ops::host_to_network_long(
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/socket_option.hpp:      boost::asio::detail::socket_ops::host_to_network_long(
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/socket_option.hpp:      boost::asio::detail::socket_ops::host_to_network_long(
/home/kaworu/boost_1_69_0/boost/asio/ip/detail/socket_option.hpp:  boost::asio::detail::in4_addr_type ipv4_value_;
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_resolver_results.hpp: * The boost::asio::ip::basic_resolver_results class template is used to define
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_resolver_results.hpp:      boost::asio::detail::addrinfo_type* address_info,
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_resolver_results.hpp:      const boost::asio::detail::addrinfo_type& hints,
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_resolver_results.hpp:                  boost::asio::detail::winrt_utils::string(
/home/kaworu/boost_1_69_0/boost/asio/ip/basic_resolver_results.hpp:                boost::asio::detail::winrt_utils::integer(
/home/kaworu/boost_1_69_0/boost/asio/basic_io_object.hpp:  boost::asio::io_context& get_io_context()
/home/kaworu/boost_1_69_0/boost/asio/basic_io_object.hpp:  boost::asio::io_context& get_io_service()
/home/kaworu/boost_1_69_0/boost/asio/basic_io_object.hpp:  typedef boost::asio::io_context::executor_type executor_type;
/home/kaworu/boost_1_69_0/boost/asio/basic_io_object.hpp:  explicit basic_io_object(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/basic_io_object.hpp:    : service_(boost::asio::use_service<IoObjectService>(io_context))
/home/kaworu/boost_1_69_0/boost/asio/basic_io_object.hpp:  boost::asio::io_context& get_io_context()
/home/kaworu/boost_1_69_0/boost/asio/basic_io_object.hpp:  boost::asio::io_context& get_io_service()
/home/kaworu/boost_1_69_0/boost/asio/basic_io_object.hpp:  typedef boost::asio::io_context::executor_type executor_type;
/home/kaworu/boost_1_69_0/boost/asio/basic_io_object.hpp:  explicit basic_io_object(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/basic_io_object.hpp:    : service_(&boost::asio::use_service<IoObjectService>(io_context))
/home/kaworu/boost_1_69_0/boost/asio/basic_io_object.hpp:    : service_(&boost::asio::use_service<IoObjectService>(
/home/kaworu/boost_1_69_0/boost/asio/detail/reactor_op_queue.hpp:        boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/boost/asio/detail/reactor_op_queue.hpp:        boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_timer_scheduler.hpp:  : public boost::asio::detail::service_base<winrt_timer_scheduler>
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_timer_scheduler.hpp:  BOOST_ASIO_DECL winrt_timer_scheduler(boost::asio::io_context& io_context);
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_timer_scheduler.hpp:      boost::asio::io_context::fork_event fork_ev);
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_timer_scheduler.hpp:  boost::asio::detail::mutex mutex_;
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_timer_scheduler.hpp:  boost::asio::detail::event event_;
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_timer_scheduler.hpp:  boost::asio::detail::thread* thread_;
/home/kaworu/boost_1_69_0/boost/asio/detail/winapp_thread.hpp:          boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/winapp_thread.hpp:      boost::asio::detail::throw_error(ec, "thread");
/home/kaworu/boost_1_69_0/boost/asio/detail/descriptor_write_op.hpp:    buffer_sequence_adapter<boost::asio::const_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/descriptor_write_op.hpp:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/home/kaworu/boost_1_69_0/boost/asio/detail/descriptor_write_op.hpp:    p.h = boost::asio::detail::addressof(handler.handler_);
/home/kaworu/boost_1_69_0/boost/asio/detail/conditionally_enabled_event.hpp:  boost::asio::detail::event event_;
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_service.hpp:  win_iocp_socket_service(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_service.hpp:    buffer_sequence_adapter<boost::asio::const_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_service.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_service.hpp:    buffer_sequence_adapter<boost::asio::const_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_service.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_service.hpp:    buffer_sequence_adapter<boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_service.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_service.hpp:    buffer_sequence_adapter<boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_service.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_service.hpp:      ec = boost::asio::error::already_open;
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_service.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_service.hpp:      boost::asio::io_context* peer_io_context,
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_service.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_service.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/wince_thread.hpp:          boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/wince_thread.hpp:      boost::asio::detail::throw_error(ec, "thread");
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_wait_op.hpp:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_wait_op.hpp:    p.h = boost::asio::detail::addressof(handler.handler_);
/home/kaworu/boost_1_69_0/boost/asio/detail/null_thread.hpp:    boost::asio::detail::throw_error(
/home/kaworu/boost_1_69_0/boost/asio/detail/null_thread.hpp:        boost::asio::error::operation_not_supported, "thread");
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_cont_helpers.hpp:  using boost::asio::asio_handler_is_continuation;
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_cont_helpers.hpp:      boost::asio::detail::addressof(context));
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_recvfrom_op.hpp:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_recvfrom_op.hpp:      buffer_sequence_adapter<boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_recvfrom_op.hpp:    p.h = boost::asio::detail::addressof(handler.handler_);
/home/kaworu/boost_1_69_0/boost/asio/detail/kqueue_reactor.hpp:  BOOST_ASIO_DECL kqueue_reactor(boost::asio::execution_context& ctx);
/home/kaworu/boost_1_69_0/boost/asio/detail/kqueue_reactor.hpp:      boost::asio::execution_context::fork_event fork_ev);
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_wait_op.hpp:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_wait_op.hpp:        ec = boost::asio::error::operation_aborted;
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_wait_op.hpp:        ec = boost::asio::error::connection_reset;
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_wait_op.hpp:      ec = boost::asio::error::connection_refused;
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_wait_op.hpp:    p.h = boost::asio::detail::addressof(handler.handler_);
/home/kaworu/boost_1_69_0/boost/asio/detail/null_static_mutex.hpp:  typedef boost::asio::detail::scoped_lock<null_static_mutex> scoped_lock;
/home/kaworu/boost_1_69_0/boost/asio/detail/resolve_endpoint_op.hpp:  typedef boost::asio::ip::basic_resolver_results<Protocol> results_type;
/home/kaworu/boost_1_69_0/boost/asio/detail/resolve_endpoint_op.hpp:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/home/kaworu/boost_1_69_0/boost/asio/detail/resolve_endpoint_op.hpp:      p.h = boost::asio::detail::addressof(handler.handler_);
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_recv_op.hpp:    buffer_sequence_adapter<boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_recv_op.hpp:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_recv_op.hpp:    p.h = boost::asio::detail::addressof(handler.handler_);
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_descriptor_service.hpp:    : private boost::asio::detail::noncopyable
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_descriptor_service.hpp:      boost::asio::io_context& io_context);
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_descriptor_service.hpp:      ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_descriptor_service.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_descriptor_service.hpp:        p.p->ec_ = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_descriptor_service.hpp:    buffer_sequence_adapter<boost::asio::const_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_descriptor_service.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_descriptor_service.hpp:        buffer_sequence_adapter<boost::asio::const_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_descriptor_service.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_descriptor_service.hpp:    buffer_sequence_adapter<boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_descriptor_service.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_descriptor_service.hpp:        buffer_sequence_adapter<boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_descriptor_service.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/scheduler.hpp:  BOOST_ASIO_DECL scheduler(boost::asio::execution_context& ctx,
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_ssocket_service_base.hpp:      boost::asio::io_context& io_context);
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_ssocket_service_base.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_ssocket_service_base.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_ssocket_service_base.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_ssocket_service_base.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_ssocket_service_base.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_ssocket_service_base.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_ssocket_service_base.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_ssocket_service_base.hpp:        buffer_sequence_adapter<boost::asio::const_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_ssocket_service_base.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_ssocket_service_base.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_ssocket_service_base.hpp:        buffer_sequence_adapter<boost::asio::const_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_ssocket_service_base.hpp:    boost::system::error_code ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_ssocket_service_base.hpp:        buffer_sequence_adapter<boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_ssocket_service_base.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_ssocket_service_base.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_ssocket_service_base.hpp:        buffer_sequence_adapter<boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_ssocket_service_base.hpp:    boost::system::error_code ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_ssocket_service_base.hpp:      base_implementation_type& impl, const boost::asio::const_buffer& data,
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_ssocket_service_base.hpp:      const boost::asio::const_buffer& data, socket_base::message_flags flags,
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_ssocket_service_base.hpp:      base_implementation_type& impl, const boost::asio::mutable_buffer& data,
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_ssocket_service_base.hpp:      const boost::asio::mutable_buffer& data, socket_base::message_flags flags,
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_ssocket_service_base.hpp:  boost::asio::detail::mutex mutex_;
/home/kaworu/boost_1_69_0/boost/asio/detail/string_view.hpp:# define BOOST_ASIO_STRING_VIEW_PARAM boost::asio::string_view
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_serial_port_service.hpp:      boost::asio::io_context& io_context);
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_serial_port_service.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/posix_mutex.hpp:  typedef boost::asio::detail::scoped_lock<posix_mutex> scoped_lock;
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_socket_send_op.hpp:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_socket_send_op.hpp:      buffer_sequence_adapter<boost::asio::const_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_socket_send_op.hpp:    p.h = boost::asio::detail::addressof(handler.handler_);
/home/kaworu/boost_1_69_0/boost/asio/detail/std_static_mutex.hpp:  typedef boost::asio::detail::scoped_lock<std_static_mutex> scoped_lock;
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_handle_write_op.hpp:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_handle_write_op.hpp:      buffer_sequence_adapter<boost::asio::const_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_handle_write_op.hpp:    p.h = boost::asio::detail::addressof(handler.handler_);
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_recvmsg_op.hpp:    buffer_sequence_adapter<boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_recvmsg_op.hpp:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_recvmsg_op.hpp:    p.h = boost::asio::detail::addressof(handler.handler_);
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_resolver_service.hpp:  typedef boost::asio::ip::basic_resolver_query<Protocol> query_type;
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_resolver_service.hpp:  typedef boost::asio::ip::basic_resolver_results<Protocol> results_type;
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_resolver_service.hpp:  winrt_resolver_service(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_resolver_service.hpp:  void notify_fork(boost::asio::io_context::fork_event)
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_resolver_service.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_resolver_service.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_resolver_service.hpp:    boost::system::error_code ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/service_registry.hpp:  mutable boost::asio::detail::mutex mutex_;
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_socket_connect_op.hpp:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_socket_connect_op.hpp:    p.h = boost::asio::detail::addressof(handler.handler_);
/home/kaworu/boost_1_69_0/boost/asio/detail/signal_handler.hpp:    ptr p = { boost::asio::detail::addressof(h->handler_), h, h };
/home/kaworu/boost_1_69_0/boost/asio/detail/signal_handler.hpp:    p.h = boost::asio::detail::addressof(handler.handler_);
/home/kaworu/boost_1_69_0/boost/asio/detail/winsock_init.hpp:  //   boost::asio::detail::winsock_init<>::manual manual_winsock_init;
/home/kaworu/boost_1_69_0/boost/asio/detail/descriptor_read_op.hpp:    buffer_sequence_adapter<boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/descriptor_read_op.hpp:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/home/kaworu/boost_1_69_0/boost/asio/detail/descriptor_read_op.hpp:    p.h = boost::asio::detail::addressof(handler.handler_);
/home/kaworu/boost_1_69_0/boost/asio/detail/resolver_service_base.hpp:  BOOST_ASIO_DECL resolver_service_base(boost::asio::io_context& io_context);
/home/kaworu/boost_1_69_0/boost/asio/detail/resolver_service_base.hpp:      boost::asio::io_context::fork_event fork_ev);
/home/kaworu/boost_1_69_0/boost/asio/detail/resolver_service_base.hpp:    : private boost::asio::detail::noncopyable
/home/kaworu/boost_1_69_0/boost/asio/detail/resolver_service_base.hpp:    explicit auto_addrinfo(boost::asio::detail::addrinfo_type* ai)
/home/kaworu/boost_1_69_0/boost/asio/detail/resolver_service_base.hpp:    operator boost::asio::detail::addrinfo_type*()
/home/kaworu/boost_1_69_0/boost/asio/detail/resolver_service_base.hpp:    boost::asio::detail::addrinfo_type* ai_;
/home/kaworu/boost_1_69_0/boost/asio/detail/resolver_service_base.hpp:  boost::asio::detail::mutex mutex_;
/home/kaworu/boost_1_69_0/boost/asio/detail/resolver_service_base.hpp:  boost::asio::detail::scoped_ptr<boost::asio::io_context> work_io_context_;
/home/kaworu/boost_1_69_0/boost/asio/detail/resolver_service_base.hpp:  boost::asio::executor_work_guard<
/home/kaworu/boost_1_69_0/boost/asio/detail/resolver_service_base.hpp:      boost::asio::io_context::executor_type> work_;
/home/kaworu/boost_1_69_0/boost/asio/detail/resolver_service_base.hpp:  boost::asio::detail::scoped_ptr<boost::asio::detail::thread> work_thread_;
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_handle_service.hpp:  BOOST_ASIO_DECL win_iocp_handle_service(boost::asio::io_context& io_context);
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_handle_service.hpp:    boost::asio::const_buffer buffer =
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_handle_service.hpp:      buffer_sequence_adapter<boost::asio::const_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_handle_service.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_handle_service.hpp:        buffer_sequence_adapter<boost::asio::const_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_handle_service.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_handle_service.hpp:        buffer_sequence_adapter<boost::asio::const_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_handle_service.hpp:    boost::asio::mutable_buffer buffer =
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_handle_service.hpp:      buffer_sequence_adapter<boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_handle_service.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_handle_service.hpp:        buffer_sequence_adapter<boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_handle_service.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_handle_service.hpp:        buffer_sequence_adapter<boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_handle_service.hpp:      uint64_t offset, const boost::asio::const_buffer& buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_handle_service.hpp:      uint64_t offset, const boost::asio::const_buffer& buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_handle_service.hpp:      uint64_t offset, const boost::asio::mutable_buffer& buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_handle_service.hpp:      uint64_t offset, const boost::asio::mutable_buffer& buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/std_mutex.hpp:  typedef boost::asio::detail::scoped_lock<std_mutex> scoped_lock;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:  null_socket_service(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    boost::system::error_code ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    boost::system::error_code ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    boost::system::error_code ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    boost::system::error_code ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    boost::system::error_code ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    boost::system::error_code ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    boost::system::error_code ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    boost::system::error_code ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    boost::system::error_code ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    boost::system::error_code ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    boost::system::error_code ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:    boost::system::error_code ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/null_socket_service.hpp:  boost::asio::io_context& io_context_;
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_recvmsg_op.hpp:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_recvmsg_op.hpp:      buffer_sequence_adapter<boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_recvmsg_op.hpp:    p.h = boost::asio::detail::addressof(handler.handler_);
/home/kaworu/boost_1_69_0/boost/asio/detail/completion_handler.hpp:    ptr p = { boost::asio::detail::addressof(h->handler_), h, h };
/home/kaworu/boost_1_69_0/boost/asio/detail/completion_handler.hpp:    p.h = boost::asio::detail::addressof(handler);
/home/kaworu/boost_1_69_0/boost/asio/detail/dev_poll_reactor.hpp:  BOOST_ASIO_DECL dev_poll_reactor(boost::asio::execution_context& ctx);
/home/kaworu/boost_1_69_0/boost/asio/detail/dev_poll_reactor.hpp:      boost::asio::execution_context::fork_event fork_ev);
/home/kaworu/boost_1_69_0/boost/asio/detail/dev_poll_reactor.hpp:  boost::asio::detail::mutex mutex_;
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_handle_read_op.hpp:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_handle_read_op.hpp:      buffer_sequence_adapter<boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_handle_read_op.hpp:      ec = boost::asio::error::eof;
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_handle_read_op.hpp:    p.h = boost::asio::detail::addressof(handler.handler_);
/home/kaworu/boost_1_69_0/boost/asio/detail/win_mutex.hpp:  typedef boost::asio::detail::scoped_lock<win_mutex> scoped_lock;
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_accept_op.hpp:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_accept_op.hpp:      if (ec == boost::asio::error::connection_aborted
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_accept_op.hpp:    p.h = boost::asio::detail::addressof(handler.handler_);
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_accept_op.hpp:      const Protocol& protocol, boost::asio::io_context& peer_io_context,
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_accept_op.hpp:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_accept_op.hpp:      if (ec == boost::asio::error::connection_aborted
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_accept_op.hpp:    p.h = boost::asio::detail::addressof(handler.handler_);
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_recvfrom_op.hpp:    buffer_sequence_adapter<boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_recvfrom_op.hpp:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_recvfrom_op.hpp:    p.h = boost::asio::detail::addressof(handler.handler_);
/home/kaworu/boost_1_69_0/boost/asio/detail/conditionally_enabled_mutex.hpp:    boost::asio::detail::mutex& mutex()
/home/kaworu/boost_1_69_0/boost/asio/detail/conditionally_enabled_mutex.hpp:  boost::asio::detail::mutex mutex_;
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_socket_recv_op.hpp:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_socket_recv_op.hpp:      buffer_sequence_adapter<boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_socket_recv_op.hpp:        !buffer_sequence_adapter<boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_socket_recv_op.hpp:      o->ec_ = boost::asio::error::eof;
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_socket_recv_op.hpp:    p.h = boost::asio::detail::addressof(handler.handler_);
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_tracking.hpp:  : public boost::asio::detail::handler_tracking::tracked_handler
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_tracking.hpp:  , public boost::asio::detail::handler_tracking::tracked_handler
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_tracking.hpp:  boost::asio::detail::handler_tracking::init()
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_tracking.hpp:  boost::asio::detail::handler_tracking::creation args
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_tracking.hpp:  boost::asio::detail::handler_tracking::completion tracked_completion args
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_tracking.hpp:  boost::asio::detail::handler_tracking::operation args
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_tracking.hpp:  boost::asio::detail::handler_tracking::reactor_registration args
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_tracking.hpp:  boost::asio::detail::handler_tracking::reactor_deregistration args
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_tracking.hpp:  boost::asio::detail::handler_tracking::reactor_events args
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_tracking.hpp:  boost::asio::detail::handler_tracking::reactor_operation args
/home/kaworu/boost_1_69_0/boost/asio/detail/select_reactor.hpp:  BOOST_ASIO_DECL select_reactor(boost::asio::execution_context& ctx);
/home/kaworu/boost_1_69_0/boost/asio/detail/select_reactor.hpp:      boost::asio::execution_context::fork_event fork_ev);
/home/kaworu/boost_1_69_0/boost/asio/detail/select_reactor.hpp:  boost::asio::detail::mutex mutex_;
/home/kaworu/boost_1_69_0/boost/asio/detail/select_reactor.hpp:  boost::asio::detail::thread* thread_;
/home/kaworu/boost_1_69_0/boost/asio/detail/resolve_query_op.hpp:  typedef boost::asio::ip::basic_resolver_query<Protocol> query_type;
/home/kaworu/boost_1_69_0/boost/asio/detail/resolve_query_op.hpp:  typedef boost::asio::ip::basic_resolver_results<Protocol> results_type;
/home/kaworu/boost_1_69_0/boost/asio/detail/resolve_query_op.hpp:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/home/kaworu/boost_1_69_0/boost/asio/detail/resolve_query_op.hpp:      p.h = boost::asio::detail::addressof(handler.handler_);
/home/kaworu/boost_1_69_0/boost/asio/detail/resolve_query_op.hpp:  boost::asio::detail::addrinfo_type* addrinfo_;
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_utils.hpp:  using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_utils.hpp:  boost::asio::buffer_copy(boost::asio::buffer(bytes, size), buffers);
/home/kaworu/boost_1_69_0/boost/asio/detail/signal_set_service.hpp:  BOOST_ASIO_DECL signal_set_service(boost::asio::io_context& io_context);
/home/kaworu/boost_1_69_0/boost/asio/detail/signal_set_service.hpp:      boost::asio::io_context::fork_event fork_ev);
/home/kaworu/boost_1_69_0/boost/asio/detail/signal_set_service.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_service.hpp:  reactive_socket_service(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_service.hpp:    buffer_sequence_adapter<boost::asio::const_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_service.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_service.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_service.hpp:    buffer_sequence_adapter<boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_service.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_service.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_service.hpp:      ec = boost::asio::error::already_open;
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_service.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_service.hpp:      boost::asio::io_context* peer_io_context,
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_service.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_service.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_connect_op.hpp:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_connect_op.hpp:    p.h = boost::asio::detail::addressof(handler.handler_);
/home/kaworu/boost_1_69_0/boost/asio/detail/wait_handler.hpp:    ptr p = { boost::asio::detail::addressof(h->handler_), h, h };
/home/kaworu/boost_1_69_0/boost/asio/detail/wait_handler.hpp:    p.h = boost::asio::detail::addressof(handler.handler_);
/home/kaworu/boost_1_69_0/boost/asio/detail/is_buffer_sequence.hpp:      decltype(boost::asio::buffer_sequence_begin(*t)),
/home/kaworu/boost_1_69_0/boost/asio/detail/is_buffer_sequence.hpp:      decltype(boost::asio::buffer_sequence_end(*t)),
/home/kaworu/boost_1_69_0/boost/asio/detail/is_buffer_sequence.hpp:      decltype(*boost::asio::buffer_sequence_begin(*t)),
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_overlapped_ptr.hpp:      boost::asio::io_context& io_context, BOOST_ASIO_MOVE_ARG(Handler) handler)
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_overlapped_ptr.hpp:  void reset(boost::asio::io_context& io_context, Handler handler)
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_overlapped_ptr.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/thread_group.hpp:    boost::asio::detail::thread thread_;
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_recv_op.hpp:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_recv_op.hpp:      buffer_sequence_adapter<boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_recv_op.hpp:        buffer_sequence_adapter<boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_recv_op.hpp:    p.h = boost::asio::detail::addressof(handler.handler_);
/home/kaworu/boost_1_69_0/boost/asio/detail/strand_service.hpp:  : public boost::asio::detail::service_base<strand_service>
/home/kaworu/boost_1_69_0/boost/asio/detail/strand_service.hpp:    boost::asio::detail::mutex mutex_;
/home/kaworu/boost_1_69_0/boost/asio/detail/strand_service.hpp:  BOOST_ASIO_DECL explicit strand_service(boost::asio::io_context& io_context);
/home/kaworu/boost_1_69_0/boost/asio/detail/strand_service.hpp:  boost::asio::detail::mutex mutex_;
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_serial_port_service.hpp:      boost::asio::io_context& io_context);
/home/kaworu/boost_1_69_0/boost/asio/detail/consuming_buffers.hpp:    using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/boost/asio/detail/consuming_buffers.hpp:    Buffer_Iterator next = boost::asio::buffer_sequence_begin(buffers_);
/home/kaworu/boost_1_69_0/boost/asio/detail/consuming_buffers.hpp:    Buffer_Iterator end = boost::asio::buffer_sequence_end(buffers_);
/home/kaworu/boost_1_69_0/boost/asio/detail/consuming_buffers.hpp:      result.elems[result.count] = boost::asio::buffer(next_buf, max_size);
/home/kaworu/boost_1_69_0/boost/asio/detail/consuming_buffers.hpp:    Buffer_Iterator next = boost::asio::buffer_sequence_begin(buffers_);
/home/kaworu/boost_1_69_0/boost/asio/detail/consuming_buffers.hpp:    Buffer_Iterator end = boost::asio::buffer_sequence_end(buffers_);
/home/kaworu/boost_1_69_0/boost/asio/detail/consuming_buffers.hpp:    return boost::asio::buffer(buffer_ + total_consumed_, max_size);
/home/kaworu/boost_1_69_0/boost/asio/detail/consuming_buffers.hpp:    result[0] = boost::asio::buffer(result[0] + total_consumed_, max_size);
/home/kaworu/boost_1_69_0/boost/asio/detail/consuming_buffers.hpp:    result[1] = boost::asio::buffer(
/home/kaworu/boost_1_69_0/boost/asio/detail/consuming_buffers.hpp:    result[0] = boost::asio::buffer(result[0] + total_consumed_, max_size);
/home/kaworu/boost_1_69_0/boost/asio/detail/consuming_buffers.hpp:    result[1] = boost::asio::buffer(
/home/kaworu/boost_1_69_0/boost/asio/detail/consuming_buffers.hpp:  : public boost::asio::null_buffers
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_io_context.hpp:  BOOST_ASIO_DECL win_iocp_io_context(boost::asio::execution_context& ctx,
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_sendto_op.hpp:    buffer_sequence_adapter<boost::asio::const_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_sendto_op.hpp:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_sendto_op.hpp:    p.h = boost::asio::detail::addressof(handler.handler_);
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_connect_op.hpp:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_connect_op.hpp:    p.h = boost::asio::detail::addressof(handler.handler_);
/home/kaworu/boost_1_69_0/boost/asio/detail/noncopyable.hpp:using boost::asio::detail::noncopyable;
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_send_op.hpp:    buffer_sequence_adapter<boost::asio::const_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_send_op.hpp:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_send_op.hpp:    p.h = boost::asio::detail::addressof(handler.handler_);
/home/kaworu/boost_1_69_0/boost/asio/detail/descriptor_ops.hpp:      boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_ssocket_service.hpp:  winrt_ssocket_service(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_ssocket_service.hpp:      ec = boost::asio::error::already_open;
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_ssocket_service.hpp:      ec = boost::asio::error::already_open;
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_ssocket_service.hpp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_ssocket_service.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/timer_queue.hpp:        op->ec_ = boost::asio::error::operation_aborted;
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:      sizeof(boost::asio::detail::zero_arg_copyable_handler_test( \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:          boost::asio::detail::clvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:  typedef boost::asio::detail::handler_type_requirements< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:        boost::asio::detail::argbyv( \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:          boost::asio::detail::clvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:        boost::asio::detail::lvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:      sizeof(boost::asio::detail::two_arg_handler_test( \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:          boost::asio::detail::rvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:  typedef boost::asio::detail::handler_type_requirements< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:        boost::asio::detail::argbyv( \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:          boost::asio::detail::rvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:        boost::asio::detail::lvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:            boost::asio::detail::lvref<const boost::system::error_code>(), \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:            boost::asio::detail::lvref<const std::size_t>()), \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:      sizeof(boost::asio::detail::two_arg_handler_test( \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:          boost::asio::detail::rvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:  typedef boost::asio::detail::handler_type_requirements< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:        boost::asio::detail::argbyv( \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:          boost::asio::detail::rvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:        boost::asio::detail::lvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:            boost::asio::detail::lvref<const boost::system::error_code>(), \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:            boost::asio::detail::lvref<const std::size_t>()), \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:      sizeof(boost::asio::detail::one_arg_handler_test( \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:          boost::asio::detail::rvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:  typedef boost::asio::detail::handler_type_requirements< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:        boost::asio::detail::argbyv( \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:          boost::asio::detail::rvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:        boost::asio::detail::lvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:            boost::asio::detail::lvref<const boost::system::error_code>()), \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:      sizeof(boost::asio::detail::two_arg_move_handler_test( \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:          boost::asio::detail::rvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:  typedef boost::asio::detail::handler_type_requirements< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:        boost::asio::detail::argbyv( \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:          boost::asio::detail::rvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:        boost::asio::detail::lvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:            boost::asio::detail::lvref<const boost::system::error_code>(), \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:            boost::asio::detail::rvref<socket_type>()), \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:      sizeof(boost::asio::detail::one_arg_handler_test( \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:          boost::asio::detail::rvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:  typedef boost::asio::detail::handler_type_requirements< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:        boost::asio::detail::argbyv( \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:          boost::asio::detail::rvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:        boost::asio::detail::lvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:            boost::asio::detail::lvref<const boost::system::error_code>()), \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:      sizeof(boost::asio::detail::two_arg_handler_test( \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:          boost::asio::detail::rvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:  typedef boost::asio::detail::handler_type_requirements< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:        boost::asio::detail::argbyv( \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:          boost::asio::detail::rvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:        boost::asio::detail::lvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:            boost::asio::detail::lvref<const boost::system::error_code>(), \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:            boost::asio::detail::lvref<const endpoint_type>()), \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:      sizeof(boost::asio::detail::two_arg_handler_test( \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:          boost::asio::detail::rvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:  typedef boost::asio::detail::handler_type_requirements< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:        boost::asio::detail::argbyv( \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:          boost::asio::detail::rvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:        boost::asio::detail::lvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:            boost::asio::detail::lvref<const boost::system::error_code>(), \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:            boost::asio::detail::lvref<const iter_type>()), \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:      sizeof(boost::asio::detail::two_arg_handler_test( \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:          boost::asio::detail::rvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:  typedef boost::asio::detail::handler_type_requirements< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:        boost::asio::detail::argbyv( \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:          boost::asio::detail::rvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:        boost::asio::detail::lvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:            boost::asio::detail::lvref<const boost::system::error_code>(), \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:            boost::asio::detail::lvref<const range_type>()), \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:      sizeof(boost::asio::detail::one_arg_handler_test( \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:          boost::asio::detail::rvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:  typedef boost::asio::detail::handler_type_requirements< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:        boost::asio::detail::argbyv( \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:          boost::asio::detail::rvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:        boost::asio::detail::lvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:            boost::asio::detail::lvref<const boost::system::error_code>()), \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:      sizeof(boost::asio::detail::two_arg_handler_test( \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:          boost::asio::detail::rvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:  typedef boost::asio::detail::handler_type_requirements< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:        boost::asio::detail::argbyv( \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:          boost::asio::detail::rvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:        boost::asio::detail::lvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:            boost::asio::detail::lvref<const boost::system::error_code>(), \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:            boost::asio::detail::lvref<const int>()), \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:      sizeof(boost::asio::detail::one_arg_handler_test( \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:          boost::asio::detail::rvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:  typedef boost::asio::detail::handler_type_requirements< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:        boost::asio::detail::argbyv( \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:          boost::asio::detail::rvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:        boost::asio::detail::lvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:            boost::asio::detail::lvref<const boost::system::error_code>()), \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:      sizeof(boost::asio::detail::two_arg_handler_test( \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:          boost::asio::detail::rvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:  typedef boost::asio::detail::handler_type_requirements< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:        boost::asio::detail::argbyv( \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:          boost::asio::detail::rvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:        boost::asio::detail::lvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:          boost::asio::detail::lvref<const boost::system::error_code>(), \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:          boost::asio::detail::lvref<const std::size_t>()), \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:      sizeof(boost::asio::detail::one_arg_handler_test( \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:          boost::asio::detail::rvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:  typedef boost::asio::detail::handler_type_requirements< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:        boost::asio::detail::argbyv( \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:          boost::asio::detail::rvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:        boost::asio::detail::lvref< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_type_requirements.hpp:            boost::asio::detail::lvref<const boost::system::error_code>()), \
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_service_base.hpp:      boost::asio::io_context& io_context);
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_service_base.hpp:      ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_service_base.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_service_base.hpp:        p.p->ec_ = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_service_base.hpp:    buffer_sequence_adapter<boost::asio::const_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_service_base.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_service_base.hpp:          && buffer_sequence_adapter<boost::asio::const_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_service_base.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_service_base.hpp:    buffer_sequence_adapter<boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_service_base.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_service_base.hpp:          && buffer_sequence_adapter<boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_service_base.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_service_base.hpp:    buffer_sequence_adapter<boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_service_base.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_service_base.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/buffer_sequence_adapter.hpp:      const boost::asio::mutable_buffer& buffer);
/home/kaworu/boost_1_69_0/boost/asio/detail/buffer_sequence_adapter.hpp:      const boost::asio::const_buffer& buffer);
/home/kaworu/boost_1_69_0/boost/asio/detail/buffer_sequence_adapter.hpp:      const boost::asio::mutable_buffer& buffer)
/home/kaworu/boost_1_69_0/boost/asio/detail/buffer_sequence_adapter.hpp:      const boost::asio::const_buffer& buffer)
/home/kaworu/boost_1_69_0/boost/asio/detail/buffer_sequence_adapter.hpp:      const boost::asio::mutable_buffer& buffer)
/home/kaworu/boost_1_69_0/boost/asio/detail/buffer_sequence_adapter.hpp:      const boost::asio::const_buffer& buffer)
/home/kaworu/boost_1_69_0/boost/asio/detail/buffer_sequence_adapter.hpp:        boost::asio::buffer_sequence_begin(buffer_sequence),
/home/kaworu/boost_1_69_0/boost/asio/detail/buffer_sequence_adapter.hpp:        boost::asio::buffer_sequence_end(buffer_sequence));
/home/kaworu/boost_1_69_0/boost/asio/detail/buffer_sequence_adapter.hpp:        boost::asio::buffer_sequence_begin(buffer_sequence),
/home/kaworu/boost_1_69_0/boost/asio/detail/buffer_sequence_adapter.hpp:        boost::asio::buffer_sequence_end(buffer_sequence));
/home/kaworu/boost_1_69_0/boost/asio/detail/buffer_sequence_adapter.hpp:        boost::asio::buffer_sequence_begin(buffer_sequence),
/home/kaworu/boost_1_69_0/boost/asio/detail/buffer_sequence_adapter.hpp:        boost::asio::buffer_sequence_end(buffer_sequence));
/home/kaworu/boost_1_69_0/boost/asio/detail/buffer_sequence_adapter.hpp:        boost::asio::buffer_sequence_begin(buffer_sequence),
/home/kaworu/boost_1_69_0/boost/asio/detail/buffer_sequence_adapter.hpp:        boost::asio::buffer_sequence_end(buffer_sequence));
/home/kaworu/boost_1_69_0/boost/asio/detail/buffer_sequence_adapter.hpp:class buffer_sequence_adapter<Buffer, boost::asio::mutable_buffer>
/home/kaworu/boost_1_69_0/boost/asio/detail/buffer_sequence_adapter.hpp:      const boost::asio::mutable_buffer& buffer_sequence)
/home/kaworu/boost_1_69_0/boost/asio/detail/buffer_sequence_adapter.hpp:  static bool all_empty(const boost::asio::mutable_buffer& buffer_sequence)
/home/kaworu/boost_1_69_0/boost/asio/detail/buffer_sequence_adapter.hpp:  static void validate(const boost::asio::mutable_buffer& buffer_sequence)
/home/kaworu/boost_1_69_0/boost/asio/detail/buffer_sequence_adapter.hpp:  static Buffer first(const boost::asio::mutable_buffer& buffer_sequence)
/home/kaworu/boost_1_69_0/boost/asio/detail/buffer_sequence_adapter.hpp:class buffer_sequence_adapter<Buffer, boost::asio::const_buffer>
/home/kaworu/boost_1_69_0/boost/asio/detail/buffer_sequence_adapter.hpp:      const boost::asio::const_buffer& buffer_sequence)
/home/kaworu/boost_1_69_0/boost/asio/detail/buffer_sequence_adapter.hpp:  static bool all_empty(const boost::asio::const_buffer& buffer_sequence)
/home/kaworu/boost_1_69_0/boost/asio/detail/buffer_sequence_adapter.hpp:  static void validate(const boost::asio::const_buffer& buffer_sequence)
/home/kaworu/boost_1_69_0/boost/asio/detail/buffer_sequence_adapter.hpp:  static Buffer first(const boost::asio::const_buffer& buffer_sequence)
/home/kaworu/boost_1_69_0/boost/asio/detail/buffer_sequence_adapter.hpp:class buffer_sequence_adapter<Buffer, boost::asio::mutable_buffers_1>
/home/kaworu/boost_1_69_0/boost/asio/detail/buffer_sequence_adapter.hpp:      const boost::asio::mutable_buffers_1& buffer_sequence)
/home/kaworu/boost_1_69_0/boost/asio/detail/buffer_sequence_adapter.hpp:  static bool all_empty(const boost::asio::mutable_buffers_1& buffer_sequence)
/home/kaworu/boost_1_69_0/boost/asio/detail/buffer_sequence_adapter.hpp:  static void validate(const boost::asio::mutable_buffers_1& buffer_sequence)
/home/kaworu/boost_1_69_0/boost/asio/detail/buffer_sequence_adapter.hpp:  static Buffer first(const boost::asio::mutable_buffers_1& buffer_sequence)
/home/kaworu/boost_1_69_0/boost/asio/detail/buffer_sequence_adapter.hpp:class buffer_sequence_adapter<Buffer, boost::asio::const_buffers_1>
/home/kaworu/boost_1_69_0/boost/asio/detail/buffer_sequence_adapter.hpp:      const boost::asio::const_buffers_1& buffer_sequence)
/home/kaworu/boost_1_69_0/boost/asio/detail/buffer_sequence_adapter.hpp:  static bool all_empty(const boost::asio::const_buffers_1& buffer_sequence)
/home/kaworu/boost_1_69_0/boost/asio/detail/buffer_sequence_adapter.hpp:  static void validate(const boost::asio::const_buffers_1& buffer_sequence)
/home/kaworu/boost_1_69_0/boost/asio/detail/buffer_sequence_adapter.hpp:  static Buffer first(const boost::asio::const_buffers_1& buffer_sequence)
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_accept_op.hpp:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_accept_op.hpp:    p.h = boost::asio::detail::addressof(handler.handler_);
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_accept_op.hpp:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_socket_accept_op.hpp:    p.h = boost::asio::detail::addressof(handler.handler_);
/home/kaworu/boost_1_69_0/boost/asio/detail/null_reactor.hpp:  null_reactor(boost::asio::execution_context& ctx)
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_null_buffers_op.hpp:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/home/kaworu/boost_1_69_0/boost/asio/detail/reactive_null_buffers_op.hpp:    p.h = boost::asio::detail::addressof(handler.handler_);
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_invoke_helpers.hpp:  using boost::asio::asio_handler_invoke;
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_invoke_helpers.hpp:  asio_handler_invoke(function, boost::asio::detail::addressof(context));
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_invoke_helpers.hpp:  using boost::asio::asio_handler_invoke;
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_invoke_helpers.hpp:  asio_handler_invoke(function, boost::asio::detail::addressof(context));
/home/kaworu/boost_1_69_0/boost/asio/detail/epoll_reactor.hpp:  BOOST_ASIO_DECL epoll_reactor(boost::asio::execution_context& ctx);
/home/kaworu/boost_1_69_0/boost/asio/detail/epoll_reactor.hpp:      boost::asio::execution_context::fork_event fork_ev);
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_resolve_op.hpp:  typedef boost::asio::ip::basic_resolver_query<Protocol> query_type;
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_resolve_op.hpp:  typedef boost::asio::ip::basic_resolver_results<Protocol> results_type;
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_resolve_op.hpp:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_resolve_op.hpp:    p.h = boost::asio::detail::addressof(handler.handler_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_timer_scheduler.hpp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_timer_scheduler.hpp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_timer_scheduler.hpp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/resolver_service_base.ipp:  work_io_context_runner(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/resolver_service_base.ipp:  boost::asio::io_context& io_context_;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/resolver_service_base.ipp:    boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/resolver_service_base.ipp:  : io_context_impl_(boost::asio::use_service<io_context_impl>(io_context)),
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/resolver_service_base.ipp:    work_io_context_(new boost::asio::io_context(-1)),
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/resolver_service_base.ipp:    work_io_context_impl_(boost::asio::use_service<
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/resolver_service_base.ipp:    work_(boost::asio::make_work_guard(*work_io_context_)),
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/resolver_service_base.ipp:    boost::asio::io_context::fork_event fork_ev)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/resolver_service_base.ipp:    if (fork_ev == boost::asio::io_context::fork_prepare)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/resolver_service_base.ipp:      work_thread_.reset(new boost::asio::detail::thread(
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/resolver_service_base.ipp:    op->ec_ = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/resolver_service_base.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/resolver_service_base.ipp:    work_thread_.reset(new boost::asio::detail::thread(
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_object_handle_service.ipp:    boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_object_handle_service.ipp:    io_context_(boost::asio::use_service<io_context_impl>(io_context)),
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_object_handle_service.ipp:      op->ec_ = boost::asio::error::operation_aborted;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_object_handle_service.ipp:    ec = boost::asio::error::already_open;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_object_handle_service.ipp:      op->ec_ = boost::asio::error::operation_aborted;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_object_handle_service.ipp:          boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_object_handle_service.ipp:      op->ec_ = boost::asio::error::operation_aborted;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_object_handle_service.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_object_handle_service.ipp:          boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_object_handle_service.ipp:    op->ec_ = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_object_handle_service.ipp:        boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_object_handle_service.ipp:            boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/reactive_socket_service_base.ipp:    boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/reactive_socket_service_base.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/reactive_socket_service_base.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/reactive_socket_service_base.ipp:    ec = boost::asio::error::already_open;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/reactive_socket_service_base.ipp:        boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/reactive_socket_service_base.ipp:    ec = boost::asio::error::already_open;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/reactive_socket_service_base.ipp:        boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/reactive_socket_service_base.ipp:    op->ec_ = boost::asio::error::already_open;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/reactive_socket_service_base.ipp:      if (op->ec_ == boost::asio::error::in_progress
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/reactive_socket_service_base.ipp:          || op->ec_ == boost::asio::error::would_block)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/signal_set_service.ipp:    boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/signal_set_service.ipp:    io_context_(boost::asio::use_service<io_context_impl>(io_context)),
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/signal_set_service.ipp:    reactor_(boost::asio::use_service<reactor>(io_context)),
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/signal_set_service.ipp:    boost::asio::io_context::fork_event fork_ev)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/signal_set_service.ipp:  case boost::asio::io_context::fork_prepare:
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/signal_set_service.ipp:  case boost::asio::io_context::fork_parent:
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/signal_set_service.ipp:  case boost::asio::io_context::fork_child:
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/signal_set_service.ipp:      boost::asio::detail::signal_blocker blocker;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/signal_set_service.ipp:    ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/signal_set_service.ipp:        ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/signal_set_service.ipp:            boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/signal_set_service.ipp:    ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/signal_set_service.ipp:        ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/signal_set_service.ipp:            boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/signal_set_service.ipp:        ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/signal_set_service.ipp:            boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/signal_set_service.ipp:      op->ec_ = boost::asio::error::operation_aborted;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/signal_set_service.ipp:      boost::asio::detail::throw_exception(ex);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/signal_set_service.ipp:        boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/signal_set_service.ipp:    boost::asio::detail::throw_error(ec, "signal_set_service pipe");
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/posix_tss_ptr.ipp:      boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/posix_tss_ptr.ipp:  boost::asio::detail::throw_error(ec, "tss");
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_serial_port_service.ipp:    boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_serial_port_service.ipp:    ec = boost::asio::error::already_open;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_serial_port_service.ipp:        boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_serial_port_service.ipp:        boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_serial_port_service.ipp:        boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_serial_port_service.ipp:        boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_serial_port_service.ipp:        boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_serial_port_service.ipp:        boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_serial_port_service.ipp:        boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:    boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:    boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:    boost::asio::detail::mutex::scoped_lock lock(other_service.mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:            boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:          boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:    ec = boost::asio::error::already_open;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:    ec = boost::asio::error::already_open;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:    iocp_service_.on_completion(op, boost::asio::error::bad_descriptor);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:    iocp_service_.on_completion(op, boost::asio::error::bad_descriptor);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:    iocp_service_.on_completion(op, boost::asio::error::bad_descriptor);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:    iocp_service_.on_completion(op, boost::asio::error::bad_descriptor);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:    iocp_service_.on_completion(op, boost::asio::error::bad_descriptor);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:    iocp_service_.on_completion(op, boost::asio::error::already_open);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:    op->ec_ = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:      if (op->ec_ && op->ec_ != boost::asio::error::invalid_argument)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:      if (op->ec_ == boost::asio::error::in_progress
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_socket_service_base.ipp:          || op->ec_ == boost::asio::error::would_block)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:      boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:      boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:        || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    else if (ec == boost::asio::error::connection_aborted)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::connection_aborted;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:        ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:        || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    else if (ec == boost::asio::error::connection_aborted)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:        && (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:          || ec == boost::asio::error::try_again))
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:  else if (ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::no_buffer_space;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:  if (ec != boost::asio::error::in_progress
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:      && ec != boost::asio::error::would_block)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:      boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::connection_refused;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::network_unreachable;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::host_unreachable;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::timed_out;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:          boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:  ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::not_socket;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::not_socket;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::connection_reset;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::connection_refused;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:      ec = boost::asio::error::eof;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:        || (ec != boost::asio::error::would_block
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:          && ec != boost::asio::error::try_again))
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:      ec = boost::asio::error::operation_aborted;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:      ec = boost::asio::error::connection_reset;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::connection_refused;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::eof;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:      ec = boost::asio::error::eof;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:        || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::connection_reset;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::connection_refused;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:        || (ec != boost::asio::error::would_block
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:          && ec != boost::asio::error::try_again))
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:      ec = boost::asio::error::operation_aborted;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:      ec = boost::asio::error::connection_reset;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::connection_refused;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:        || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:        || (ec != boost::asio::error::would_block
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:          && ec != boost::asio::error::try_again))
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:      ec = boost::asio::error::operation_aborted;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:      ec = boost::asio::error::connection_reset;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::connection_refused;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:        || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::connection_reset;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::connection_refused;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:        || (ec != boost::asio::error::would_block
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:          && ec != boost::asio::error::try_again))
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:      ec = boost::asio::error::operation_aborted;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:      ec = boost::asio::error::connection_reset;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::connection_refused;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:        || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::connection_reset;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::connection_refused;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:        || (ec != boost::asio::error::would_block
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:          && ec != boost::asio::error::try_again))
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:        || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:      ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:  ec = boost::asio::error::fault;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:      ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:  ec = boost::asio::error::fault;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:      ec = boost::asio::error::not_connected;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:      ? boost::asio::error::would_block : boost::system::error_code();
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:      ? boost::asio::error::would_block : boost::system::error_code();
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:      ? boost::asio::error::would_block : boost::system::error_code();
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::address_family_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::address_family_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:      ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:      ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:        ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:            ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:            ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:            ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:            ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:          ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::address_family_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::address_family_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:      ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    return boost::asio::error::host_not_found;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    return boost::asio::error::host_not_found_try_again;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    return boost::asio::error::no_recovery;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    return boost::asio::error::no_data;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    return boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::address_family_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::address_family_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::address_family_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:      if (ec == boost::asio::error::host_not_found)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:      if (ec == boost::asio::error::host_not_found_try_again)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:      if (ec == boost::asio::error::no_recovery)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:      if (ec == boost::asio::error::no_data)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:      return ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:      return ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    return ec = boost::asio::error::address_family_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:          return ec = boost::asio::error::host_not_found;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:        return ec = boost::asio::error::no_buffer_space;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:          return ec = boost::asio::error::no_buffer_space;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    return boost::asio::error::host_not_found_try_again;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    return boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    return boost::asio::error::no_recovery;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    return boost::asio::error::address_family_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    return boost::asio::error::no_memory;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    return boost::asio::error::host_not_found;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    return boost::asio::error::service_not_found;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    return boost::asio::error::socket_type_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:        WSAGetLastError(), boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:        errno, boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::operation_aborted;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_ops.ipp:    ec = boost::asio::error::operation_aborted;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/dev_poll_reactor.ipp:dev_poll_reactor::dev_poll_reactor(boost::asio::execution_context& ctx)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/dev_poll_reactor.ipp:  : boost::asio::detail::execution_context_service_base<dev_poll_reactor>(ctx),
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/dev_poll_reactor.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/dev_poll_reactor.ipp:    boost::asio::execution_context::fork_event fork_ev)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/dev_poll_reactor.ipp:  if (fork_ev == boost::asio::execution_context::fork_child)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/dev_poll_reactor.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/dev_poll_reactor.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/dev_poll_reactor.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/dev_poll_reactor.ipp:  cancel_ops_unlocked(descriptor, boost::asio::error::operation_aborted);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/dev_poll_reactor.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/dev_poll_reactor.ipp:  cancel_ops_unlocked(descriptor, boost::asio::error::operation_aborted);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/dev_poll_reactor.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/dev_poll_reactor.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/dev_poll_reactor.ipp:          errno, boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/dev_poll_reactor.ipp:              boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/dev_poll_reactor.ipp:        boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/dev_poll_reactor.ipp:    boost::asio::detail::throw_error(ec, "/dev/poll");
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/descriptor_ops.ipp:        && (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/descriptor_ops.ipp:          || ec == boost::asio::error::try_again))
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/descriptor_ops.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/descriptor_ops.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/descriptor_ops.ipp:    ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/descriptor_ops.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/descriptor_ops.ipp:      ec = boost::asio::error::eof;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/descriptor_ops.ipp:        || (ec != boost::asio::error::would_block
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/descriptor_ops.ipp:          && ec != boost::asio::error::try_again))
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/descriptor_ops.ipp:      ec = boost::asio::error::eof;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/descriptor_ops.ipp:    if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/descriptor_ops.ipp:    if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/descriptor_ops.ipp:        || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/descriptor_ops.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/descriptor_ops.ipp:        || (ec != boost::asio::error::would_block
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/descriptor_ops.ipp:          && ec != boost::asio::error::try_again))
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/descriptor_ops.ipp:    if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/descriptor_ops.ipp:    if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/descriptor_ops.ipp:        || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/descriptor_ops.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/descriptor_ops.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/descriptor_ops.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/descriptor_ops.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/descriptor_ops.ipp:      ? boost::asio::error::would_block : boost::system::error_code();
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/descriptor_ops.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/descriptor_ops.ipp:      ? boost::asio::error::would_block : boost::system::error_code();
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/descriptor_ops.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/descriptor_ops.ipp:      ? boost::asio::error::would_block : boost::system::error_code();
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/handler_tracking.ipp:        boost::asio::wait_traits<chrono::system_clock> > traits_helper;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/epoll_reactor.ipp:epoll_reactor::epoll_reactor(boost::asio::execution_context& ctx)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/epoll_reactor.ipp:    boost::asio::execution_context::fork_event fork_ev)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/epoll_reactor.ipp:  if (fork_ev == boost::asio::execution_context::fork_child)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/epoll_reactor.ipp:            boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/epoll_reactor.ipp:        boost::asio::detail::throw_error(ec, "epoll re-registration");
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/epoll_reactor.ipp:    op->ec_ = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/epoll_reactor.ipp:        op->ec_ = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/epoll_reactor.ipp:                boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/epoll_reactor.ipp:      op->ec_ = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/epoll_reactor.ipp:      op->ec_ = boost::asio::error::operation_aborted;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/epoll_reactor.ipp:        op->ec_ = boost::asio::error::operation_aborted;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/epoll_reactor.ipp:        boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/epoll_reactor.ipp:    boost::asio::detail::throw_error(ec, "epoll");
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_timer_scheduler.ipp:    boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_timer_scheduler.ipp:  : boost::asio::detail::service_base<winrt_timer_scheduler>(io_context),
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_timer_scheduler.ipp:  thread_ = new boost::asio::detail::thread(
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_timer_scheduler.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_timer_scheduler.ipp:void winrt_timer_scheduler::notify_fork(boost::asio::io_context::fork_event)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_timer_scheduler.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/strand_executor_service.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/strand_executor_service.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/strand_executor_service.ipp:  boost::asio::detail::mutex::scoped_lock lock(service_->mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/strand_service.ipp:strand_service::strand_service(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/strand_service.ipp:  : boost::asio::detail::service_base<strand_service>(io_context),
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/strand_service.ipp:    io_context_(boost::asio::use_service<io_context_impl>(io_context)),
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/strand_service.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/strand_service.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/posix_mutex.ipp:      boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/posix_mutex.ipp:  boost::asio::detail::throw_error(ec, "mutex");
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_select_interrupter.ipp:    boost::asio::detail::throw_error(ec, "socket_select_interrupter");
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_select_interrupter.ipp:    boost::asio::detail::throw_error(ec, "socket_select_interrupter");
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_select_interrupter.ipp:    boost::asio::detail::throw_error(ec, "socket_select_interrupter");
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_select_interrupter.ipp:    boost::asio::detail::throw_error(ec, "socket_select_interrupter");
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_select_interrupter.ipp:    boost::asio::detail::throw_error(ec, "socket_select_interrupter");
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_select_interrupter.ipp:    boost::asio::detail::throw_error(ec, "socket_select_interrupter");
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_select_interrupter.ipp:    boost::asio::detail::throw_error(ec, "socket_select_interrupter");
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_select_interrupter.ipp:    boost::asio::detail::throw_error(ec, "socket_select_interrupter");
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/socket_select_interrupter.ipp:    boost::asio::detail::throw_error(ec, "socket_select_interrupter");
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/dev_poll_reactor.hpp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/dev_poll_reactor.hpp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/dev_poll_reactor.hpp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/scheduler.ipp:      boost::asio::detail::increment(
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/scheduler.ipp:      boost::asio::detail::increment(
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/scheduler.ipp:    boost::asio::execution_context& ctx, int concurrency_hint)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/scheduler.ipp:  : boost::asio::detail::execution_context_service_base<scheduler>(ctx),
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/posix_thread.ipp:        boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/posix_thread.ipp:    boost::asio::detail::throw_error(ec, "thread");
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/kqueue_reactor.ipp:kqueue_reactor::kqueue_reactor(boost::asio::execution_context& ctx)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/kqueue_reactor.ipp:        boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/kqueue_reactor.ipp:    boost::asio::detail::throw_error(error);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/kqueue_reactor.ipp:    boost::asio::execution_context::fork_event fork_ev)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/kqueue_reactor.ipp:  if (fork_ev == boost::asio::execution_context::fork_child)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/kqueue_reactor.ipp:          boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/kqueue_reactor.ipp:      boost::asio::detail::throw_error(ec, "kqueue interrupter registration");
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/kqueue_reactor.ipp:              boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/kqueue_reactor.ipp:          boost::asio::detail::throw_error(ec, "kqueue re-registration");
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/kqueue_reactor.ipp:    op->ec_ = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/kqueue_reactor.ipp:              boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/kqueue_reactor.ipp:      op->ec_ = boost::asio::error::operation_aborted;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/kqueue_reactor.ipp:        op->ec_ = boost::asio::error::operation_aborted;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/kqueue_reactor.ipp:                    boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/kqueue_reactor.ipp:        boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/kqueue_reactor.ipp:    boost::asio::detail::throw_error(ec, "kqueue");
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/service_registry.ipp:    boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/service_registry.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/service_registry.ipp:    boost::asio::detail::throw_exception(invalid_service_owner());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/service_registry.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/service_registry.ipp:      boost::asio::detail::throw_exception(service_already_exists());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/service_registry.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winsock_init.ipp:        boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winsock_init.ipp:    boost::asio::detail::throw_error(ec, "winsock");
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_thread.ipp:        boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_thread.ipp:    boost::asio::detail::throw_error(ec, "thread.entry_event");
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_thread.ipp:        boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_thread.ipp:    boost::asio::detail::throw_error(ec, "thread.exit_event");
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_thread.ipp:        boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_thread.ipp:    boost::asio::detail::throw_error(ec, "thread");
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/eventfd_select_interrupter.ipp:          boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/eventfd_select_interrupter.ipp:      boost::asio::detail::throw_error(ec, "eventfd_select_interrupter");
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/select_reactor.hpp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/select_reactor.hpp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/select_reactor.hpp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_event.ipp:        boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_event.ipp:    boost::asio::detail::throw_error(ec, "event");
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_event.ipp:        boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_event.ipp:    boost::asio::detail::throw_error(ec, "event");
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/buffer_sequence_adapter.ipp:  explicit winrt_buffer_impl(const boost::asio::const_buffer& b)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/buffer_sequence_adapter.ipp:  explicit winrt_buffer_impl(const boost::asio::mutable_buffer& b)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/buffer_sequence_adapter.ipp:    const boost::asio::mutable_buffer& buffer)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/buffer_sequence_adapter.ipp:    const boost::asio::const_buffer& buffer)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/throw_error.ipp:  boost::asio::detail::throw_exception(e);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/throw_error.ipp:  boost::asio::detail::throw_exception(e);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/strand_service.hpp:  typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/strand_service.hpp:  typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:          boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:    boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:    iocp_service_(boost::asio::use_service<win_iocp_io_context>(io_context)),
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:    boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:    boost::asio::detail::mutex::scoped_lock lock(other_service.mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:    ec = boost::asio::error::already_open;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:          boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:            boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:          boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:    const boost::asio::const_buffer& buffer, boost::system::error_code& ec)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:          boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:        boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:    const boost::asio::const_buffer& buffer, operation* op)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:    iocp_service_.on_completion(op, boost::asio::error::bad_descriptor);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:    const boost::asio::mutable_buffer& buffer, boost::system::error_code& ec)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:        ec = boost::asio::error::eof;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:            boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:      ec = boost::asio::error::eof;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:          boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:    const boost::asio::mutable_buffer& buffer, operation* op)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_handle_service.ipp:    iocp_service_.on_completion(op, boost::asio::error::bad_descriptor);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_io_context.hpp:  boost::asio::detail::mutex::scoped_lock lock(dispatch_mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:    boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:    boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:    boost::asio::detail::mutex::scoped_lock lock(other_service.mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:        ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:        ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:      ec = boost::asio::error::address_family_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:        ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:        ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:      ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:        ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:        ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:      ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:    ec = boost::asio::error::address_family_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:    op->ec_ = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:    op->ec_ = boost::asio::error::address_family_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:    const boost::asio::const_buffer& data,
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:    buffer_sequence_adapter<boost::asio::const_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:      boost::asio::const_buffer> bufs(boost::asio::buffer(data));
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:      const boost::asio::const_buffer& data, socket_base::message_flags flags,
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:    op->ec_ = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:    op->ec_ = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:    buffer_sequence_adapter<boost::asio::const_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:        boost::asio::const_buffer> bufs(boost::asio::buffer(data));
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:    const boost::asio::mutable_buffer& data,
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:    ec = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:    buffer_sequence_adapter<boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:        boost::asio::mutable_buffer> bufs(boost::asio::buffer(data));
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:      ec = boost::asio::error::eof;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:      const boost::asio::mutable_buffer& data, socket_base::message_flags flags,
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:    op->ec_ = boost::asio::error::operation_not_supported;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:    op->ec_ = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:    buffer_sequence_adapter<boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/winrt_ssocket_service_base.ipp:        boost::asio::mutable_buffer> bufs(boost::asio::buffer(data));
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_mutex.ipp:      boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_mutex.ipp:  boost::asio::detail::throw_error(ec, "mutex");
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_io_context.ipp:    boost::asio::execution_context& ctx, int concurrency_hint)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_io_context.ipp:        boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_io_context.ipp:    boost::asio::detail::throw_error(ec, "iocp");
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_io_context.ipp:        boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_io_context.ipp:            boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_io_context.ipp:        boost::asio::detail::throw_error(ec, "pqcs");
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_io_context.ipp:      &boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_io_context.ipp:          boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_io_context.ipp:            boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_io_context.ipp:                boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_io_context.ipp:          boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_iocp_io_context.ipp:      boost::asio::detail::throw_error(ec, "timer");
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/pipe_select_interrupter.ipp:        boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/pipe_select_interrupter.ipp:    boost::asio::detail::throw_error(ec, "pipe_select_interrupter");
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_tss_ptr.ipp:        boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_tss_ptr.ipp:    boost::asio::detail::throw_error(ec, "tss");
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/posix_event.ipp:      boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/posix_event.ipp:  boost::asio::detail::throw_error(ec, "event");
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_static_mutex.ipp:      boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/win_static_mutex.ipp:  boost::asio::detail::throw_error(ec, "static_mutex");
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/select_reactor.ipp:select_reactor::select_reactor(boost::asio::execution_context& ctx)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/select_reactor.ipp:  boost::asio::detail::signal_blocker sb;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/select_reactor.ipp:  thread_ = new boost::asio::detail::thread(thread_function(this));
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/select_reactor.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/select_reactor.ipp:    boost::asio::execution_context::fork_event fork_ev)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/select_reactor.ipp:  if (fork_ev == boost::asio::execution_context::fork_child)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/select_reactor.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/select_reactor.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/select_reactor.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/select_reactor.ipp:  cancel_ops_unlocked(descriptor, boost::asio::error::operation_aborted);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/select_reactor.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/select_reactor.ipp:  cancel_ops_unlocked(descriptor, boost::asio::error::operation_aborted);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/select_reactor.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/select_reactor.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/select_reactor.ipp:  boost::asio::detail::mutex::scoped_lock lock(mutex_);
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/reactive_descriptor_service.ipp:    boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/reactive_descriptor_service.ipp:    reactor_(boost::asio::use_service<reactor>(io_context))
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/reactive_descriptor_service.ipp:    ec = boost::asio::error::already_open;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/reactive_descriptor_service.ipp:        boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/reactive_descriptor_service.ipp:    ec = boost::asio::error::bad_descriptor;
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/reactive_serial_port_service.ipp:    boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/detail/impl/reactive_serial_port_service.ipp:    ec = boost::asio::error::already_open;
/home/kaworu/boost_1_69_0/boost/asio/detail/buffered_stream_storage.hpp:    return boost::asio::buffer(buffer_) + begin_offset_;
/home/kaworu/boost_1_69_0/boost/asio/detail/buffered_stream_storage.hpp:    return boost::asio::buffer(buffer_) + begin_offset_;
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_alloc_helpers.hpp:  using boost::asio::asio_handler_allocate;
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_alloc_helpers.hpp:  return asio_handler_allocate(s, boost::asio::detail::addressof(h));
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_alloc_helpers.hpp:  using boost::asio::asio_handler_deallocate;
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_alloc_helpers.hpp:  asio_handler_deallocate(p, s, boost::asio::detail::addressof(h));
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_alloc_helpers.hpp:      typedef typename ::boost::asio::associated_allocator< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_alloc_helpers.hpp:      typedef typename ::boost::asio::detail::get_hook_allocator< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_alloc_helpers.hpp:            ::boost::asio::detail::get_hook_allocator< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_alloc_helpers.hpp:                handler, ::boost::asio::get_associated_allocator(handler))); \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_alloc_helpers.hpp:        typedef typename ::boost::asio::associated_allocator< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_alloc_helpers.hpp:        typedef typename ::boost::asio::detail::get_hook_allocator< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_alloc_helpers.hpp:              ::boost::asio::detail::get_hook_allocator< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_alloc_helpers.hpp:                  *h, ::boost::asio::get_associated_allocator(*h))); \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_alloc_helpers.hpp:      typedef typename ::boost::asio::detail::get_recycling_allocator< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_alloc_helpers.hpp:            ::boost::asio::detail::get_recycling_allocator<Alloc>::get(a)); \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_alloc_helpers.hpp:        typedef typename ::boost::asio::detail::get_recycling_allocator< \
/home/kaworu/boost_1_69_0/boost/asio/detail/handler_alloc_helpers.hpp:              ::boost::asio::detail::get_recycling_allocator<Alloc>::get(*a)); \
/home/kaworu/boost_1_69_0/boost/asio/detail/socket_option.hpp:        boost::asio::detail::throw_exception(ex);
/home/kaworu/boost_1_69_0/boost/asio/detail/socket_option.hpp:      boost::asio::detail::throw_exception(ex);
/home/kaworu/boost_1_69_0/boost/asio/detail/socket_option.hpp:      boost::asio::detail::throw_exception(ex);
/home/kaworu/boost_1_69_0/boost/asio/detail/resolver_service.hpp:  typedef boost::asio::ip::basic_resolver_query<Protocol> query_type;
/home/kaworu/boost_1_69_0/boost/asio/detail/resolver_service.hpp:  typedef boost::asio::ip::basic_resolver_results<Protocol> results_type;
/home/kaworu/boost_1_69_0/boost/asio/detail/resolver_service.hpp:  resolver_service(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/detail/resolver_service.hpp:  void notify_fork(boost::asio::io_context::fork_event fork_ev)
/home/kaworu/boost_1_69_0/boost/asio/detail/resolver_service.hpp:    boost::asio::detail::addrinfo_type* address_info = 0;
/home/kaworu/boost_1_69_0/boost/asio/detail/resolver_service.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/resolver_service.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/win_object_handle_service.hpp:      boost::asio::io_context& io_context);
/home/kaworu/boost_1_69_0/boost/asio/detail/win_object_handle_service.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/deadline_timer_service.hpp:    : private boost::asio::detail::noncopyable
/home/kaworu/boost_1_69_0/boost/asio/detail/deadline_timer_service.hpp:  deadline_timer_service(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/detail/deadline_timer_service.hpp:      scheduler_(boost::asio::use_service<timer_scheduler>(io_context))
/home/kaworu/boost_1_69_0/boost/asio/detail/deadline_timer_service.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/win_static_mutex.hpp:  typedef boost::asio::detail::scoped_lock<win_static_mutex> scoped_lock;
/home/kaworu/boost_1_69_0/boost/asio/detail/posix_static_mutex.hpp:  typedef boost::asio::detail::scoped_lock<posix_static_mutex> scoped_lock;
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_null_buffers_op.hpp:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_null_buffers_op.hpp:        ec = boost::asio::error::operation_aborted;
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_null_buffers_op.hpp:        ec = boost::asio::error::connection_reset;
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_null_buffers_op.hpp:      ec = boost::asio::error::connection_refused;
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_null_buffers_op.hpp:    p.h = boost::asio::detail::addressof(handler.handler_);
/home/kaworu/boost_1_69_0/boost/asio/detail/null_mutex.hpp:  typedef boost::asio::detail::scoped_lock<null_mutex> scoped_lock;
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_overlapped_op.hpp:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_overlapped_op.hpp:    p.h = boost::asio::detail::addressof(handler.handler_);
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_async_manager.hpp:  : public boost::asio::detail::service_base<winrt_async_manager>
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_async_manager.hpp:  winrt_async_manager(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_async_manager.hpp:    : boost::asio::detail::service_base<winrt_async_manager>(io_context),
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_async_manager.hpp:          promise->set_value(boost::asio::error::operation_aborted);
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_async_manager.hpp:          promise->set_value(boost::asio::error::operation_aborted);
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_async_manager.hpp:            promise->set_value(boost::asio::error::operation_aborted);
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_async_manager.hpp:          handler->ec_ = boost::asio::error::operation_aborted;
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_async_manager.hpp:          handler->ec_ = boost::asio::error::operation_aborted;
/home/kaworu/boost_1_69_0/boost/asio/detail/winrt_async_manager.hpp:            handler->ec_ = boost::asio::error::operation_aborted;
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_service_base.hpp:      boost::asio::io_context& io_context);
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_service_base.hpp:      ec = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_service_base.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_service_base.hpp:        p.p->ec_ = boost::asio::error::invalid_argument;
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_service_base.hpp:    buffer_sequence_adapter<boost::asio::const_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_service_base.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_service_base.hpp:    buffer_sequence_adapter<boost::asio::const_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_service_base.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_service_base.hpp:    buffer_sequence_adapter<boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_service_base.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_service_base.hpp:    buffer_sequence_adapter<boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_service_base.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_service_base.hpp:    buffer_sequence_adapter<boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_service_base.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_service_base.hpp:    buffer_sequence_adapter<boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_service_base.hpp:    typename op::ptr p = { boost::asio::detail::addressof(handler),
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_service_base.hpp:  boost::asio::io_context& io_context_;
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_service_base.hpp:  boost::asio::detail::mutex mutex_;
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_send_op.hpp:    ptr p = { boost::asio::detail::addressof(o->handler_), o, o };
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_send_op.hpp:      buffer_sequence_adapter<boost::asio::const_buffer,
/home/kaworu/boost_1_69_0/boost/asio/detail/win_iocp_socket_send_op.hpp:    p.h = boost::asio::detail::addressof(handler.handler_);
/home/kaworu/boost_1_69_0/boost/asio/io_context_strand.hpp:  explicit strand(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/io_context_strand.hpp:    : service_(boost::asio::use_service<
/home/kaworu/boost_1_69_0/boost/asio/io_context_strand.hpp:        boost::asio::detail::strand_service>(io_context))
/home/kaworu/boost_1_69_0/boost/asio/io_context_strand.hpp:  boost::asio::io_context& get_io_context()
/home/kaworu/boost_1_69_0/boost/asio/io_context_strand.hpp:  boost::asio::io_context& get_io_service()
/home/kaworu/boost_1_69_0/boost/asio/io_context_strand.hpp:  boost::asio::io_context& context() const BOOST_ASIO_NOEXCEPT
/home/kaworu/boost_1_69_0/boost/asio/io_context_strand.hpp:  /// (Deprecated: Use boost::asio::dispatch().) Request the strand to invoke
/home/kaworu/boost_1_69_0/boost/asio/io_context_strand.hpp:  /// (Deprecated: Use boost::asio::post().) Request the strand to invoke the
/home/kaworu/boost_1_69_0/boost/asio/io_context_strand.hpp:  /// (Deprecated: Use boost::asio::bind_executor().) Create a new handler that
/home/kaworu/boost_1_69_0/boost/asio/io_context_strand.hpp:  boost::asio::detail::strand_service& service_;
/home/kaworu/boost_1_69_0/boost/asio/io_context_strand.hpp:  mutable boost::asio::detail::strand_service::implementation_type impl_;
/home/kaworu/boost_1_69_0/boost/asio/write_at.hpp: * @defgroup write_at boost::asio::write_at
/home/kaworu/boost_1_69_0/boost/asio/write_at.hpp: * @code boost::asio::write_at(d, 42, boost::asio::buffer(data, size)); @endcode
/home/kaworu/boost_1_69_0/boost/asio/write_at.hpp: * @code boost::asio::write_at(
/home/kaworu/boost_1_69_0/boost/asio/write_at.hpp: *     boost::asio::transfer_all()); @endcode
/home/kaworu/boost_1_69_0/boost/asio/write_at.hpp: * @code boost::asio::write_at(d, 42,
/home/kaworu/boost_1_69_0/boost/asio/write_at.hpp: *     boost::asio::buffer(data, size), ec); @endcode
/home/kaworu/boost_1_69_0/boost/asio/write_at.hpp: * @code boost::asio::write_at(
/home/kaworu/boost_1_69_0/boost/asio/write_at.hpp: *     boost::asio::transfer_all(), ec); @endcode
/home/kaworu/boost_1_69_0/boost/asio/write_at.hpp: * @code boost::asio::write_at(d, 42, boost::asio::buffer(data, size),
/home/kaworu/boost_1_69_0/boost/asio/write_at.hpp: *     boost::asio::transfer_at_least(32)); @endcode
/home/kaworu/boost_1_69_0/boost/asio/write_at.hpp: * @code boost::asio::write_at(
/home/kaworu/boost_1_69_0/boost/asio/write_at.hpp: *     boost::asio::transfer_all()); @endcode
/home/kaworu/boost_1_69_0/boost/asio/write_at.hpp: * @code boost::asio::write_at(
/home/kaworu/boost_1_69_0/boost/asio/write_at.hpp: *     boost::asio::transfer_all(), ec); @endcode
/home/kaworu/boost_1_69_0/boost/asio/write_at.hpp: * @defgroup async_write_at boost::asio::async_write_at
/home/kaworu/boost_1_69_0/boost/asio/write_at.hpp: * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/write_at.hpp: * boost::asio::async_write_at(d, 42, boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/boost/asio/write_at.hpp: * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/write_at.hpp: * @code boost::asio::async_write_at(d, 42,
/home/kaworu/boost_1_69_0/boost/asio/write_at.hpp: *     boost::asio::buffer(data, size),
/home/kaworu/boost_1_69_0/boost/asio/write_at.hpp: *     boost::asio::transfer_at_least(32),
/home/kaworu/boost_1_69_0/boost/asio/write_at.hpp: * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/write_at.hpp: * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp: * boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp: * boost::asio::ip::tcp::endpoint endpoint(boost::asio::ip::tcp::v4(), port);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp: * acceptor.set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:  explicit basic_socket_acceptor(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:  basic_socket_acceptor(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:    boost::asio::detail::throw_error(ec, "open");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:  basic_socket_acceptor(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:    boost::asio::detail::throw_error(ec, "open");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:      boost::asio::detail::throw_error(ec, "set_option");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:    boost::asio::detail::throw_error(ec, "bind");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:    boost::asio::detail::throw_error(ec, "listen");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:  basic_socket_acceptor(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:    boost::asio::detail::throw_error(ec, "assign");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:  boost::asio::io_context& get_io_context()
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:  boost::asio::io_context& get_io_service()
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * acceptor.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:    boost::asio::detail::throw_error(ec, "open");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * acceptor.open(boost::asio::ip::tcp::v4(), ec);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:    boost::asio::detail::throw_error(ec, "assign");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::endpoint endpoint(boost::asio::ip::tcp::v4(), 12345);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:    boost::asio::detail::throw_error(ec, "bind");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::endpoint endpoint(boost::asio::ip::tcp::v4(), 12345);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:    boost::asio::detail::throw_error(ec, "listen");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * acceptor.listen(boost::asio::socket_base::max_listen_connections, ec);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:    boost::asio::detail::throw_error(ec, "close");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * passed the boost::asio::error::operation_aborted error. Ownership of the
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * 8.1, and will fail with boost::asio::error::operation_not_supported on
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:    boost::asio::detail::throw_error(ec, "release");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * passed the boost::asio::error::operation_aborted error. Ownership of the
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * 8.1, and will fail with boost::asio::error::operation_not_supported on
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * will be passed the boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:    boost::asio::detail::throw_error(ec, "cancel");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * will be passed the boost::asio::error::operation_aborted error.
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::socket_base::reuse_address
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::socket_base::enable_connection_aborted
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor::reuse_address option(true);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:    boost::asio::detail::throw_error(ec, "set_option");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::socket_base::reuse_address
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::socket_base::enable_connection_aborted
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor::reuse_address option(true);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::socket_base::reuse_address
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor::reuse_address option;
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:    boost::asio::detail::throw_error(ec, "get_option");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::socket_base::reuse_address
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor::reuse_address option;
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::socket_base::non_blocking_io
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor::non_blocking_io command(true);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:    boost::asio::detail::throw_error(ec, "io_control");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::socket_base::non_blocking_io
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor::non_blocking_io command(true);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::error::would_block if they are unable to perform the requested
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::error::would_block.
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * with boost::asio::error::would_block if they are unable to perform the
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::error::would_block.
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:    boost::asio::detail::throw_error(ec, "non_blocking");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * with boost::asio::error::would_block if they are unable to perform the
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::error::would_block.
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * direct system calls may fail with boost::asio::error::would_block (or the
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * mode and direct system calls may fail with boost::asio::error::would_block
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * function fails with boost::asio::error::invalid_argument, as the
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:    boost::asio::detail::throw_error(ec, "native_non_blocking");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * mode and direct system calls may fail with boost::asio::error::would_block
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * function fails with boost::asio::error::invalid_argument, as the
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::endpoint endpoint = acceptor.local_endpoint();
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:    boost::asio::detail::throw_error(ec, "local_endpoint");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::endpoint endpoint = acceptor.local_endpoint(ec);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * acceptor.wait(boost::asio::ip::tcp::acceptor::wait_read);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:    boost::asio::detail::throw_error(ec, "wait");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * acceptor.wait(boost::asio::ip::tcp::acceptor::wait_read, ec);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   *     boost::asio::ip::tcp::acceptor::wait_read,
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:    boost::asio::detail::throw_error(ec, "accept");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::endpoint endpoint;
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:    boost::asio::detail::throw_error(ec, "accept");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::endpoint endpoint;
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::socket socket(acceptor.accept());
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:    boost::asio::detail::throw_error(ec, "accept");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::socket socket(acceptor.accept(ec));
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   *     boost::asio::ip::tcp::socket peer)
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:        this->get_implementation(), static_cast<boost::asio::io_context*>(0),
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:        this->get_implementation(), static_cast<boost::asio::io_context*>(0),
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::socket socket(acceptor.accept());
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:  typename Protocol::socket accept(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:    boost::asio::detail::throw_error(ec, "accept");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::socket socket(acceptor.accept(io_context2, ec));
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:      boost::asio::io_context& io_context, boost::system::error_code& ec)
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   *     boost::asio::ip::tcp::socket peer)
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:  async_accept(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::endpoint endpoint;
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::socket socket(acceptor.accept(endpoint));
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:          static_cast<boost::asio::io_context*>(0), &peer_endpoint, ec));
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:    boost::asio::detail::throw_error(ec, "accept");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::endpoint endpoint;
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::socket socket(acceptor.accept(endpoint, ec));
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:        static_cast<boost::asio::io_context*>(0), &peer_endpoint, ec);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   *     boost::asio::ip::tcp::socket peer)
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::endpoint endpoint;
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:        static_cast<boost::asio::io_context*>(0), &peer_endpoint,
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:        static_cast<boost::asio::io_context*>(0), &peer_endpoint,
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::endpoint endpoint;
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::socket socket(
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:      boost::asio::io_context& io_context, endpoint_type& peer_endpoint)
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:    boost::asio::detail::throw_error(ec, "accept");
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::endpoint endpoint;
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::socket socket(
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:  typename Protocol::socket accept(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   *     boost::asio::ip::tcp::socket peer)
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:   * boost::asio::ip::tcp::endpoint endpoint;
/home/kaworu/boost_1_69_0/boost/asio/basic_socket_acceptor.hpp:  async_accept(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/boost/asio/error.hpp:  = boost::asio::error::get_system_category();
/home/kaworu/boost_1_69_0/boost/asio/error.hpp:  = boost::asio::error::get_netdb_category();
/home/kaworu/boost_1_69_0/boost/asio/error.hpp:  = boost::asio::error::get_addrinfo_category();
/home/kaworu/boost_1_69_0/boost/asio/error.hpp:  = boost::asio::error::get_misc_category();
/home/kaworu/boost_1_69_0/boost/asio/error.hpp:template<> struct is_error_code_enum<boost::asio::error::basic_errors>
/home/kaworu/boost_1_69_0/boost/asio/error.hpp:template<> struct is_error_code_enum<boost::asio::error::netdb_errors>
/home/kaworu/boost_1_69_0/boost/asio/error.hpp:template<> struct is_error_code_enum<boost::asio::error::addrinfo_errors>
/home/kaworu/boost_1_69_0/boost/asio/error.hpp:template<> struct is_error_code_enum<boost::asio::error::misc_errors>
/home/kaworu/boost_1_69_0/boost/asio/buffered_stream.hpp:  boost::asio::io_context& get_io_context()
/home/kaworu/boost_1_69_0/boost/asio/buffered_stream.hpp:  boost::asio::io_context& get_io_service()
/home/kaworu/boost_1_69_0/boost/asio/thread_pool.hpp: * To submit functions to the thread_pool, use the @ref boost::asio::dispatch,
/home/kaworu/boost_1_69_0/boost/asio/thread_pool.hpp: * @ref boost::asio::post or @ref boost::asio::defer free functions.
/home/kaworu/boost_1_69_0/boost/asio/thread_pool.hpp: * boost::asio::thread_pool pool(4);
/home/kaworu/boost_1_69_0/boost/asio/thread_pool.hpp: * boost::asio::post(pool, my_task);
/home/kaworu/boost_1_69_0/boost/asio/thread_pool.hpp: * boost::asio::post(pool,
/home/kaworu/boost_1_69_0/boost/process/spawn.hpp:It will fail to compile if a reference to `boost::asio::io_context` is passed.
/home/kaworu/boost_1_69_0/boost/process/system.hpp:    return ::boost::process::detail::system_impl<boost::asio::io_context>(
/home/kaworu/boost_1_69_0/boost/process/io.hpp:boost::asio::io_context ios;
/home/kaworu/boost_1_69_0/boost/process/io.hpp:template<typename T> using is_streambuf    = typename std::is_same<T, boost::asio::streambuf>::type;
/home/kaworu/boost_1_69_0/boost/process/io.hpp:            std::is_same<   boost::asio::const_buffer, T>::value |
/home/kaworu/boost_1_69_0/boost/process/io.hpp:            std::is_base_of<boost::asio::const_buffer, T>::value
/home/kaworu/boost_1_69_0/boost/process/io.hpp:            std::is_same<   boost::asio::mutable_buffer, T>::value |
/home/kaworu/boost_1_69_0/boost/process/io.hpp:            std::is_base_of<boost::asio::mutable_buffer, T>::value
/home/kaworu/boost_1_69_0/boost/process/io.hpp: - `boost::asio::const_buffer`   \xmlonly <footnote><para> Constructed with <code>boost::asio::buffer</code></para></footnote> \endxmlonly
/home/kaworu/boost_1_69_0/boost/process/io.hpp: - `boost::asio::mutable_buffer` \xmlonly <footnote><para> Constructed with <code>boost::asio::buffer</code></para></footnote> \endxmlonly
/home/kaworu/boost_1_69_0/boost/process/io.hpp: - `boost::asio::streambuf`
/home/kaworu/boost_1_69_0/boost/process/io.hpp:boost::asio::io_context ios;
/home/kaworu/boost_1_69_0/boost/process/io.hpp:\note `boost::asio::buffer` is also available in the `boost::process` namespace.
/home/kaworu/boost_1_69_0/boost/process/io.hpp:\warning This feature requires `boost/process/async.hpp` to be included and a reference to `boost::asio::io_context` to be passed to the launching function.
/home/kaworu/boost_1_69_0/boost/process/io.hpp: - `boost::asio::mutable_buffer` \xmlonly <footnote><para> Constructed with <code>boost::asio::buffer</code></para></footnote> \endxmlonly
/home/kaworu/boost_1_69_0/boost/process/io.hpp: - `boost::asio::streambuf`
/home/kaworu/boost_1_69_0/boost/process/io.hpp:\note `boost::asio::buffer` is also available in the `boost::process` namespace.
/home/kaworu/boost_1_69_0/boost/process/io.hpp:\warning This feature requires `boost/process/async.hpp` to be included and a reference to `boost::asio::io_context` to be passed to the launching function.
/home/kaworu/boost_1_69_0/boost/process/async_system.hpp:    boost::asio::io_context & ios;
/home/kaworu/boost_1_69_0/boost/process/async_system.hpp:    boost::asio::async_completion<
/home/kaworu/boost_1_69_0/boost/process/async_system.hpp:            boost::asio::io_context & ios,
/home/kaworu/boost_1_69_0/boost/process/async_system.hpp:    async_system(boost::asio::io_context & ios, ExitHandler && exit_handler, Args && ...args);
/home/kaworu/boost_1_69_0/boost/process/async_system.hpp:    async_system(boost::asio::io_context & ios, ExitHandler && exit_handler, Args && ...args)
/home/kaworu/boost_1_69_0/boost/process/async_pipe.hpp: *  It is based on the corresponding I/O Object, that is either boost::asio::windows::stream_handle or
/home/kaworu/boost_1_69_0/boost/process/async_pipe.hpp: *  boost::asio::posix::stream_descriptor.
/home/kaworu/boost_1_69_0/boost/process/async_pipe.hpp: *  It can be used directly with boost::asio::async_read or async_write.
/home/kaworu/boost_1_69_0/boost/process/async_pipe.hpp:    inline async_pipe(boost::asio::io_context & ios);
/home/kaworu/boost_1_69_0/boost/process/async_pipe.hpp:    inline async_pipe(boost::asio::io_context & ios_source,
/home/kaworu/boost_1_69_0/boost/process/async_pipe.hpp:                      boost::asio::io_context & ios_sink);
/home/kaworu/boost_1_69_0/boost/process/async_pipe.hpp:    inline async_pipe(boost::asio::io_context & ios, const std::string & name);
/home/kaworu/boost_1_69_0/boost/process/async_pipe.hpp:    inline async_pipe(boost::asio::io_context & ios_source,
/home/kaworu/boost_1_69_0/boost/process/async_pipe.hpp:                      boost::asio::io_context & ios_sink, const std::string & name);
/home/kaworu/boost_1_69_0/boost/process/async_pipe.hpp:    explicit async_pipe(boost::asio::io_context & ios, const basic_pipe<CharT, Traits> & p);
/home/kaworu/boost_1_69_0/boost/process/async_pipe.hpp:    explicit async_pipe(boost::asio::io_context & ios_source,
/home/kaworu/boost_1_69_0/boost/process/async_pipe.hpp:                        boost::asio::io_context & ios_sink,
/home/kaworu/boost_1_69_0/boost/process/async_pipe.hpp:    native_handle native_source() const {return const_cast<boost::asio::windows::stream_handle&>(_source).native();}
/home/kaworu/boost_1_69_0/boost/process/async_pipe.hpp:    native_handle native_sink  () const {return const_cast<boost::asio::windows::stream_handle&>(_sink  ).native();}
/home/kaworu/boost_1_69_0/boost/process/async_pipe.hpp:    handle_type source(::boost::asio::io_context& ios) &&;
/home/kaworu/boost_1_69_0/boost/process/async_pipe.hpp:    handle_type sink  (::boost::asio::io_context& ios) &&;
/home/kaworu/boost_1_69_0/boost/process/async_pipe.hpp:    handle_type source(::boost::asio::io_context& ios) const &;
/home/kaworu/boost_1_69_0/boost/process/async_pipe.hpp:    handle_type sink  (::boost::asio::io_context& ios) const &;
/home/kaworu/boost_1_69_0/boost/process/async.hpp:It also implements the necessary traits for passing an boost::asio::io_context,
/home/kaworu/boost_1_69_0/boost/process/async.hpp:It also pulls the [boost::asio::buffer](http://www.boost.org/doc/libs/release/doc/html/boost_asio/reference/buffer.html)
/home/kaworu/boost_1_69_0/boost/process/async.hpp:    boost::asio::io_context * ios;
/home/kaworu/boost_1_69_0/boost/process/async.hpp:    void operator()(boost::asio::io_context & ios_) {this->ios = &ios_;};
/home/kaworu/boost_1_69_0/boost/process/async.hpp:using ::boost::asio::buffer;
/home/kaworu/boost_1_69_0/boost/process/async.hpp:\warning `on_exit` uses `boost::asio::signal_set` to listen for `SIGCHLD` on posix, and so has the
/home/kaworu/boost_1_69_0/boost/process/async.hpp:`boost::asio::signal_set`).
/home/kaworu/boost_1_69_0/boost/process/detail/traits/async.hpp:template<> struct initializer_tag<::boost::asio::io_context> { typedef async_tag type;};
/home/kaworu/boost_1_69_0/boost/process/detail/windows/io_context_ref.hpp:    io_context_ref(boost::asio::io_context & ios)
/home/kaworu/boost_1_69_0/boost/process/detail/windows/io_context_ref.hpp:    boost::asio::io_context &get() {return ios;};
/home/kaworu/boost_1_69_0/boost/process/detail/windows/io_context_ref.hpp:        std::unique_ptr<boost::asio::windows::object_handle> handle;
/home/kaworu/boost_1_69_0/boost/process/detail/windows/io_context_ref.hpp:                     boost::asio::io_context & ios, void * handle,
/home/kaworu/boost_1_69_0/boost/process/detail/windows/io_context_ref.hpp:                  handle(new boost::asio::windows::object_handle(ios, handle)),
/home/kaworu/boost_1_69_0/boost/process/detail/windows/io_context_ref.hpp:    boost::asio::io_context &ios;
/home/kaworu/boost_1_69_0/boost/process/detail/windows/async_pipe.hpp:    ::boost::asio::windows::stream_handle _source;
/home/kaworu/boost_1_69_0/boost/process/detail/windows/async_pipe.hpp:    ::boost::asio::windows::stream_handle _sink  ;
/home/kaworu/boost_1_69_0/boost/process/detail/windows/async_pipe.hpp:    typedef ::boost::asio::windows::stream_handle   handle_type;
/home/kaworu/boost_1_69_0/boost/process/detail/windows/async_pipe.hpp:    inline async_pipe(boost::asio::io_context & ios,
/home/kaworu/boost_1_69_0/boost/process/detail/windows/async_pipe.hpp:    inline async_pipe(boost::asio::io_context & ios_source,
/home/kaworu/boost_1_69_0/boost/process/detail/windows/async_pipe.hpp:                      boost::asio::io_context & ios_sink,
/home/kaworu/boost_1_69_0/boost/process/detail/windows/async_pipe.hpp:    explicit async_pipe(::boost::asio::io_context & ios_source,
/home/kaworu/boost_1_69_0/boost/process/detail/windows/async_pipe.hpp:                        ::boost::asio::io_context & ios_sink,
/home/kaworu/boost_1_69_0/boost/process/detail/windows/async_pipe.hpp:    explicit async_pipe(boost::asio::io_context & ios, const basic_pipe<CharT, Traits> & p)
/home/kaworu/boost_1_69_0/boost/process/detail/windows/async_pipe.hpp:    native_handle_type native_source() const {return const_cast<boost::asio::windows::stream_handle&>(_source).native_handle();}
/home/kaworu/boost_1_69_0/boost/process/detail/windows/async_pipe.hpp:    native_handle_type native_sink  () const {return const_cast<boost::asio::windows::stream_handle&>(_sink  ).native_handle();}
/home/kaworu/boost_1_69_0/boost/process/detail/windows/async_pipe.hpp:    handle_type source(::boost::asio::io_context& ios) &&
/home/kaworu/boost_1_69_0/boost/process/detail/windows/async_pipe.hpp:        ::boost::asio::windows::stream_handle stolen(ios, _source.native_handle());
/home/kaworu/boost_1_69_0/boost/process/detail/windows/async_pipe.hpp:    handle_type sink  (::boost::asio::io_context& ios) &&
/home/kaworu/boost_1_69_0/boost/process/detail/windows/async_pipe.hpp:        ::boost::asio::windows::stream_handle stolen(ios, _sink.native_handle());
/home/kaworu/boost_1_69_0/boost/process/detail/windows/async_pipe.hpp:    handle_type source(::boost::asio::io_context& ios) const &
/home/kaworu/boost_1_69_0/boost/process/detail/windows/async_pipe.hpp:        return ::boost::asio::windows::stream_handle(ios, source);
/home/kaworu/boost_1_69_0/boost/process/detail/windows/async_pipe.hpp:    handle_type sink  (::boost::asio::io_context& ios) const &
/home/kaworu/boost_1_69_0/boost/process/detail/windows/async_pipe.hpp:        return ::boost::asio::windows::stream_handle(ios, sink);
/home/kaworu/boost_1_69_0/boost/process/detail/windows/async_pipe.hpp:async_pipe::async_pipe(boost::asio::io_context & ios_source,
/home/kaworu/boost_1_69_0/boost/process/detail/windows/async_pipe.hpp:                       boost::asio::io_context & ios_sink,
/home/kaworu/boost_1_69_0/boost/process/detail/windows/async_pipe.hpp:    auto &source_in = const_cast<::boost::asio::windows::stream_handle &>(p._source);
/home/kaworu/boost_1_69_0/boost/process/detail/windows/async_pipe.hpp:    auto &sink_in   = const_cast<::boost::asio::windows::stream_handle &>(p._sink);
/home/kaworu/boost_1_69_0/boost/process/detail/windows/async_pipe.hpp:    _source = ::boost::asio::windows::stream_handle(source_in.get_io_context(), source);
/home/kaworu/boost_1_69_0/boost/process/detail/windows/async_pipe.hpp:    _sink = ::boost::asio::windows::stream_handle(source_in.get_io_context(), sink);
/home/kaworu/boost_1_69_0/boost/process/detail/windows/async_pipe.hpp:    auto source_in = const_cast<::boost::asio::windows::stream_handle &>(_source).native_handle();
/home/kaworu/boost_1_69_0/boost/process/detail/windows/async_pipe.hpp:    auto sink_in   = const_cast<::boost::asio::windows::stream_handle &>(_sink).native_handle();
/home/kaworu/boost_1_69_0/boost/process/detail/windows/async_in.hpp:            boost::asio::async_write(*pipe, buf,
/home/kaworu/boost_1_69_0/boost/process/detail/windows/async_in.hpp:            boost::asio::async_write(*pipe, buf,
/home/kaworu/boost_1_69_0/boost/process/detail/windows/async_out.hpp:        boost::asio::async_read(*pipe, buf,
/home/kaworu/boost_1_69_0/boost/process/detail/windows/async_out.hpp:    std::shared_ptr<boost::asio::streambuf> buffer = std::make_shared<boost::asio::streambuf>();
/home/kaworu/boost_1_69_0/boost/process/detail/windows/async_out.hpp:        boost::asio::async_read(*pipe, *buffer,
/home/kaworu/boost_1_69_0/boost/process/detail/posix/io_context_ref.hpp:    io_context_ref(boost::asio::io_context & ios) : ios(ios)
/home/kaworu/boost_1_69_0/boost/process/detail/posix/io_context_ref.hpp:    boost::asio::io_context &get() {return ios;};
/home/kaworu/boost_1_69_0/boost/process/detail/posix/io_context_ref.hpp:    boost::asio::io_context &ios;
/home/kaworu/boost_1_69_0/boost/process/detail/posix/io_context_ref.hpp:    boost::process::detail::posix::sigchld_service &sigchld_service = boost::asio::use_service<boost::process::detail::posix::sigchld_service>(ios);
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_pipe.hpp:    ::boost::asio::posix::stream_descriptor _source;
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_pipe.hpp:    ::boost::asio::posix::stream_descriptor _sink  ;
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_pipe.hpp:    typedef ::boost::asio::posix::stream_descriptor handle_type;
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_pipe.hpp:    inline async_pipe(boost::asio::io_context & ios) : async_pipe(ios, ios) {}
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_pipe.hpp:    inline async_pipe(boost::asio::io_context & ios_source,
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_pipe.hpp:                      boost::asio::io_context & ios_sink) : _source(ios_source), _sink(ios_sink)
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_pipe.hpp:    inline async_pipe(boost::asio::io_context & ios, const std::string & name)
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_pipe.hpp:    inline async_pipe(boost::asio::io_context & ios_source,
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_pipe.hpp:                      boost::asio::io_context & io_sink, const std::string & name);
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_pipe.hpp:    explicit async_pipe(::boost::asio::io_context & ios_source,
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_pipe.hpp:                        ::boost::asio::io_context & ios_sink,
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_pipe.hpp:    explicit async_pipe(boost::asio::io_context & ios, const basic_pipe<CharT, Traits> & p)
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_pipe.hpp:    native_handle_type native_source() const {return const_cast<boost::asio::posix::stream_descriptor&>(_source).native_handle();}
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_pipe.hpp:    native_handle_type native_sink  () const {return const_cast<boost::asio::posix::stream_descriptor&>(_sink  ).native_handle();}
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_pipe.hpp:    handle_type source(::boost::asio::io_context& ios) &&
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_pipe.hpp:        ::boost::asio::posix::stream_descriptor stolen(ios, _source.release());
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_pipe.hpp:    handle_type sink  (::boost::asio::io_context& ios) &&
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_pipe.hpp:        ::boost::asio::posix::stream_descriptor stolen(ios, _sink.release());
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_pipe.hpp:    handle_type source(::boost::asio::io_context& ios) const &
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_pipe.hpp:        auto source_in = const_cast<::boost::asio::posix::stream_descriptor &>(_source).native_handle();
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_pipe.hpp:        return ::boost::asio::posix::stream_descriptor(ios, ::dup(source_in));
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_pipe.hpp:    handle_type sink  (::boost::asio::io_context& ios) const &
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_pipe.hpp:        auto sink_in = const_cast<::boost::asio::posix::stream_descriptor &>(_sink).native_handle();
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_pipe.hpp:        return ::boost::asio::posix::stream_descriptor(ios, ::dup(sink_in));
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_pipe.hpp:async_pipe::async_pipe(boost::asio::io_context & ios_source,
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_pipe.hpp:                       boost::asio::io_context & ios_sink,
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_pipe.hpp:    auto source_in = const_cast<::boost::asio::posix::stream_descriptor &>(_source).native_handle();
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_pipe.hpp:    auto sink_in   = const_cast<::boost::asio::posix::stream_descriptor &>(_sink).native_handle();
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_pipe.hpp:    auto source_in = const_cast<::boost::asio::posix::stream_descriptor &>(p._source).native_handle();
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_pipe.hpp:    auto sink_in   = const_cast<::boost::asio::posix::stream_descriptor &>(p._sink).native_handle();
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_pipe.hpp:    auto source_in = const_cast<::boost::asio::posix::stream_descriptor &>(_source).native_handle();
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_pipe.hpp:    auto sink_in   = const_cast<::boost::asio::posix::stream_descriptor &>(_sink).native_handle();
/home/kaworu/boost_1_69_0/boost/process/detail/posix/sigchld_service.hpp:class sigchld_service : public boost::asio::detail::service_base<sigchld_service>
/home/kaworu/boost_1_69_0/boost/process/detail/posix/sigchld_service.hpp:    boost::asio::io_context::strand _strand{get_io_context()};
/home/kaworu/boost_1_69_0/boost/process/detail/posix/sigchld_service.hpp:    boost::asio::signal_set _signal_set{get_io_context(), SIGCHLD};
/home/kaworu/boost_1_69_0/boost/process/detail/posix/sigchld_service.hpp:    sigchld_service(boost::asio::io_context & io_context)
/home/kaworu/boost_1_69_0/boost/process/detail/posix/sigchld_service.hpp:        : boost::asio::detail::service_base<sigchld_service>(io_context)
/home/kaworu/boost_1_69_0/boost/process/detail/posix/sigchld_service.hpp:        boost::asio::async_completion<
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_in.hpp:            boost::asio::async_write(*pipe, buf,
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_in.hpp:            boost::asio::async_write(*pipe, buf,
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_out.hpp:        boost::asio::async_read(*pipe, buf,
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_out.hpp:    std::shared_ptr<boost::asio::streambuf> buffer = std::make_shared<boost::asio::streambuf>();
/home/kaworu/boost_1_69_0/boost/process/detail/posix/async_out.hpp:        boost::asio::async_read(*pipe, *buffer,
/home/kaworu/boost_1_69_0/boost/process/detail/async_handler.hpp:                boost::asio::io_context>::type is_ios;
/home/kaworu/boost_1_69_0/boost/process/detail/async_handler.hpp:            boost::asio::io_context>::type type;
/home/kaworu/boost_1_69_0/boost/process/detail/async_handler.hpp:boost::asio::io_context &get_io_context_var(boost::asio::io_context & f, Args&...)
/home/kaworu/boost_1_69_0/boost/process/detail/async_handler.hpp:boost::asio::io_context &get_io_context_var(First&, Args&...args)
/home/kaworu/boost_1_69_0/libs/log/src/syslog_backend.cpp:    set_local_address(boost::asio::ip::address::from_string(addr), port);
/home/kaworu/boost_1_69_0/libs/log/src/syslog_backend.cpp:BOOST_LOG_API void syslog_backend::set_local_address(boost::asio::ip::address const& addr, unsigned short port)
/home/kaworu/boost_1_69_0/libs/log/src/syslog_backend.cpp:    set_target_address(boost::asio::ip::address::from_string(addr), port);
/home/kaworu/boost_1_69_0/libs/log/src/syslog_backend.cpp:BOOST_LOG_API void syslog_backend::set_target_address(boost::asio::ip::address const& addr, unsigned short port)
/home/kaworu/boost_1_69_0/libs/log/doc/tmp/sinks_reference.xml:<method name="set_local_address"><type>void</type><parameter name="addr"><paramtype>boost::asio::ip::address const &amp;</paramtype><description><para>The local address </para></description></parameter><parameter name="port"><paramtype>unsigned short</paramtype><default>514</default><description><para>The local port number </para></description></parameter><description><para>The method sets the local address which log records will be sent from.</para><para><note><para>Does not have effect if the backend was constructed to use native syslog API</para></note>
/home/kaworu/boost_1_69_0/libs/log/doc/tmp/sinks_reference.xml:<method name="set_target_address"><type>void</type><parameter name="addr"><paramtype>boost::asio::ip::address const &amp;</paramtype><description><para>The remote host address </para></description></parameter><parameter name="port"><paramtype>unsigned short</paramtype><default>514</default><description><para>The port number on the remote host </para></description></parameter><description><para>The method sets the address of the remote host where log records will be sent to.</para><para><note><para>Does not have effect if the backend was constructed to use native syslog API</para></note>
/home/kaworu/boost_1_69_0/libs/beast/test/beast/experimental/flat_stream.cpp:                std::vector<boost::asio::const_buffer> v;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/experimental/flat_stream.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/experimental/flat_stream.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/experimental/timeout_service.cpp:        boost::asio::io_context ctx;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/experimental/icy_stream.cpp:        using boost::asio::mutable_buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/experimental/icy_stream.cpp:        boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/experimental/icy_stream.cpp:                            ec == boost::asio::error::eof, ec.message()))
/home/kaworu/boost_1_69_0/libs/beast/test/beast/experimental/icy_stream.cpp:                            ec == boost::asio::error::eof, ec.message()))
/home/kaworu/boost_1_69_0/libs/beast/test/beast/experimental/timeout_socket.cpp:        boost::asio::io_context ioc_;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/experimental/timeout_socket.cpp:        boost::asio::ip::tcp::acceptor acceptor_;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/experimental/timeout_socket.cpp:        boost::asio::ip::tcp::socket socket_;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/experimental/timeout_socket.cpp:            if(ec != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/test/beast/experimental/timeout_socket.cpp:            boost::asio::ip::tcp::endpoint ep,
/home/kaworu/boost_1_69_0/libs/beast/test/beast/experimental/timeout_socket.cpp:                boost::asio::socket_base::reuse_address(true), ec);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/experimental/timeout_socket.cpp:                boost::asio::socket_base::max_listen_connections, ec);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/experimental/timeout_socket.cpp:            boost::asio::ip::tcp::socket socket_;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/experimental/timeout_socket.cpp:                boost::asio::ip::tcp::socket sock,
/home/kaworu/boost_1_69_0/libs/beast/test/beast/experimental/timeout_socket.cpp:                    boost::asio::socket_base::wait_read,
/home/kaworu/boost_1_69_0/libs/beast/test/beast/experimental/timeout_socket.cpp:        boost::asio::ip::tcp::endpoint ep(
/home/kaworu/boost_1_69_0/libs/beast/test/beast/experimental/timeout_socket.cpp:            boost::asio::ip::make_address("127.0.0.1"), 8080);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/experimental/timeout_socket.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/experimental/timeout_socket.cpp:            s.async_read_some(boost::asio::buffer(buf),
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/read_size.cpp:        check<boost::asio::streambuf>();
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/flat_static_buffer.cpp:    boost::asio::is_dynamic_buffer<flat_static_buffer_base>::value);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/flat_static_buffer.cpp:        using boost::asio::buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/flat_static_buffer.cpp:        using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_prefix.cpp:    std::is_same<boost::asio::const_buffer, decltype(
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_prefix.cpp:            std::declval<boost::asio::const_buffer>()))>::value);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_prefix.cpp:    boost::asio::is_const_buffer_sequence<decltype(
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_prefix.cpp:            std::declval<boost::asio::const_buffer>()))>::value);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_prefix.cpp:    std::is_same<boost::asio::mutable_buffer, decltype(
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_prefix.cpp:            std::declval<boost::asio::mutable_buffer>()))>::value);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_prefix.cpp:        using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_prefix.cpp:        using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_prefix.cpp:        using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_prefix.cpp:        using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_prefix.cpp:        using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_prefix.cpp:        using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_prefix.cpp:        using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_prefix.cpp:        using boost::asio::mutable_buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_prefix.cpp:        using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_prefix.cpp:        using boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_prefix.cpp:        testMatrix<boost::asio::const_buffer>();
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_prefix.cpp:        testMatrix<boost::asio::mutable_buffer>();
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/flat_buffer.cpp:    boost::asio::is_dynamic_buffer<flat_buffer>::value);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_adapter.cpp:        using boost::asio::buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_adapter.cpp:        using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_adapter.cpp:        using boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_adapter.cpp:        using boost::asio::mutable_buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_adapter.cpp:        using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_adapter.cpp:            using sb_type = boost::asio::streambuf;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_adapter.cpp:        using type = boost::asio::streambuf;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_suffix.cpp:            boost::asio::const_buffer> cb1{
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_suffix.cpp:            boost::asio::const_buffer> cb2{
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_suffix.cpp:        using boost::asio::buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_suffix.cpp:        using boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_suffix.cpp:        class test_buffer : public boost::asio::const_buffer
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_suffix.cpp:                : boost::asio::const_buffer("\r\n", 2)
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_suffix.cpp:            boost::asio::const_buffer,
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_suffix.cpp:            boost::asio::const_buffer>> cb(
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_suffix.cpp:                    boost::asio::const_buffer("\r", 1),
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_suffix.cpp:                    boost::asio::const_buffer("\n", 1));
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_suffix.cpp:        using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_suffix.cpp:        using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_suffix.cpp:        using boost::asio::mutable_buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_suffix.cpp:        using boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/multi_buffer.cpp:    boost::asio::is_dynamic_buffer<multi_buffer>::value);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/multi_buffer.cpp:        using boost::asio::buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/multi_buffer.cpp:        using boost::asio::buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/multi_buffer.cpp:        using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/multi_buffer.cpp:        using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffer_test.hpp:    b.commit(boost::asio::buffer_copy(
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffer_test.hpp:        b.prepare(s.size()), boost::asio::buffer(
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffer_test.hpp:    boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value,
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffer_test.hpp:    boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value,
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffer_test.hpp:        n += boost::asio::buffer_size(*it2);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffer_test.hpp:    boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value,
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffer_test.hpp:        n += boost::asio::buffer_size(*it);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffer_test.hpp:    boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value,
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffer_test.hpp:        n += boost::asio::buffer_size(*--it);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffer_test.hpp:    boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value,
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffer_test.hpp:        n += boost::asio::buffer_size(*it);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/bind_handler.cpp:        boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/bind_handler.cpp:        boost::asio::io_service::strand s{ioc};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/bind_handler.cpp:        boost::asio::post(ioc.get_executor(),
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffer.cpp://        to compile, so we use boost::asio::error::eof instead.
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffer.cpp:            boost::asio::error::eof);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffer.cpp:            boost::asio::error::eof);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffer.cpp:            ec == boost::asio::error::eof, ec.message());
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffer.cpp:            boost::asio::error::eof);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffer.cpp:            boost::asio::error::eof);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffer.cpp:            ec == boost::asio::error::eof, ec.message());
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/static_buffer.cpp:    boost::asio::is_dynamic_buffer<static_buffer_base>::value);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/static_buffer.cpp:        using boost::asio::buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/static_buffer.cpp:        using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffered_read_stream.cpp:        boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffered_read_stream.cpp:        boost::asio::io_context& ioc_;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffered_read_stream.cpp:            boost::asio::io_context& ioc,
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffered_read_stream.cpp:            using boost::asio::buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffered_read_stream.cpp:            using boost::asio::buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffered_read_stream.cpp:            using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffered_read_stream.cpp:            boost::asio::async_read(*brs_,
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffered_read_stream.cpp:        using boost::asio::buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffered_read_stream.cpp:        using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffered_read_stream.cpp:            boost::asio::read(srs, buffer(&s[0], s.size()), ec);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffered_read_stream.cpp:            boost::asio::read(srs, buffer(&s[0], s.size()), ec);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffered_read_stream.cpp:            boost::asio::async_read(
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffered_read_stream.cpp:            boost::asio::async_read(
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffered_read_stream.cpp:        boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffered_read_stream.cpp:        boost::asio::io_service::strand s{ioc};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffered_read_stream.cpp:        brs.async_read_some(boost::asio::mutable_buffer{},
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_cat.cpp:        using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_cat.cpp:        using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_cat.cpp:        using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_cat.cpp:        using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_cat.cpp:        using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_cat.cpp:        using boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_cat.cpp:            boost::asio::streambuf sb1, sb2;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_cat.cpp:        using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_cat.cpp:        using boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_cat.cpp:        using boost::asio::buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_cat.cpp:        using boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_cat.cpp:        boost::asio::buffer_copy(
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_cat.cpp:        using boost::asio::buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_cat.cpp:        using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_cat.cpp:        using boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_cat.cpp:        using boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_cat.cpp:        using boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/buffers_cat.cpp:        using boost::asio::mutable_buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/core/type_traits.cpp:using stream_type = boost::asio::ip::tcp::socket;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/test.hpp:        boost::asio::io_context ioc_;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/test.hpp:        boost::asio::executor_work_guard<
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/test.hpp:            boost::asio::io_context::executor_type> work_;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/test.hpp:            boost::asio::post(ioc_,
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/test.hpp:                    se.code() != boost::asio::error::eof)
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/test.hpp:                ec != boost::asio::error::eof)
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/test.hpp:        boost::asio::const_buffer cb_;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/test.hpp:    boost::asio::const_buffer
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/test.hpp:        return boost::asio::const_buffer(&s[0], N-1);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/test.hpp:        using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/test.hpp:        using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/test.hpp:    run_until(boost::asio::io_context& ioc,
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/test.hpp:        boost::asio::io_context& ioc, Pred&& pred)
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/test.hpp:            return boost::asio::write(
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/test.hpp:        boost::asio::yield_context& yield_;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/test.hpp:        AsyncClient(boost::asio::yield_context& yield)
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/test.hpp:                boost::asio::async_write(
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/accept.cpp:                w.accept(ws, boost::asio::buffer(
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/accept.cpp:                w.accept_ex(ws, boost::asio::buffer(
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/accept.cpp:                        boost::asio::error::eof)
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/accept.cpp:                        boost::asio::buffer(s.data(), n));
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/accept.cpp:        boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/accept.cpp:        boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/accept.cpp:        boost::asio::io_service::strand s{ioc};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/close.cpp:                    se.code() == boost::asio::error::operation_aborted,
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/close.cpp:        using boost::asio::buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/close.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/close.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/close.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/close.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/close.cpp:                    if(ec != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/close.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/close.cpp:                    if(ec != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/close.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/close.cpp:                    if(ec != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/close.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/close.cpp:                    if(ec != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/close.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/close.cpp:                    if(ec != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/close.cpp:                    if(ec != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/close.cpp:                    if(ec != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/close.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/close.cpp:                    if(ec && ec != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/close.cpp:                            ec == boost::asio::error::operation_aborted);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/close.cpp:                    if(ec != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/close.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/close.cpp:                    if(ec != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/close.cpp:                    if(ec != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/close.cpp:        using boost::asio::asio_handler_is_continuation;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/close.cpp:        boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/close.cpp:        boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/close.cpp:        boost::asio::io_service::strand s{ioc};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/handshake.cpp:        boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/handshake.cpp:        boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/handshake.cpp:        boost::asio::io_service::strand s{ioc};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/utf8_checker.cpp:            BEAST_EXPECT(! u.write(boost::asio::buffer("\xc1\xbf", 2)));
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/utf8_checker.cpp:            BEAST_EXPECT(u.write(boost::asio::buffer("\xef\xbf\xbf", 3)));
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/utf8_checker.cpp:        using boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/utf8_checker.cpp:                    boost::asio::const_buffer> cb{
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/utf8_checker.cpp:                        boost::asio::const_buffer(s.data(), n)};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/utf8_checker.cpp:                    b.commit(boost::asio::buffer_copy(
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/utf8_checker.cpp:            buffers_suffix<boost::asio::const_buffer> cb{boost::asio::const_buffer(s.data(), n)};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/utf8_checker.cpp:                b.commit(boost::asio::buffer_copy(b.prepare(amount), cb));
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/utf8_checker.cpp:            buffers_suffix<boost::asio::const_buffer> cb{boost::asio::const_buffer(s.data(), n)};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/utf8_checker.cpp:                b.commit(boost::asio::buffer_copy(b.prepare(amount), cb));
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read1.cpp:        using boost::asio::buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read1.cpp:                    se.code() == boost::asio::error::operation_aborted,
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read1.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read1.cpp:                boost::asio::error::operation_aborted);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read1.cpp:        using boost::asio::buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read1.cpp:        using boost::asio::buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read1.cpp:        using boost::asio::buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/stream.cpp:            stream<test::stream>, boost::asio::io_context&>::value);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/doc_snippets.cpp:boost::asio::io_service ios;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/doc_snippets.cpp:boost::asio::io_service::work work{ios};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/doc_snippets.cpp:boost::asio::ip::tcp::socket sock{ios};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/doc_snippets.cpp:    stream<boost::asio::ip::tcp::socket> ws{ios};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/doc_snippets.cpp:    stream<boost::asio::ip::tcp::socket> ws{std::move(sock)};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/doc_snippets.cpp:    stream<boost::asio::ip::tcp::socket&> ws{sock};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/doc_snippets.cpp:    ws.next_layer().shutdown(boost::asio::ip::tcp::socket::shutdown_send);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/doc_snippets.cpp:    boost::asio::ip::tcp::resolver r{ios};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/doc_snippets.cpp:    stream<boost::asio::ip::tcp::socket> ws{ios};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/doc_snippets.cpp:    boost::asio::connect(ws.next_layer(), r.resolve({host, "ws"}));
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/doc_snippets.cpp:    boost::asio::ip::tcp::acceptor acceptor{ios};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/doc_snippets.cpp:    stream<boost::asio::ip::tcp::socket> ws{acceptor.get_io_service()};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/doc_snippets.cpp:    stream<boost::asio::ip::tcp::socket> ws{ios};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/doc_snippets.cpp:        stream<boost::asio::ip::tcp::socket> ws{std::move(sock)};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/doc_snippets.cpp:    stream<boost::asio::ip::tcp::socket> ws{ios};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/doc_snippets.cpp:    boost::asio::streambuf buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/doc_snippets.cpp:    boost::asio::read_until(sock, buffer, "\r\n\r\n");
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/doc_snippets.cpp:    stream<boost::asio::ip::tcp::socket> ws{ios};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/doc_snippets.cpp:    stream<boost::asio::ip::tcp::socket> ws{ios};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/doc_snippets.cpp:        using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/doc_snippets.cpp:    stream<boost::asio::ip::tcp::socket> ws{ios};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/doc_snippets.cpp:void echo(stream<boost::asio::ip::tcp::socket>& ws,
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/doc_snippets.cpp:    multi_buffer& buffer, boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/doc_snippets.cpp:        ws.async_write(buffer.data(), boost::asio::use_future);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/doc_snippets.cpp:boost::asio::io_service ios;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/doc_snippets.cpp:boost::asio::io_service::work work{ios};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/doc_snippets.cpp:boost::asio::ip::tcp::socket sock{ios};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/doc_snippets.cpp:    boost::asio::ssl::context ctx{boost::asio::ssl::context::sslv23};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/doc_snippets.cpp:    stream<boost::asio::ssl::stream<boost::asio::ip::tcp::socket>> wss{ios, ctx};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/doc_snippets.cpp:    boost::asio::ip::tcp::endpoint ep;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/doc_snippets.cpp:    boost::asio::ssl::context ctx{boost::asio::ssl::context::sslv23};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/doc_snippets.cpp:    stream<boost::asio::ssl::stream<boost::asio::ip::tcp::socket>> ws{ios, ctx};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/doc_snippets.cpp:    ws.next_layer().handshake(boost::asio::ssl::stream_base::client);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/ping.cpp:                    se.code() == boost::asio::error::operation_aborted,
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/ping.cpp:                    se.code() == boost::asio::error::operation_aborted,
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/ping.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/ping.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/ping.cpp:                    if(ec != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/ping.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/ping.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/ping.cpp:                    if(ec != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/ping.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/ping.cpp:                    if(ec != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/ping.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/ping.cpp:                    if(ec != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/ping.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/ping.cpp:                    if(ec != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/ping.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/ping.cpp:                    BEAST_EXPECTS(ec == boost::asio::
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/ping.cpp:                            BEAST_EXPECTS(ec == boost::asio::
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/ping.cpp:        using boost::asio::asio_handler_is_continuation;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/ping.cpp:        boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/ping.cpp:        boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/ping.cpp:        boost::asio::io_service::strand s{ioc};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:        using boost::asio::buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:                    if(ec != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:                    if(ec != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:                            if(ec != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:                    if(ec != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:                boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:                boost::asio::buffer("\x01" + s));
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:                boost::asio::buffer(
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:                boost::asio::mutable_buffer,
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:                        boost::asio::mutable_buffer{
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:            using boost::asio::asio_handler_is_continuation;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:            using boost::asio::asio_handler_is_continuation;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:            boost::asio::write(ws.next_layer(), sbuf(
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:        boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:        boost::asio::mutable_buffer b{buf, 0};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:        boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:            boost::asio::write(ws.next_layer(), sbuf(
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:            boost::asio::write(wsc.next_layer(), sbuf(
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:            boost::asio::write(ws.next_layer(), sbuf(
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:            boost::asio::write(wsc.next_layer(), sbuf(
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:            boost::asio::write(wsc.next_layer(), sbuf(
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:            boost::asio::write(wsc.next_layer(), sbuf(
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:        boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:            boost::asio::mutable_buffer{},
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/read2.cpp:            boost::asio::io_service::strand s{ioc};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/write.cpp:        using boost::asio::buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/write.cpp:                    se.code() == boost::asio::error::operation_aborted,
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/write.cpp:            w.write(ws, boost::asio::const_buffer{});
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/write.cpp:        using boost::asio::buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/write.cpp:        using boost::asio::buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/write.cpp:        using boost::asio::buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/write.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/write.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/write.cpp:                    if(ec != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/write.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/write.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/write.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/write.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/write.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/write.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/write.cpp:                boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/write.cpp:                    boost::asio::const_buffer{},
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/write.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/write.cpp:            boost::asio::const_buffer,
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/write.cpp:                    boost::asio::const_buffer{
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/write.cpp:        using boost::asio::asio_handler_is_continuation;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/write.cpp:        boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/write.cpp:            true, boost::asio::const_buffer{},
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/write.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/write.cpp:            boost::asio::io_service::strand s{ioc};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/websocket/write.cpp:            ws.async_write(boost::asio::const_buffer{},
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/message_fuzz.hpp:            for(auto it = boost::asio::buffer_sequence_begin(mb);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/message_fuzz.hpp:                it != boost::asio::buffer_sequence_end(mb);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/message_fuzz.hpp:                boost::asio::mutable_buffer b = *it;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/message_fuzz.hpp:                for(auto it = boost::asio::buffer_sequence_begin(mb);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/message_fuzz.hpp:                    it != boost::asio::buffer_sequence_end(mb);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/message_fuzz.hpp:                    boost::asio::mutable_buffer b = *it;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/basic_parser.cpp:        boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/basic_parser.cpp:        auto const size = boost::asio::buffer_size(buffers);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/basic_parser.cpp:            if(! BEAST_EXPECT(n == boost::asio::buffer_size(cb)))
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/basic_parser.cpp:        parsegrind<Parser>(boost::asio::const_buffer{
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/basic_parser.cpp:        boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value>::type
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/basic_parser.cpp:            buffers_suffix<boost::asio::const_buffer> cb{
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/basic_parser.cpp:                boost::asio::const_buffer{msg.data(), i},
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/basic_parser.cpp:                boost::asio::const_buffer{
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/basic_parser.cpp:    boost::asio::const_buffer
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/basic_parser.cpp:        p.put(boost::asio::buffer(
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/basic_parser.cpp:        p.put(boost::asio::buffer(
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/basic_parser.cpp:                p.put(boost::asio::const_buffer{
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/basic_parser.cpp:            p.put(boost::asio::const_buffer{
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/basic_parser.cpp:            p.put(boost::asio::const_buffer{
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/basic_parser.cpp:        feed(boost::asio::buffer(buf, sizeof(buf)), p, ec);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/file_body.cpp:            buffer.commit(boost::asio::buffer_copy(
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/file_body.cpp:                buffer.prepare(boost::asio::buffer_size(buffers)),
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/file_body.cpp:            p.put(boost::asio::buffer(s.data(), s.size()), ec);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/dynamic_body.cpp:    boost::asio::io_context ioc_;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/parser.cpp:    boost::asio::const_buffer
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/parser.cpp:        using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/parser.cpp:        using boost::asio::buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/chunk_encode.cpp:    using cb_t = boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/test_parser.hpp:        boost::asio::mutable_buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/serializer.cpp:                boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/serializer.cpp:                boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/serializer.cpp:            size = boost::asio::buffer_size(buffers);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/read.cpp:        using boost::asio::buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/read.cpp:        using boost::asio::buffer_copy;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/read.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/read.cpp:                boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/read.cpp:        using boost::asio::buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/read.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/read.cpp:            boost::asio::io_service::strand s{ioc};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/read.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/read.cpp:            boost::asio::io_service::strand s{ioc};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/read.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/read.cpp:            boost::asio::io_service::strand s{ioc};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/span_body.cpp:            BEAST_EXPECT(boost::asio::buffer_size(buf->first) == 3);
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/span_body.cpp:            w.put(boost::asio::const_buffer{
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/span_body.cpp:            w.put(boost::asio::const_buffer{
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/write.cpp:                boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/write.cpp:                boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/write.cpp:                using boost::asio::buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/write.cpp:                using boost::asio::buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/write.cpp:                using boost::asio::buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/write.cpp:                using boost::asio::buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/write.cpp:                boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/write.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/write.cpp:                boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/write.cpp:    testWriteStream(boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/write.cpp:        boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/write.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/write.cpp:            boost::asio::io_service::strand s{ioc};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/write.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/write.cpp:            boost::asio::io_service::strand s{ioc};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/write.cpp:            boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/write.cpp:            boost::asio::io_service::strand s{ioc};
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/write.cpp:                boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/beast/http/write.cpp:                boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/extras/include/boost/beast/test/websocket.hpp:    boost::asio::io_context ioc_;
/home/kaworu/boost_1_69_0/libs/beast/test/extras/include/boost/beast/test/websocket.hpp:    boost::asio::executor_work_guard<
/home/kaworu/boost_1_69_0/libs/beast/test/extras/include/boost/beast/test/websocket.hpp:        boost::asio::io_context::executor_type> work_;
/home/kaworu/boost_1_69_0/libs/beast/test/extras/include/boost/beast/test/websocket.hpp:        boost::asio::post(ioc_,
/home/kaworu/boost_1_69_0/libs/beast/test/extras/include/boost/beast/test/websocket.hpp:                se.code() != boost::asio::error::eof)
/home/kaworu/boost_1_69_0/libs/beast/test/extras/include/boost/beast/test/websocket.hpp:            ec != boost::asio::error::eof)
/home/kaworu/boost_1_69_0/libs/beast/test/extras/include/boost/beast/test/sig_wait.hpp:    boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/extras/include/boost/beast/test/sig_wait.hpp:    boost::asio::signal_set signals(
/home/kaworu/boost_1_69_0/libs/beast/test/extras/include/boost/beast/test/yield_to.hpp:    boost::asio::io_context ioc_;
/home/kaworu/boost_1_69_0/libs/beast/test/extras/include/boost/beast/test/yield_to.hpp:    boost::asio::executor_work_guard<
/home/kaworu/boost_1_69_0/libs/beast/test/extras/include/boost/beast/test/yield_to.hpp:        boost::asio::io_context::executor_type> work_;
/home/kaworu/boost_1_69_0/libs/beast/test/extras/include/boost/beast/test/yield_to.hpp:        boost::asio::yield_context;
/home/kaworu/boost_1_69_0/libs/beast/test/extras/include/boost/beast/test/yield_to.hpp:    boost::asio::io_context&
/home/kaworu/boost_1_69_0/libs/beast/test/extras/include/boost/beast/test/yield_to.hpp:    boost::asio::spawn(ioc_,
/home/kaworu/boost_1_69_0/libs/beast/test/bench/buffers/bench_buffers.cpp:            do_trials("boost::asio::streambuf", trials,
/home/kaworu/boost_1_69_0/libs/beast/test/bench/buffers/bench_buffers.cpp:                 [&](){ return do_prepares<boost::asio::streambuf>(repeat, count, size); }
/home/kaworu/boost_1_69_0/libs/beast/test/bench/buffers/bench_buffers.cpp:                ,[&](){ return do_hints   <boost::asio::streambuf>(repeat, count, size); }
/home/kaworu/boost_1_69_0/libs/beast/test/bench/buffers/bench_buffers.cpp:                ,[&](){ return do_random  <boost::asio::streambuf>(repeat, count, size); }
/home/kaworu/boost_1_69_0/libs/beast/test/bench/wsload/wsload.cpp:namespace asio = boost::asio;
/home/kaworu/boost_1_69_0/libs/beast/test/bench/wsload/wsload.cpp:namespace ip = boost::asio::ip;
/home/kaworu/boost_1_69_0/libs/beast/test/bench/wsload/wsload.cpp:using tcp = boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/beast/test/bench/wsload/wsload.cpp:    boost::asio::const_buffer b_;
/home/kaworu/boost_1_69_0/libs/beast/test/bench/wsload/wsload.cpp:        boost::asio::const_buffer const*;
/home/kaworu/boost_1_69_0/libs/beast/test/bench/wsload/wsload.cpp:    using value_type = boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/bench/wsload/wsload.cpp:            double(4) / boost::asio::buffer_size(tb_)};
/home/kaworu/boost_1_69_0/libs/beast/test/bench/wsload/wsload.cpp:        auto const address = boost::asio::ip::make_address(argv[1]);
/home/kaworu/boost_1_69_0/libs/beast/test/bench/wsload/wsload.cpp:            boost::asio::io_context ioc{1};
/home/kaworu/boost_1_69_0/libs/beast/test/bench/parser/bench_parser.cpp:        using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/libs/beast/test/bench/parser/bench_parser.cpp:            boost::asio::mutable_buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/bench/parser/nodejs_parser.hpp:    static_assert(boost::asio::is_const_buffer_sequence<
/home/kaworu/boost_1_69_0/libs/beast/test/doc/exemplars.cpp:    using const_buffers_type = boost::asio::const_buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/doc/exemplars.cpp:        return boost::asio::buffer_size(buffers);
/home/kaworu/boost_1_69_0/libs/beast/test/doc/websocket_snippets.cpp:boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/doc/websocket_snippets.cpp:auto work = boost::asio::make_work_guard(ioc);
/home/kaworu/boost_1_69_0/libs/beast/test/doc/websocket_snippets.cpp:boost::asio::ip::tcp::socket sock{ioc};
/home/kaworu/boost_1_69_0/libs/beast/test/doc/websocket_snippets.cpp:    stream<boost::asio::ip::tcp::socket> ws{ioc};
/home/kaworu/boost_1_69_0/libs/beast/test/doc/websocket_snippets.cpp:    stream<boost::asio::ip::tcp::socket> ws{std::move(sock)};
/home/kaworu/boost_1_69_0/libs/beast/test/doc/websocket_snippets.cpp:    stream<boost::asio::ip::tcp::socket&> ws{sock};
/home/kaworu/boost_1_69_0/libs/beast/test/doc/websocket_snippets.cpp:    ws.next_layer().shutdown(boost::asio::ip::tcp::socket::shutdown_send);
/home/kaworu/boost_1_69_0/libs/beast/test/doc/websocket_snippets.cpp:    boost::asio::ip::tcp::resolver r{ioc};
/home/kaworu/boost_1_69_0/libs/beast/test/doc/websocket_snippets.cpp:    stream<boost::asio::ip::tcp::socket> ws{ioc};
/home/kaworu/boost_1_69_0/libs/beast/test/doc/websocket_snippets.cpp:    boost::asio::connect(ws.next_layer(), results.begin(), results.end());
/home/kaworu/boost_1_69_0/libs/beast/test/doc/websocket_snippets.cpp:    boost::asio::ip::tcp::acceptor acceptor{ioc};
/home/kaworu/boost_1_69_0/libs/beast/test/doc/websocket_snippets.cpp:    stream<boost::asio::ip::tcp::socket> ws{acceptor.get_executor().context()};
/home/kaworu/boost_1_69_0/libs/beast/test/doc/websocket_snippets.cpp:    stream<boost::asio::ip::tcp::socket> ws{ioc};
/home/kaworu/boost_1_69_0/libs/beast/test/doc/websocket_snippets.cpp:        stream<boost::asio::ip::tcp::socket> ws{std::move(sock)};
/home/kaworu/boost_1_69_0/libs/beast/test/doc/websocket_snippets.cpp:    stream<boost::asio::ip::tcp::socket> ws{ioc};
/home/kaworu/boost_1_69_0/libs/beast/test/doc/websocket_snippets.cpp:    boost::asio::streambuf buffer;
/home/kaworu/boost_1_69_0/libs/beast/test/doc/websocket_snippets.cpp:    boost::asio::read_until(sock, buffer, "\r\n\r\n");
/home/kaworu/boost_1_69_0/libs/beast/test/doc/websocket_snippets.cpp:    stream<boost::asio::ip::tcp::socket> ws{ioc};
/home/kaworu/boost_1_69_0/libs/beast/test/doc/websocket_snippets.cpp:    stream<boost::asio::ip::tcp::socket> ws{ioc};
/home/kaworu/boost_1_69_0/libs/beast/test/doc/websocket_snippets.cpp:        using boost::asio::buffer_size;
/home/kaworu/boost_1_69_0/libs/beast/test/doc/websocket_snippets.cpp:    stream<boost::asio::ip::tcp::socket> ws{ioc};
/home/kaworu/boost_1_69_0/libs/beast/test/doc/websocket_snippets.cpp:void echo(stream<boost::asio::ip::tcp::socket>& ws,
/home/kaworu/boost_1_69_0/libs/beast/test/doc/websocket_snippets.cpp:    multi_buffer& buffer, boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/libs/beast/test/doc/websocket_snippets.cpp:        ws.async_write(buffer.data(), boost::asio::use_future);
/home/kaworu/boost_1_69_0/libs/beast/test/doc/websocket_snippets.cpp:boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/doc/websocket_snippets.cpp:auto work = boost::asio::make_work_guard(ioc);
/home/kaworu/boost_1_69_0/libs/beast/test/doc/websocket_snippets.cpp:boost::asio::ip::tcp::socket sock{ioc};
/home/kaworu/boost_1_69_0/libs/beast/test/doc/websocket_snippets.cpp:    boost::asio::ssl::context ctx{boost::asio::ssl::context::sslv23};
/home/kaworu/boost_1_69_0/libs/beast/test/doc/websocket_snippets.cpp:    stream<boost::asio::ssl::stream<boost::asio::ip::tcp::socket>> wss{ioc, ctx};
/home/kaworu/boost_1_69_0/libs/beast/test/doc/websocket_snippets.cpp:    boost::asio::ip::tcp::endpoint ep;
/home/kaworu/boost_1_69_0/libs/beast/test/doc/websocket_snippets.cpp:    boost::asio::ssl::context ctx{boost::asio::ssl::context::sslv23};
/home/kaworu/boost_1_69_0/libs/beast/test/doc/websocket_snippets.cpp:    stream<boost::asio::ssl::stream<boost::asio::ip::tcp::socket>> ws{ioc, ctx};
/home/kaworu/boost_1_69_0/libs/beast/test/doc/websocket_snippets.cpp:    ws.next_layer().handshake(boost::asio::ssl::stream_base::client);
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_examples.cpp:            p.put(boost::asio::buffer(
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_examples.cpp:            p.put(boost::asio::buffer(
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_examples.cpp:                return boost::asio::const_buffer{
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_examples.cpp:        boost::asio::write(ts,
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_examples.cpp:        boost::asio::write(ts,
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_examples.cpp:        boost::asio::write(ts,
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_examples.cpp:        boost::asio::write(ts,
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_examples.cpp:        boost::asio::write(ts,
/home/kaworu/boost_1_69_0/libs/beast/test/doc/core_snippets.cpp:boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/doc/core_snippets.cpp:auto work = boost::asio::make_work_guard(ioc);
/home/kaworu/boost_1_69_0/libs/beast/test/doc/core_snippets.cpp:boost::asio::ip::tcp::socket sock{ioc};
/home/kaworu/boost_1_69_0/libs/beast/test/doc/core_snippets.cpp:boost::asio::ip::tcp::resolver r{ioc};
/home/kaworu/boost_1_69_0/libs/beast/test/doc/core_snippets.cpp:boost::asio::ip::tcp::socket stream{ioc};
/home/kaworu/boost_1_69_0/libs/beast/test/doc/core_snippets.cpp:boost::asio::connect(stream, results.begin(), results.end());
/home/kaworu/boost_1_69_0/libs/beast/test/doc/core_snippets.cpp:    boost::asio::write(stream, boost::asio::const_buffer(s.data(), s.size()));
/home/kaworu/boost_1_69_0/libs/beast/test/doc/core_examples.cpp:            boost::asio::buffer(buf, 0))));
/home/kaworu/boost_1_69_0/libs/beast/test/doc/core_examples.cpp:            boost::asio::buffer(buf, 1))));
/home/kaworu/boost_1_69_0/libs/beast/test/doc/core_examples.cpp:            boost::asio::buffer(buf, 2))));
/home/kaworu/boost_1_69_0/libs/beast/test/doc/core_examples.cpp:            boost::asio::buffer(buf, 3))));
/home/kaworu/boost_1_69_0/libs/beast/test/doc/core_examples.cpp:            boost::asio::buffer(buf, 4)));
/home/kaworu/boost_1_69_0/libs/beast/test/doc/core_examples.cpp:            boost::asio::buffer(buf, 1)));
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_snippets.cpp:boost::asio::const_buffer get_next_chunk_body();
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_snippets.cpp:boost::asio::const_buffer get_next_chunk_body()
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_snippets.cpp:    boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_snippets.cpp:    auto work = boost::asio::make_work_guard(ioc);
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_snippets.cpp:    boost::asio::ip::tcp::socket sock{ioc};
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_snippets.cpp:    boost::asio::write(sock, make_chunk(get_next_chunk_body()));
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_snippets.cpp:    boost::asio::write(sock, make_chunk(get_next_chunk_body()));
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_snippets.cpp:    boost::asio::write(sock, make_chunk(get_next_chunk_body()));
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_snippets.cpp:    boost::asio::write(sock, make_chunk_last());
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_snippets.cpp:    boost::asio::write(sock, make_chunk(get_next_chunk_body(), ext));
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_snippets.cpp:    boost::asio::write(sock, make_chunk(get_next_chunk_body(), ext, std::allocator<char>{}));
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_snippets.cpp:    boost::asio::write(sock, make_chunk(get_next_chunk_body(), std::move(ext)));
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_snippets.cpp:    boost::asio::write(sock, make_chunk(get_next_chunk_body(),
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_snippets.cpp:    boost::asio::write(sock, make_chunk(get_next_chunk_body()));
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_snippets.cpp:    boost::asio::write(sock, make_chunk(get_next_chunk_body()));
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_snippets.cpp:    boost::asio::write(sock, make_chunk_last(trailer));
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_snippets.cpp:    boost::asio::write(sock, make_chunk_last(trailer, std::allocator<char>{}));
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_snippets.cpp:    boost::asio::write(sock, make_chunk_last(boost::asio::const_buffer{ext.data(), ext.size()}));
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_snippets.cpp:    boost::asio::write(sock, chunk_header{
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_snippets.cpp:        boost::asio::buffer_size(cb1) +
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_snippets.cpp:        boost::asio::buffer_size(cb2) +
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_snippets.cpp:        boost::asio::buffer_size(cb3)});
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_snippets.cpp:    boost::asio::write(sock, cb1);
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_snippets.cpp:    boost::asio::write(sock, cb2);
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_snippets.cpp:    boost::asio::write(sock, cb3);
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_snippets.cpp:    boost::asio::write(sock, chunk_crlf{});
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_snippets.cpp:                sr.consume(boost::asio::buffer_size(buffer));
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_snippets.cpp:        sr.consume(boost::asio::buffer_size(buffer));
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_snippets.cpp:                sr.consume(boost::asio::buffer_size(buffer));
/home/kaworu/boost_1_69_0/libs/beast/test/doc/http_snippets.cpp:                    sr.consume(boost::asio::buffer_size(buffer));
/home/kaworu/boost_1_69_0/libs/beast/example/common/root_certificates.hpp:namespace ssl = boost::asio::ssl; // from <boost/asio/ssl.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/common/root_certificates.hpp:        boost::asio::buffer(cert.data(), cert.size()), ec);
/home/kaworu/boost_1_69_0/libs/beast/example/common/server_certificate.hpp:load_server_certificate(boost::asio::ssl::context& ctx)
/home/kaworu/boost_1_69_0/libs/beast/example/common/server_certificate.hpp:            boost::asio::ssl::context_base::password_purpose)
/home/kaworu/boost_1_69_0/libs/beast/example/common/server_certificate.hpp:        boost::asio::ssl::context::default_workarounds |
/home/kaworu/boost_1_69_0/libs/beast/example/common/server_certificate.hpp:        boost::asio::ssl::context::no_sslv2 |
/home/kaworu/boost_1_69_0/libs/beast/example/common/server_certificate.hpp:        boost::asio::ssl::context::single_dh_use);
/home/kaworu/boost_1_69_0/libs/beast/example/common/server_certificate.hpp:        boost::asio::buffer(cert.data(), cert.size()));
/home/kaworu/boost_1_69_0/libs/beast/example/common/server_certificate.hpp:        boost::asio::buffer(key.data(), key.size()),
/home/kaworu/boost_1_69_0/libs/beast/example/common/server_certificate.hpp:        boost::asio::ssl::context::file_format::pem);
/home/kaworu/boost_1_69_0/libs/beast/example/common/server_certificate.hpp:        boost::asio::buffer(dh.data(), dh.size()));
/home/kaworu/boost_1_69_0/libs/beast/example/common/session_alloc.hpp:    friend struct boost::asio::associated_executor;
/home/kaworu/boost_1_69_0/libs/beast/example/common/session_alloc.hpp:        using boost::asio::asio_handler_is_continuation;
/home/kaworu/boost_1_69_0/libs/beast/example/common/detect_ssl.hpp:        boost::asio::is_const_buffer_sequence<ConstBufferSequence>::value,
/home/kaworu/boost_1_69_0/libs/beast/example/common/detect_ssl.hpp:    if(boost::asio::buffer_size(buffers) < 1)
/home/kaworu/boost_1_69_0/libs/beast/example/common/detect_ssl.hpp:    boost::asio::buffer_copy(boost::asio::buffer(&v, 1), buffers);
/home/kaworu/boost_1_69_0/libs/beast/example/common/detect_ssl.hpp:    if(boost::asio::buffer_size(buffers) < 4)
/home/kaworu/boost_1_69_0/libs/beast/example/common/detect_ssl.hpp:        boost::asio::is_dynamic_buffer<DynamicBuffer>::value,
/home/kaworu/boost_1_69_0/libs/beast/example/common/detect_ssl.hpp:    manner equivalent to using `boost::asio::io_context::post`.
/home/kaworu/boost_1_69_0/libs/beast/example/common/detect_ssl.hpp:        boost::asio::is_dynamic_buffer<DynamicBuffer>::value,
/home/kaworu/boost_1_69_0/libs/beast/example/common/detect_ssl.hpp:    boost::asio::async_completion<
/home/kaworu/boost_1_69_0/libs/beast/example/common/detect_ssl.hpp:    // CompletionToken is boost::asio::use_future.
/home/kaworu/boost_1_69_0/libs/beast/example/common/detect_ssl.hpp:class detect_ssl_op : public boost::asio::coroutine
/home/kaworu/boost_1_69_0/libs/beast/example/common/detect_ssl.hpp:    boost::asio::executor_work_guard<
/home/kaworu/boost_1_69_0/libs/beast/example/common/detect_ssl.hpp:        boost::asio::associated_allocator_t<Handler>;
/home/kaworu/boost_1_69_0/libs/beast/example/common/detect_ssl.hpp:        return (boost::asio::get_associated_allocator)(handler_);
/home/kaworu/boost_1_69_0/libs/beast/example/common/detect_ssl.hpp:    using executor_type = boost::asio::associated_executor_t<
/home/kaworu/boost_1_69_0/libs/beast/example/common/detect_ssl.hpp:        return (boost::asio::get_associated_executor)(handler_, stream_.get_executor());
/home/kaworu/boost_1_69_0/libs/beast/example/common/detect_ssl.hpp:            boost::asio::post(
/home/kaworu/boost_1_69_0/libs/beast/example/cppcon2018/net.hpp:namespace net = boost::asio;                    // namespace asio
/home/kaworu/boost_1_69_0/libs/beast/example/echo-op/echo_op.cpp:    manner equivalent to using `boost::asio::io_context::post`.
/home/kaworu/boost_1_69_0/libs/beast/example/echo-op/echo_op.cpp:        boost::asio::executor_work_guard<
/home/kaworu/boost_1_69_0/libs/beast/example/echo-op/echo_op.cpp:        boost::asio::basic_streambuf<typename std::allocator_traits<
/home/kaworu/boost_1_69_0/libs/beast/example/echo-op/echo_op.cpp:            boost::asio::associated_allocator_t<Handler> >::
/home/kaworu/boost_1_69_0/libs/beast/example/echo-op/echo_op.cpp:                boost::asio::get_associated_allocator(handler))
/home/kaworu/boost_1_69_0/libs/beast/example/echo-op/echo_op.cpp:        boost::asio::associated_allocator_t<Handler>;
/home/kaworu/boost_1_69_0/libs/beast/example/echo-op/echo_op.cpp:        return (boost::asio::get_associated_allocator)(p_.handler());
/home/kaworu/boost_1_69_0/libs/beast/example/echo-op/echo_op.cpp:    using executor_type = boost::asio::associated_executor_t<
/home/kaworu/boost_1_69_0/libs/beast/example/echo-op/echo_op.cpp:        return (boost::asio::get_associated_executor)(
/home/kaworu/boost_1_69_0/libs/beast/example/echo-op/echo_op.cpp:            return boost::asio::async_read_until(p.stream, p.buffer, "\r", std::move(*this));
/home/kaworu/boost_1_69_0/libs/beast/example/echo-op/echo_op.cpp:            return boost::asio::async_write(p.stream,
/home/kaworu/boost_1_69_0/libs/beast/example/echo-op/echo_op.cpp:    boost::asio::async_completion<CompletionToken, void(boost::beast::error_code)> init{token};
/home/kaworu/boost_1_69_0/libs/beast/example/echo-op/echo_op.cpp:    // CompletionToken is boost::asio::use_future, or this might
/home/kaworu/boost_1_69_0/libs/beast/example/echo-op/echo_op.cpp:    using socket_type = boost::asio::ip::tcp::socket;
/home/kaworu/boost_1_69_0/libs/beast/example/echo-op/echo_op.cpp:    using endpoint_type = boost::asio::ip::tcp::endpoint;
/home/kaworu/boost_1_69_0/libs/beast/example/echo-op/echo_op.cpp:    boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/example/echo-op/echo_op.cpp:    boost::asio::ip::tcp::acceptor acceptor{ioc};
/home/kaworu/boost_1_69_0/libs/beast/example/echo-op/echo_op.cpp:    endpoint_type ep{boost::asio::ip::make_address("0.0.0.0"), 0};
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/client/sync-ssl/websocket_client_sync_ssl.cpp:using tcp = boost::asio::ip::tcp;               // from <boost/asio/ip/tcp.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/client/sync-ssl/websocket_client_sync_ssl.cpp:namespace ssl = boost::asio::ssl;               // from <boost/asio/ssl.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/client/sync-ssl/websocket_client_sync_ssl.cpp:        boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/client/sync-ssl/websocket_client_sync_ssl.cpp:        boost::asio::connect(ws.next_layer().next_layer(), results.begin(), results.end());
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/client/sync-ssl/websocket_client_sync_ssl.cpp:        ws.write(boost::asio::buffer(std::string(text)));
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/client/async/websocket_client_async.cpp:using tcp = boost::asio::ip::tcp;               // from <boost/asio/ip/tcp.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/client/async/websocket_client_async.cpp:    session(boost::asio::io_context& ioc)
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/client/async/websocket_client_async.cpp:        boost::asio::async_connect(
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/client/async/websocket_client_async.cpp:            boost::asio::buffer(text_),
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/client/async/websocket_client_async.cpp:    boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/client/coro-ssl/websocket_client_coro_ssl.cpp:using tcp = boost::asio::ip::tcp;               // from <boost/asio/ip/tcp.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/client/coro-ssl/websocket_client_coro_ssl.cpp:namespace ssl = boost::asio::ssl;               // from <boost/asio/ssl.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/client/coro-ssl/websocket_client_coro_ssl.cpp:    boost::asio::io_context& ioc,
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/client/coro-ssl/websocket_client_coro_ssl.cpp:    boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/client/coro-ssl/websocket_client_coro_ssl.cpp:    boost::asio::async_connect(ws.next_layer().next_layer(), results.begin(), results.end(), yield[ec]);
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/client/coro-ssl/websocket_client_coro_ssl.cpp:    ws.async_write(boost::asio::buffer(std::string(text)), yield[ec]);
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/client/coro-ssl/websocket_client_coro_ssl.cpp:    boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/client/coro-ssl/websocket_client_coro_ssl.cpp:    boost::asio::spawn(ioc, std::bind(
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/client/coro/websocket_client_coro.cpp:using tcp = boost::asio::ip::tcp;               // from <boost/asio/ip/tcp.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/client/coro/websocket_client_coro.cpp:    boost::asio::io_context& ioc,
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/client/coro/websocket_client_coro.cpp:    boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/client/coro/websocket_client_coro.cpp:    boost::asio::async_connect(ws.next_layer(), results.begin(), results.end(), yield[ec]);
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/client/coro/websocket_client_coro.cpp:    ws.async_write(boost::asio::buffer(std::string(text)), yield[ec]);
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/client/coro/websocket_client_coro.cpp:    boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/client/coro/websocket_client_coro.cpp:    boost::asio::spawn(ioc, std::bind(
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/client/sync/websocket_client_sync.cpp:using tcp = boost::asio::ip::tcp;               // from <boost/asio/ip/tcp.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/client/sync/websocket_client_sync.cpp:        boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/client/sync/websocket_client_sync.cpp:        boost::asio::connect(ws.next_layer(), results.begin(), results.end());
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/client/sync/websocket_client_sync.cpp:        ws.write(boost::asio::buffer(std::string(text)));
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/client/async-ssl/websocket_client_async_ssl.cpp:using tcp = boost::asio::ip::tcp;               // from <boost/asio/ip/tcp.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/client/async-ssl/websocket_client_async_ssl.cpp:namespace ssl = boost::asio::ssl;               // from <boost/asio/ssl.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/client/async-ssl/websocket_client_async_ssl.cpp:    session(boost::asio::io_context& ioc, ssl::context& ctx)
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/client/async-ssl/websocket_client_async_ssl.cpp:        boost::asio::async_connect(
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/client/async-ssl/websocket_client_async_ssl.cpp:            boost::asio::buffer(text_),
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/client/async-ssl/websocket_client_async_ssl.cpp:    boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/sync-ssl/websocket_server_sync_ssl.cpp:using tcp = boost::asio::ip::tcp;               // from <boost/asio/ip/tcp.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/sync-ssl/websocket_server_sync_ssl.cpp:namespace ssl = boost::asio::ssl;               // from <boost/asio/ssl.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/sync-ssl/websocket_server_sync_ssl.cpp:        auto const address = boost::asio::ip::make_address(argv[1]);
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/sync-ssl/websocket_server_sync_ssl.cpp:        boost::asio::io_context ioc{1};
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/stackless/websocket_server_stackless.cpp:using tcp = boost::asio::ip::tcp;               // from <boost/asio/ip/tcp.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/stackless/websocket_server_stackless.cpp:    : public boost::asio::coroutine
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/stackless/websocket_server_stackless.cpp:    boost::asio::strand<
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/stackless/websocket_server_stackless.cpp:        boost::asio::io_context::executor_type> strand_;
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/stackless/websocket_server_stackless.cpp:                boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/stackless/websocket_server_stackless.cpp:                    boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/stackless/websocket_server_stackless.cpp:                    boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/stackless/websocket_server_stackless.cpp:    : public boost::asio::coroutine
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/stackless/websocket_server_stackless.cpp:        boost::asio::io_context& ioc,
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/stackless/websocket_server_stackless.cpp:        acceptor_.set_option(boost::asio::socket_base::reuse_address(true), ec);
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/stackless/websocket_server_stackless.cpp:            boost::asio::socket_base::max_listen_connections, ec);
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/stackless/websocket_server_stackless.cpp:    auto const address = boost::asio::ip::make_address(argv[1]);
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/stackless/websocket_server_stackless.cpp:    boost::asio::io_context ioc{threads};
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/async/websocket_server_async.cpp:using tcp = boost::asio::ip::tcp;               // from <boost/asio/ip/tcp.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/async/websocket_server_async.cpp:    boost::asio::strand<
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/async/websocket_server_async.cpp:        boost::asio::io_context::executor_type> strand_;
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/async/websocket_server_async.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/async/websocket_server_async.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/async/websocket_server_async.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/async/websocket_server_async.cpp:        boost::asio::io_context& ioc,
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/async/websocket_server_async.cpp:        acceptor_.set_option(boost::asio::socket_base::reuse_address(true), ec);
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/async/websocket_server_async.cpp:            boost::asio::socket_base::max_listen_connections, ec);
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/async/websocket_server_async.cpp:    auto const address = boost::asio::ip::make_address(argv[1]);
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/async/websocket_server_async.cpp:    boost::asio::io_context ioc{threads};
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/coro-ssl/websocket_server_coro_ssl.cpp:using tcp = boost::asio::ip::tcp;               // from <boost/asio/ip/tcp.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/coro-ssl/websocket_server_coro_ssl.cpp:namespace ssl = boost::asio::ssl;               // from <boost/asio/ssl.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/coro-ssl/websocket_server_coro_ssl.cpp:    boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/coro-ssl/websocket_server_coro_ssl.cpp:    boost::asio::io_context& ioc,
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/coro-ssl/websocket_server_coro_ssl.cpp:    boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/coro-ssl/websocket_server_coro_ssl.cpp:    acceptor.set_option(boost::asio::socket_base::reuse_address(true), ec);
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/coro-ssl/websocket_server_coro_ssl.cpp:    acceptor.listen(boost::asio::socket_base::max_listen_connections, ec);
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/coro-ssl/websocket_server_coro_ssl.cpp:            boost::asio::spawn(
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/coro-ssl/websocket_server_coro_ssl.cpp:    auto const address = boost::asio::ip::make_address(argv[1]);
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/coro-ssl/websocket_server_coro_ssl.cpp:    boost::asio::io_context ioc{threads};
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/coro-ssl/websocket_server_coro_ssl.cpp:    boost::asio::spawn(ioc,
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/coro/websocket_server_coro.cpp:using tcp = boost::asio::ip::tcp;               // from <boost/asio/ip/tcp.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/coro/websocket_server_coro.cpp:do_session(tcp::socket& socket, boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/coro/websocket_server_coro.cpp:    boost::asio::io_context& ioc,
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/coro/websocket_server_coro.cpp:    boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/coro/websocket_server_coro.cpp:    acceptor.set_option(boost::asio::socket_base::reuse_address(true), ec);
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/coro/websocket_server_coro.cpp:    acceptor.listen(boost::asio::socket_base::max_listen_connections, ec);
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/coro/websocket_server_coro.cpp:            boost::asio::spawn(
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/coro/websocket_server_coro.cpp:    auto const address = boost::asio::ip::make_address(argv[1]);
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/coro/websocket_server_coro.cpp:    boost::asio::io_context ioc{threads};
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/coro/websocket_server_coro.cpp:    boost::asio::spawn(ioc,
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/sync/websocket_server_sync.cpp:using tcp = boost::asio::ip::tcp;               // from <boost/asio/ip/tcp.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/sync/websocket_server_sync.cpp:        auto const address = boost::asio::ip::make_address(argv[1]);
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/sync/websocket_server_sync.cpp:        boost::asio::io_context ioc{1};
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/stackless-ssl/websocket_server_stackless_ssl.cpp:using tcp = boost::asio::ip::tcp;               // from <boost/asio/ip/tcp.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/stackless-ssl/websocket_server_stackless_ssl.cpp:namespace ssl = boost::asio::ssl;               // from <boost/asio/ssl.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/stackless-ssl/websocket_server_stackless_ssl.cpp:    : public boost::asio::coroutine
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/stackless-ssl/websocket_server_stackless_ssl.cpp:    boost::asio::strand<
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/stackless-ssl/websocket_server_stackless_ssl.cpp:        boost::asio::io_context::executor_type> strand_;
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/stackless-ssl/websocket_server_stackless_ssl.cpp:                boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/stackless-ssl/websocket_server_stackless_ssl.cpp:                boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/stackless-ssl/websocket_server_stackless_ssl.cpp:                    boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/stackless-ssl/websocket_server_stackless_ssl.cpp:                    boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/stackless-ssl/websocket_server_stackless_ssl.cpp:    : public boost::asio::coroutine
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/stackless-ssl/websocket_server_stackless_ssl.cpp:        boost::asio::io_context& ioc,
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/stackless-ssl/websocket_server_stackless_ssl.cpp:        acceptor_.set_option(boost::asio::socket_base::reuse_address(true), ec);
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/stackless-ssl/websocket_server_stackless_ssl.cpp:            boost::asio::socket_base::max_listen_connections, ec);
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/stackless-ssl/websocket_server_stackless_ssl.cpp:    auto const address = boost::asio::ip::make_address(argv[1]);
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/stackless-ssl/websocket_server_stackless_ssl.cpp:    boost::asio::io_context ioc{threads};
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/fast/websocket_server_fast.cpp:using tcp = boost::asio::ip::tcp;               // from <boost/asio/ip/tcp.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/fast/websocket_server_fast.cpp:    boost::asio::io_context& ioc,
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/fast/websocket_server_fast.cpp:    boost::asio::strand<
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/fast/websocket_server_fast.cpp:        boost::asio::io_context::executor_type> strand_;
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/fast/websocket_server_fast.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/fast/websocket_server_fast.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/fast/websocket_server_fast.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/fast/websocket_server_fast.cpp:    boost::asio::strand<
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/fast/websocket_server_fast.cpp:        boost::asio::io_context::executor_type> strand_;
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/fast/websocket_server_fast.cpp:        boost::asio::io_context& ioc,
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/fast/websocket_server_fast.cpp:        acceptor_.set_option(boost::asio::socket_base::reuse_address(true), ec);
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/fast/websocket_server_fast.cpp:            boost::asio::socket_base::max_listen_connections, ec);
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/fast/websocket_server_fast.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/fast/websocket_server_fast.cpp:do_coro_session(tcp::socket& socket, boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/fast/websocket_server_fast.cpp:    boost::asio::io_context& ioc,
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/fast/websocket_server_fast.cpp:    boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/fast/websocket_server_fast.cpp:    acceptor.set_option(boost::asio::socket_base::reuse_address(true), ec);
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/fast/websocket_server_fast.cpp:    acceptor.listen(boost::asio::socket_base::max_listen_connections, ec);
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/fast/websocket_server_fast.cpp:        boost::asio::spawn(
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/fast/websocket_server_fast.cpp:    auto const address = boost::asio::ip::make_address(argv[1]);
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/fast/websocket_server_fast.cpp:    boost::asio::io_context ioc{threads};
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/fast/websocket_server_fast.cpp:    boost::asio::spawn(ioc,
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/async-ssl/websocket_server_async_ssl.cpp:using tcp = boost::asio::ip::tcp;               // from <boost/asio/ip/tcp.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/async-ssl/websocket_server_async_ssl.cpp:namespace ssl = boost::asio::ssl;               // from <boost/asio/ssl.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/async-ssl/websocket_server_async_ssl.cpp:    boost::asio::strand<
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/async-ssl/websocket_server_async_ssl.cpp:        boost::asio::io_context::executor_type> strand_;
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/async-ssl/websocket_server_async_ssl.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/async-ssl/websocket_server_async_ssl.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/async-ssl/websocket_server_async_ssl.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/async-ssl/websocket_server_async_ssl.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/async-ssl/websocket_server_async_ssl.cpp:        boost::asio::io_context& ioc,
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/async-ssl/websocket_server_async_ssl.cpp:        acceptor_.set_option(boost::asio::socket_base::reuse_address(true), ec);
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/async-ssl/websocket_server_async_ssl.cpp:            boost::asio::socket_base::max_listen_connections, ec);
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/async-ssl/websocket_server_async_ssl.cpp:    auto const address = boost::asio::ip::make_address(argv[1]);
/home/kaworu/boost_1_69_0/libs/beast/example/websocket/server/async-ssl/websocket_server_async_ssl.cpp:    boost::asio::io_context ioc{threads};
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:using tcp = boost::asio::ip::tcp;               // from <boost/asio/ip/tcp.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:namespace ssl = boost::asio::ssl;               // from <boost/asio/ssl.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:    boost::asio::strand<
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:        boost::asio::io_context::executor_type> strand_;
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:    boost::asio::steady_timer timer_;
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:    websocket_session(boost::asio::io_context& ioc)
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:        if(ec == boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:        if(ec && ec != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:                    boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:        if(ec == boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:        if(ec == boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:        if(ec == boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:        if(ec == boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:        if(ec == boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:                        boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:    boost::asio::steady_timer timer_;
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:    boost::asio::strand<
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:        boost::asio::io_context::executor_type> strand_;
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:        boost::asio::io_context& ioc,
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:        if(ec && ec != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:        if(ec == boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:        if(ec == boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:    boost::asio::strand<
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:        boost::asio::io_context::executor_type> strand_;
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:            return boost::asio::post(
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:                boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:        // will complete with boost::asio::error::operation_aborted
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:    boost::asio::strand<
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:        boost::asio::io_context::executor_type> strand_;
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:            return boost::asio::post(
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:                boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:        if(ec == boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:        if(ec == boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:    boost::asio::strand<
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:        boost::asio::io_context::executor_type> strand_;
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:        boost::asio::io_context& ioc,
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:        acceptor_.set_option(boost::asio::socket_base::reuse_address(true), ec);
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:            boost::asio::socket_base::max_listen_connections, ec);
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:    auto const address = boost::asio::ip::make_address(argv[1]);
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:    boost::asio::io_context ioc{threads};
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server-flex/advanced_server_flex.cpp:    boost::asio::signal_set signals(ioc, SIGINT, SIGTERM);
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server/advanced_server.cpp:using tcp = boost::asio::ip::tcp;               // from <boost/asio/ip/tcp.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server/advanced_server.cpp:    boost::asio::strand<
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server/advanced_server.cpp:        boost::asio::io_context::executor_type> strand_;
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server/advanced_server.cpp:    boost::asio::steady_timer timer_;
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server/advanced_server.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server/advanced_server.cpp:        if(ec == boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server/advanced_server.cpp:        if(ec && ec != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server/advanced_server.cpp:                    boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server/advanced_server.cpp:                // will complete with boost::asio::error::operation_aborted
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server/advanced_server.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server/advanced_server.cpp:        if(ec == boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server/advanced_server.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server/advanced_server.cpp:        if(ec == boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server/advanced_server.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server/advanced_server.cpp:        if(ec == boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server/advanced_server.cpp:                        boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server/advanced_server.cpp:    boost::asio::strand<
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server/advanced_server.cpp:        boost::asio::io_context::executor_type> strand_;
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server/advanced_server.cpp:    boost::asio::steady_timer timer_;
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server/advanced_server.cpp:            return boost::asio::post(
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server/advanced_server.cpp:                boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server/advanced_server.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server/advanced_server.cpp:        if(ec && ec != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server/advanced_server.cpp:            // will complete with boost::asio::error::operation_aborted
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server/advanced_server.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server/advanced_server.cpp:        if(ec == boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server/advanced_server.cpp:        if(ec == boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server/advanced_server.cpp:        boost::asio::io_context& ioc,
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server/advanced_server.cpp:        acceptor_.set_option(boost::asio::socket_base::reuse_address(true), ec);
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server/advanced_server.cpp:            boost::asio::socket_base::max_listen_connections, ec);
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server/advanced_server.cpp:    auto const address = boost::asio::ip::make_address(argv[1]);
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server/advanced_server.cpp:    boost::asio::io_context ioc{threads};
/home/kaworu/boost_1_69_0/libs/beast/example/advanced/server/advanced_server.cpp:    boost::asio::signal_set signals(ioc, SIGINT, SIGTERM);
/home/kaworu/boost_1_69_0/libs/beast/example/doc/http_examples.hpp:        boost::asio::is_dynamic_buffer<DynamicBuffer>::value,
/home/kaworu/boost_1_69_0/libs/beast/example/doc/http_examples.hpp:        boost::asio::is_dynamic_buffer<DynamicBuffer>::value,
/home/kaworu/boost_1_69_0/libs/beast/example/doc/http_examples.hpp:    // ambiguous function error (from boost::asio::read). Another
/home/kaworu/boost_1_69_0/libs/beast/example/doc/http_examples.hpp:            boost::asio::buffer(buffer, sizeof(buffer)), ec);
/home/kaworu/boost_1_69_0/libs/beast/example/doc/http_examples.hpp:        if(ec == boost::asio::error::eof)
/home/kaworu/boost_1_69_0/libs/beast/example/doc/http_examples.hpp:        boost::asio::is_dynamic_buffer<DynamicBuffer>::value,
/home/kaworu/boost_1_69_0/libs/beast/example/doc/http_examples.hpp:        boost::asio::is_dynamic_buffer<DynamicBuffer>::value,
/home/kaworu/boost_1_69_0/libs/beast/example/doc/http_examples.hpp:        for(auto it = boost::asio::buffer_sequence_begin(buffers);
/home/kaworu/boost_1_69_0/libs/beast/example/doc/http_examples.hpp:            it != boost::asio::buffer_sequence_end(buffers); ++it)
/home/kaworu/boost_1_69_0/libs/beast/example/doc/http_examples.hpp:            boost::asio::const_buffer const buffer = *it;
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/sync-ssl/http_client_sync_ssl.cpp:using tcp = boost::asio::ip::tcp;       // from <boost/asio/ip/tcp.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/sync-ssl/http_client_sync_ssl.cpp:namespace ssl = boost::asio::ssl;       // from <boost/asio/ssl.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/sync-ssl/http_client_sync_ssl.cpp:        boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/sync-ssl/http_client_sync_ssl.cpp:            boost::system::error_code ec{static_cast<int>(::ERR_get_error()), boost::asio::error::get_ssl_category()};
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/sync-ssl/http_client_sync_ssl.cpp:        boost::asio::connect(stream.next_layer(), results.begin(), results.end());
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/sync-ssl/http_client_sync_ssl.cpp:        if(ec == boost::asio::error::eof)
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/async/http_client_async.cpp:using tcp = boost::asio::ip::tcp;       // from <boost/asio/ip/tcp.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/async/http_client_async.cpp:    session(boost::asio::io_context& ioc)
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/async/http_client_async.cpp:        boost::asio::async_connect(
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/async/http_client_async.cpp:    boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/coro-ssl/http_client_coro_ssl.cpp:using tcp = boost::asio::ip::tcp;       // from <boost/asio/ip/tcp.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/coro-ssl/http_client_coro_ssl.cpp:namespace ssl = boost::asio::ssl;       // from <boost/asio/ssl.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/coro-ssl/http_client_coro_ssl.cpp:    boost::asio::io_context& ioc,
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/coro-ssl/http_client_coro_ssl.cpp:    boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/coro-ssl/http_client_coro_ssl.cpp:        ec.assign(static_cast<int>(::ERR_get_error()), boost::asio::error::get_ssl_category());
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/coro-ssl/http_client_coro_ssl.cpp:    boost::asio::async_connect(stream.next_layer(), results.begin(), results.end(), yield[ec]);
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/coro-ssl/http_client_coro_ssl.cpp:    if(ec == boost::asio::error::eof)
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/coro-ssl/http_client_coro_ssl.cpp:    boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/coro-ssl/http_client_coro_ssl.cpp:    boost::asio::spawn(ioc, std::bind(
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/coro/http_client_coro.cpp:using tcp = boost::asio::ip::tcp;       // from <boost/asio/ip/tcp.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/coro/http_client_coro.cpp:    boost::asio::io_context& ioc,
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/coro/http_client_coro.cpp:    boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/coro/http_client_coro.cpp:    boost::asio::async_connect(socket, results.begin(), results.end(), yield[ec]);
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/coro/http_client_coro.cpp:    boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/coro/http_client_coro.cpp:    boost::asio::spawn(ioc, std::bind(
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/sync/http_client_sync.cpp:using tcp = boost::asio::ip::tcp;       // from <boost/asio/ip/tcp.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/sync/http_client_sync.cpp:        boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/sync/http_client_sync.cpp:        boost::asio::connect(socket, results.begin(), results.end());
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/async-ssl/http_client_async_ssl.cpp:using tcp = boost::asio::ip::tcp;       // from <boost/asio/ip/tcp.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/async-ssl/http_client_async_ssl.cpp:namespace ssl = boost::asio::ssl;       // from <boost/asio/ssl.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/async-ssl/http_client_async_ssl.cpp:    session(boost::asio::io_context& ioc, ssl::context& ctx)
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/async-ssl/http_client_async_ssl.cpp:            boost::system::error_code ec{static_cast<int>(::ERR_get_error()), boost::asio::error::get_ssl_category()};
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/async-ssl/http_client_async_ssl.cpp:        boost::asio::async_connect(
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/async-ssl/http_client_async_ssl.cpp:        if(ec == boost::asio::error::eof)
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/async-ssl/http_client_async_ssl.cpp:    boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/crawl/http_crawl.cpp:using tcp = boost::asio::ip::tcp;       // from <boost/asio/ip/tcp.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/crawl/http_crawl.cpp:    boost::asio::io_context& ioc_;
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/crawl/http_crawl.cpp:    boost::asio::strand<
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/crawl/http_crawl.cpp:        boost::asio::io_context::executor_type> strand_;
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/crawl/http_crawl.cpp:    crawl_report(boost::asio::io_context& ioc)
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/crawl/http_crawl.cpp:        boost::asio::post(
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/crawl/http_crawl.cpp:    boost::asio::steady_timer timer_;
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/crawl/http_crawl.cpp:    boost::asio::strand<
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/crawl/http_crawl.cpp:        boost::asio::io_context::executor_type> strand_;
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/crawl/http_crawl.cpp:        boost::asio::io_context& ioc)
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/crawl/http_crawl.cpp:        if(ec && ec != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/crawl/http_crawl.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/crawl/http_crawl.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/crawl/http_crawl.cpp:        boost::asio::async_connect(
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/crawl/http_crawl.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/crawl/http_crawl.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/crawl/http_crawl.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/crawl/http_crawl.cpp:    boost::asio::io_context ioc{1};
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/crawl/http_crawl.cpp:    auto work = boost::asio::make_work_guard(ioc);
/home/kaworu/boost_1_69_0/libs/beast/example/http/client/crawl/http_crawl.cpp:            boost::asio::io_context ioc{1};
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/small/http_server_small.cpp:namespace ip = boost::asio::ip;         // from <boost/asio.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/small/http_server_small.cpp:using tcp = boost::asio::ip::tcp;       // from <boost/asio.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/small/http_server_small.cpp:    boost::asio::basic_waitable_timer<std::chrono::steady_clock> deadline_{
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/small/http_server_small.cpp:        auto const address = boost::asio::ip::make_address(argv[1]);
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/small/http_server_small.cpp:        boost::asio::io_context ioc{1};
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/sync-ssl/http_server_sync_ssl.cpp:using tcp = boost::asio::ip::tcp;       // from <boost/asio/ip/tcp.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/sync-ssl/http_server_sync_ssl.cpp:namespace ssl = boost::asio::ssl;       // from <boost/asio/ssl.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/sync-ssl/http_server_sync_ssl.cpp:        auto const address = boost::asio::ip::make_address(argv[1]);
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/sync-ssl/http_server_sync_ssl.cpp:        boost::asio::io_context ioc{1};
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/stackless/http_server_stackless.cpp:using tcp = boost::asio::ip::tcp;       // from <boost/asio/ip/tcp.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/stackless/http_server_stackless.cpp:    : public boost::asio::coroutine
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/stackless/http_server_stackless.cpp:                boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/stackless/http_server_stackless.cpp:    boost::asio::strand<
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/stackless/http_server_stackless.cpp:        boost::asio::io_context::executor_type> strand_;
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/stackless/http_server_stackless.cpp:                    boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/stackless/http_server_stackless.cpp:    : public boost::asio::coroutine
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/stackless/http_server_stackless.cpp:        boost::asio::io_context& ioc,
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/stackless/http_server_stackless.cpp:        acceptor_.set_option(boost::asio::socket_base::reuse_address(true), ec);
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/stackless/http_server_stackless.cpp:        acceptor_.listen(boost::asio::socket_base::max_listen_connections, ec);
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/stackless/http_server_stackless.cpp:    auto const address = boost::asio::ip::make_address(argv[1]);
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/stackless/http_server_stackless.cpp:    boost::asio::io_context ioc{threads};
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/async/http_server_async.cpp:using tcp = boost::asio::ip::tcp;       // from <boost/asio/ip/tcp.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/async/http_server_async.cpp:                boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/async/http_server_async.cpp:    boost::asio::strand<
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/async/http_server_async.cpp:        boost::asio::io_context::executor_type> strand_;
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/async/http_server_async.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/async/http_server_async.cpp:        boost::asio::io_context& ioc,
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/async/http_server_async.cpp:        acceptor_.set_option(boost::asio::socket_base::reuse_address(true), ec);
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/async/http_server_async.cpp:            boost::asio::socket_base::max_listen_connections, ec);
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/async/http_server_async.cpp:    auto const address = boost::asio::ip::make_address(argv[1]);
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/async/http_server_async.cpp:    boost::asio::io_context ioc{threads};
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/coro-ssl/http_server_coro_ssl.cpp:using tcp = boost::asio::ip::tcp;       // from <boost/asio/ip/tcp.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/coro-ssl/http_server_coro_ssl.cpp:namespace ssl = boost::asio::ssl;       // from <boost/asio/ssl.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/coro-ssl/http_server_coro_ssl.cpp:    boost::asio::yield_context yield_;
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/coro-ssl/http_server_coro_ssl.cpp:        boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/coro-ssl/http_server_coro_ssl.cpp:    boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/coro-ssl/http_server_coro_ssl.cpp:    boost::asio::io_context& ioc,
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/coro-ssl/http_server_coro_ssl.cpp:    boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/coro-ssl/http_server_coro_ssl.cpp:    acceptor.set_option(boost::asio::socket_base::reuse_address(true), ec);
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/coro-ssl/http_server_coro_ssl.cpp:    acceptor.listen(boost::asio::socket_base::max_listen_connections, ec);
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/coro-ssl/http_server_coro_ssl.cpp:            boost::asio::spawn(
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/coro-ssl/http_server_coro_ssl.cpp:    auto const address = boost::asio::ip::make_address(argv[1]);
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/coro-ssl/http_server_coro_ssl.cpp:    boost::asio::io_context ioc{threads};
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/coro-ssl/http_server_coro_ssl.cpp:    boost::asio::spawn(ioc,
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/coro/http_server_coro.cpp:using tcp = boost::asio::ip::tcp;       // from <boost/asio/ip/tcp.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/coro/http_server_coro.cpp:    boost::asio::yield_context yield_;
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/coro/http_server_coro.cpp:        boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/coro/http_server_coro.cpp:    boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/coro/http_server_coro.cpp:    boost::asio::io_context& ioc,
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/coro/http_server_coro.cpp:    boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/coro/http_server_coro.cpp:    acceptor.set_option(boost::asio::socket_base::reuse_address(true), ec);
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/coro/http_server_coro.cpp:    acceptor.listen(boost::asio::socket_base::max_listen_connections, ec);
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/coro/http_server_coro.cpp:            boost::asio::spawn(
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/coro/http_server_coro.cpp:    auto const address = boost::asio::ip::make_address(argv[1]);
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/coro/http_server_coro.cpp:    boost::asio::io_context ioc{threads};
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/coro/http_server_coro.cpp:    boost::asio::spawn(ioc,
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/sync/http_server_sync.cpp:using tcp = boost::asio::ip::tcp;       // from <boost/asio/ip/tcp.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/sync/http_server_sync.cpp:        auto const address = boost::asio::ip::make_address(argv[1]);
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/sync/http_server_sync.cpp:        boost::asio::io_context ioc{1};
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/flex/http_server_flex.cpp:using tcp = boost::asio::ip::tcp;       // from <boost/asio/ip/tcp.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/flex/http_server_flex.cpp:namespace ssl = boost::asio::ssl;       // from <boost/asio/ssl.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/flex/http_server_flex.cpp:                boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/flex/http_server_flex.cpp:    boost::asio::strand<
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/flex/http_server_flex.cpp:        boost::asio::io_context::executor_type> strand_;
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/flex/http_server_flex.cpp:        boost::asio::io_context& ioc,
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/flex/http_server_flex.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/flex/http_server_flex.cpp:    boost::asio::strand<
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/flex/http_server_flex.cpp:        boost::asio::io_context::executor_type> strand_;
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/flex/http_server_flex.cpp:    boost::asio::strand<
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/flex/http_server_flex.cpp:        boost::asio::io_context::executor_type> strand_;
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/flex/http_server_flex.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/flex/http_server_flex.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/flex/http_server_flex.cpp:    boost::asio::strand<
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/flex/http_server_flex.cpp:        boost::asio::io_context::executor_type> strand_;
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/flex/http_server_flex.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/flex/http_server_flex.cpp:    boost::asio::strand<
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/flex/http_server_flex.cpp:        boost::asio::io_context::executor_type> strand_;
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/flex/http_server_flex.cpp:        boost::asio::io_context& ioc,
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/flex/http_server_flex.cpp:        acceptor_.set_option(boost::asio::socket_base::reuse_address(true), ec);
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/flex/http_server_flex.cpp:            boost::asio::socket_base::max_listen_connections, ec);
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/flex/http_server_flex.cpp:    auto const address = boost::asio::ip::make_address(argv[1]);
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/flex/http_server_flex.cpp:    boost::asio::io_context ioc{threads};
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/stackless-ssl/http_server_stackless_ssl.cpp:using tcp = boost::asio::ip::tcp;       // from <boost/asio/ip/tcp.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/stackless-ssl/http_server_stackless_ssl.cpp:namespace ssl = boost::asio::ssl;       // from <boost/asio/ssl.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/stackless-ssl/http_server_stackless_ssl.cpp:    : public boost::asio::coroutine
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/stackless-ssl/http_server_stackless_ssl.cpp:                boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/stackless-ssl/http_server_stackless_ssl.cpp:    boost::asio::strand<
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/stackless-ssl/http_server_stackless_ssl.cpp:        boost::asio::io_context::executor_type> strand_;
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/stackless-ssl/http_server_stackless_ssl.cpp:                boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/stackless-ssl/http_server_stackless_ssl.cpp:                    boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/stackless-ssl/http_server_stackless_ssl.cpp:                boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/stackless-ssl/http_server_stackless_ssl.cpp:    : public boost::asio::coroutine
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/stackless-ssl/http_server_stackless_ssl.cpp:        boost::asio::io_context& ioc,
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/stackless-ssl/http_server_stackless_ssl.cpp:        acceptor_.set_option(boost::asio::socket_base::reuse_address(true), ec);
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/stackless-ssl/http_server_stackless_ssl.cpp:            boost::asio::socket_base::max_listen_connections, ec);
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/stackless-ssl/http_server_stackless_ssl.cpp:    auto const address = boost::asio::ip::make_address(argv[1]);
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/stackless-ssl/http_server_stackless_ssl.cpp:    boost::asio::io_context ioc{threads};
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/fast/http_server_fast.cpp:namespace ip = boost::asio::ip;         // from <boost/asio.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/fast/http_server_fast.cpp:using tcp = boost::asio::ip::tcp;       // from <boost/asio.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/fast/http_server_fast.cpp:    boost::asio::basic_waitable_timer<std::chrono::steady_clock> request_deadline_{
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/fast/http_server_fast.cpp:        auto const address = boost::asio::ip::make_address(argv[1]);
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/fast/http_server_fast.cpp:        boost::asio::io_context ioc{1};
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/async-ssl/http_server_async_ssl.cpp:using tcp = boost::asio::ip::tcp;       // from <boost/asio/ip/tcp.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/async-ssl/http_server_async_ssl.cpp:namespace ssl = boost::asio::ssl;       // from <boost/asio/ssl.hpp>
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/async-ssl/http_server_async_ssl.cpp:                boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/async-ssl/http_server_async_ssl.cpp:    boost::asio::strand<
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/async-ssl/http_server_async_ssl.cpp:        boost::asio::io_context::executor_type> strand_;
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/async-ssl/http_server_async_ssl.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/async-ssl/http_server_async_ssl.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/async-ssl/http_server_async_ssl.cpp:            boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/async-ssl/http_server_async_ssl.cpp:        boost::asio::io_context& ioc,
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/async-ssl/http_server_async_ssl.cpp:        acceptor_.set_option(boost::asio::socket_base::reuse_address(true), ec);
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/async-ssl/http_server_async_ssl.cpp:            boost::asio::socket_base::max_listen_connections, ec);
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/async-ssl/http_server_async_ssl.cpp:    auto const address = boost::asio::ip::make_address(argv[1]);
/home/kaworu/boost_1_69_0/libs/beast/example/http/server/async-ssl/http_server_async_ssl.cpp:    boost::asio::io_context ioc{threads};
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/08_design/3_websocket_zaphoyd.qbk:to a `boost::asio::ip::tcp::socket`. Callers can put such objects in a
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/08_design/3_websocket_zaphoyd.qbk:__DynamicBuffer__ (modeled after `boost::asio::streambuf`).
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/08_design/3_websocket_zaphoyd.qbk:the data finishes sending, in a manner identical to `boost::asio::async_write`.
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/08_design/3_websocket_zaphoyd.qbk:already in `boost::asio` for receiving incoming connections resolving
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/08_design/3_websocket_zaphoyd.qbk:`boost::asio::ssl::stream`) is connected, the `beast::websocket::stream`
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/08_design/4_faq.qbk:    `boost::asio::ssl::stream` that you have already set up through Asio.
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/08_design/4_faq.qbk:    (for example, a `boost::asio::ip::tcp::socket` or a
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/08_design/4_faq.qbk:    `boost::asio::ssl::stream`). You establish your TLS connection using the
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/03_core/1_asio.qbk:    [@boost:/doc/html/boost_asio/reference/ip__tcp/socket.html `boost::asio::ip::tcp::socket`]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/03_core/1_asio.qbk:    [@boost:/doc/html/boost_asio/reference/ssl__stream.html `boost::asio::ssl::stream<boost::asio::ip::tcp::socket>`]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/03_core/1_asio.qbk:    [link beast.ref.boost__beast__websocket__stream `websocket::stream<boost::asio::ip::tcp::socket>`]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:[heading Synopsis]```using const_buffers_type = boost::asio::const_buffer;```[heading Description][endsect][section:consume basic_flat_buffer::consume][indexterm2 consume..basic_flat_buffer]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:[heading Synopsis]```using mutable_buffers_type = boost::asio::mutable_buffer;```[heading Description][endsect][section:operator_eq_ basic_flat_buffer::operator=][indexterm2 operator=..basic_flat_buffer]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:[heading Synopsis]Defined in header [include_file boost/beast/experimental/core/timeout_socket.hpp]```template<    class Protocol,    class Executor = boost::asio::executor>class basic_timeout_socket```[heading Types][table [[Name][Description]]  [    [[link beast.ref.boost__beast__basic_timeout_socket.executor_type [*executor_type]]]    [      The type of the executor associated with the object.     ]  ]  [    [[link beast.ref.boost__beast__basic_timeout_socket.lowest_layer_type [*lowest_layer_type]]]    [      The type of the lowest layer.     ]  ]  [    [[link beast.ref.boost__beast__basic_timeout_socket.next_layer_type [*next_layer_type]]]    [      The type of the next layer.     ]  ]  [    [[link beast.ref.boost__beast__basic_timeout_socket.protocol_type [*protocol_type]]]    [      The protocol used by the stream.     ]  ]][heading Member Functions][table [[Name][Description]]  [    [[link beast.ref.boost__beast__basic_timeout_socket.async_read_some [*async_read_some]]]    [      Start an asynchronous read.     ]  ]  [    [[link beast.ref.boost__beast__basic_timeout_socket.async_write_some [*async_write_some]]]    [      Start an asynchronous write.     ]  ]  [    [[link beast.ref.boost__beast__basic_timeout_socket.basic_timeout_socket [*basic_timeout_socket]]]    [      Constructor.     ]  ]  [    [[link beast.ref.boost__beast__basic_timeout_socket.get_executor [*get_executor]]]    [      Get the executor associated with the object.     ]  ]  [    [[link beast.ref.boost__beast__basic_timeout_socket.lowest_layer [*lowest_layer]]]    [      Get a reference to the lowest layer.     ]  ]  [    [[link beast.ref.boost__beast__basic_timeout_socket.next_layer [*next_layer]]]    [      Get a reference to the next layer.     ]  ]][heading Description]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using boost::asio::io\_context::post().   ]]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using boost::asio::io\_context::post().   ]]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:[heading Synopsis]```using next_layer_type = boost::asio::basic_stream_socket< Protocol >;```[heading Description][endsect][section:protocol_type basic_timeout_socket::protocol_type][indexterm2 protocol_type..basic_timeout_socket]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:      boost::asio::post(
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:              boost::asio::error::operation_aborted, 0));
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:The use-case for this class is different than that of the `boost::asio::buffered_readstream`. It is designed to facilitate the use of `boost::asio::read_until`, and to allow buffers acquired during detection of handshakes to be made transparently available to callers. A hypothetical implementation of the buffered version of `boost::asio::ssl::stream::async_handshake` could make use of this wrapper.
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:* Transparently leave untouched input acquired in calls to `boost::asio::read_until` behind for subsequent callers.
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:          boost::asio::read_until(
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post`.   ]]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post`.   ]]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:If every buffer sequence in the view is a [*MutableBufferSequence], then `value_type` will be `boost::asio::mutable_buffer`. Otherwise, `value_type` will be `boost::asio::const_buffer`. 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:[heading Synopsis]Defined in header [include_file boost/beast/core/buffers_prefix.hpp]```template<    class ``[link beast.concepts.BufferSequence [*BufferSequence]]``>std::conditional< boost::asio::is_mutable_buffer_sequence< BufferSequence >::value, boost::asio::mutable_buffer, boost::asio::const_buffer >::typebuffers_front(    BufferSequence const& buffers);```[heading Description]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:```boost::asio::const_buffer``[link beast.ref.boost__beast__buffers_prefix.overload1 buffers_prefix]``(    std::size_t size,    boost::asio::const_buffer buffer);  ``[''''&raquo;''' [link beast.ref.boost__beast__buffers_prefix.overload1 more...]]`````
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:```boost::asio::mutable_buffer``[link beast.ref.boost__beast__buffers_prefix.overload2 buffers_prefix]``(    std::size_t size,    boost::asio::mutable_buffer buffer);  ``[''''&raquo;''' [link beast.ref.boost__beast__buffers_prefix.overload2 more...]]`````
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:[heading Synopsis]Defined in header [include_file boost/beast/core/buffers_prefix.hpp]```boost::asio::const_bufferbuffers_prefix(    std::size_t size,    boost::asio::const_buffer buffer);```[heading Description]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:[heading Synopsis]Defined in header [include_file boost/beast/core/buffers_prefix.hpp]```boost::asio::mutable_bufferbuffers_prefix(    std::size_t size,    boost::asio::mutable_buffer buffer);```[heading Description]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:[heading Synopsis]```using value_type = typename std::conditional< std::is_convertible< typename std::iterator_traits< iter_type >::value_type, boost::asio::mutable_buffer >::value, boost::asio::mutable_buffer, boost::asio::const_buffer >::type;```[heading Description][endsect]Convenience header [include_file boost/beast/core.hpp][endsect][section:boost__beast__buffers_suffix buffers_suffix]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:      while(boost::asio::buffer_size(bs) > 0)
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:If the buffers in the underlying sequence are convertible to `boost::asio::mutable_buffer`, then this type will be `boost::asio::mutable_buffer`, else this type will be `boost::asio::const_buffer`. 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:[heading Synopsis]```using const_buffers_type = boost::asio::const_buffer;```[heading Description]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:[heading Synopsis]```using mutable_buffers_type = boost::asio::mutable_buffer;```[heading Description]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:[heading Synopsis]```using const_buffers_type = boost::asio::const_buffer;```[heading Description]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:[heading Synopsis]```using mutable_buffers_type = boost::asio::mutable_buffer;```[heading Description]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:This wrapper flattens writes for buffer sequences having length greater than 1 and total size below a predefined amount, using a dynamic memory allocation. It is primarily designed to overcome a performance limitation of the current version of `boost::asio::ssl::stream`, which does not use OpenSSL's scatter/gather interface for its low-level read some and write some operations.
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:* `boost::asio::read`, `boost::asio::async_read`
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:* `boost::asio::write`, `boost::asio::async_write`
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:* `boost::asio::read_until`, `boost::asio::async_read_until`
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:[heading Template Parameters][table [[Type][Description]]  [[`NextLayer`][    The type representing the next layer, to which data will be read and written during operations. For synchronous operations, the type must support the SyncStream concept. For asynchronous operations, the type must support the AsyncStream concept. This type will usually be some variation of `boost::asio::ssl::stream`.  ]]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:The `read_some` operation may not read all of the requested number of bytes. Consider using the function `boost::asio::async_read` if you need to ensure that the requested amount of data is read before the asynchronous operation completes. 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:The `async_write_some` operation may not transmit all of the data to the peer. Consider using the function `boost::asio::async_write` if you need to ensure that all data is written before the asynchronous operation completes. 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:The `read_some` operation may not read all of the requested number of bytes. Consider using the function `boost::asio::read` if you need to ensure that the requested amount of data is read before the blocking operation completes. 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:The `read_some` operation may not read all of the requested number of bytes. Consider using the function `boost::asio::read` if you need to ensure that the requested amount of data is read before the blocking operation completes. 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:The `write_some` operation may not transmit all of the data to the peer. Consider using the function `boost::asio::write` if you need to ensure that all data is written before the blocking operation completes. 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:The `write_some` operation may not transmit all of the data to the peer. Consider using the function `boost::asio::write` if you need to ensure that all data is written before the blocking operation completes. 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:      boost::asio::post(
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:      using executor_type = boost::asio::io_context::executor_type;
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:If the stream returns the error `boost::asio::error::eof` indicating the end of file during a read, the error returned from this function will be:
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post`.  ]]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:If the stream returns the error `boost::asio::error::eof` indicating the end of file during a read, the error returned from this function will be:
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post`.   ]]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:If the stream returns the error `boost::asio::error::eof` indicating the end of file during a read, the error returned from this function will be:
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post`.  ]]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:If the stream returns the error `boost::asio::error::eof` indicating the end of file during a read, the error returned from this function will be:
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post`.  ]]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post`.  ]]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post`.  ]]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post`.  ]]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post`.  ]]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post`.  ]]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:[section:const_buffers_type http::basic_file_body::writer::const_buffers_type][indexterm2 const_buffers_type..http::basic_file_body::writer][heading Synopsis]```using const_buffers_type = boost::asio::const_buffer;```[heading Description][endsect][section:get http::basic_file_body::writer::get][indexterm2 get..http::basic_file_body::writer][heading Synopsis]```boost::optional< std::pair< const_buffers_type, bool > >get(    error_code& ec);```[heading Description][endsect][section:init http::basic_file_body::writer::init][indexterm2 init..http::basic_file_body::writer][heading Synopsis]```voidinit(    error_code& ec);```[heading Description][endsect][section:writer http::basic_file_body::writer::writer][indexterm2 writer..http::basic_file_body::writer][heading Synopsis]```template<    bool isRequest,    class ``[link beast.concepts.Fields [*Fields]]``>writer(    header< isRequest, Fields >& h,    value_type& b);```[heading Description][endsect]Convenience header [include_file boost/beast/http.hpp][endsect][section:boost__beast__http__basic_parser http::basic_parser]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:This is typically called when a read from the underlying stream object sets the error code to `boost::asio::error::eof`.
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:  boost::asio::write(stream, chunk_crlf{});
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:  boost::asio::write(stream, chunk_header{1024, "x"});
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:[heading Synopsis]Defined in header [include_file boost/beast/http/error.hpp]```enum error```[indexterm2 end_of_stream..http::error][indexterm2 partial_message..http::error][indexterm2 need_more..http::error][indexterm2 unexpected_body..http::error][indexterm2 need_buffer..http::error][indexterm2 end_of_chunk..http::error][indexterm2 buffer_overflow..http::error][indexterm2 header_limit..http::error][indexterm2 body_limit..http::error][indexterm2 bad_alloc..http::error][indexterm2 bad_line_ending..http::error][indexterm2 bad_method..http::error][indexterm2 bad_target..http::error][indexterm2 bad_version..http::error][indexterm2 bad_status..http::error][indexterm2 bad_reason..http::error][indexterm2 bad_field..http::error][indexterm2 bad_value..http::error][indexterm2 bad_content_length..http::error][indexterm2 bad_transfer_encoding..http::error][indexterm2 bad_chunk..http::error][indexterm2 bad_chunk_extension..http::error][indexterm2 bad_obs_fold..http::error][heading Values][table [[Name][Description]]  [[[^end_of_stream]][The end of the stream was reached. This error is returned when attempting to read HTTP data, and the stream returns the error boost::asio::error::eof before any octets corresponding to a new HTTP message have been received. ]]  [[[^partial_message]][The incoming message is incomplete. This happens when the end of stream is reached during parsing and some octets have been received, but not the entire message. ]]  [[[^need_more]][Additional buffers are required. This error is returned during parsing when additional octets are needed. The caller should append more data to the existing buffer and retry the parse operaetion. ]]  [[[^unexpected_body]][An unexpected body was encountered during parsing. This error is returned when attempting to parse body octets into a message container which has the empty_body body type.empty_body 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:The `read_some` operation may not read all of the requested number of bytes. Consider using the function `boost::asio::async_read` if you need to ensure that the requested amount of data is read before the asynchronous operation completes. 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:The `async_write_some` operation may not transmit all of the data to the peer. Consider using the function `boost::asio::async_write` if you need to ensure that all data is written before the asynchronous operation completes. 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:The `read_some` operation may not read all of the requested number of bytes. Consider using the function `boost::asio::read` if you need to ensure that the requested amount of data is read before the blocking operation completes. 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:The `read_some` operation may not read all of the requested number of bytes. Consider using the function `boost::asio::read` if you need to ensure that the requested amount of data is read before the blocking operation completes. 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:The `write_some` operation may not transmit all of the data to the peer. Consider using the function `boost::asio::write` if you need to ensure that all data is written before the blocking operation completes. 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:The `write_some` operation may not transmit all of the data to the peer. Consider using the function `boost::asio::write` if you need to ensure that all data is written before the blocking operation completes. 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:This is typically called when a read from the underlying stream object sets the error code to `boost::asio::error::eof`.
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:If the stream returns the error `boost::asio::error::eof` indicating the end of file during a read, the error returned from this function will be:
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:If the stream returns the error `boost::asio::error::eof` indicating the end of file during a read, the error returned from this function will be:
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:If the stream returns the error `boost::asio::error::eof` indicating the end of file during a read, the error returned from this function will be:
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:If the stream returns the error `boost::asio::error::eof` indicating the end of file during a read, the error returned from this function will be:
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:If the stream returns the error `boost::asio::error::eof` indicating the end of file during a read, the error returned from this function will be:
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:If the stream returns the error `boost::asio::error::eof` indicating the end of file during a read, the error returned from this function will be:
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:If the stream returns the error `boost::asio::error::eof` indicating the end of file during a read, the error returned from this function will be:
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:If the stream returns the error `boost::asio::error::eof` indicating the end of file during a read, the error returned from this function will be:
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:[heading Synopsis]Defined in header [include_file boost/beast/experimental/core/timeout_service.hpp]```voidset_timeout_service_options(    boost::asio::io_context& ctx,    std::chrono::seconds interval);```[heading Description]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:To use this template with a `boost::asio::ip::tcp::socket`, you would write: 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:  boost::asio::ssl::context ctx{boost::asio::ssl::context::sslv23};
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:  boost::beast::ssl_stream<boost::asio:ip::tcp::socket> sock{ioc, ctx};
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:In addition to providing an interface identical to `boost::asio::ssl::stream`, the wrapper has the following additional properties:
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:* Uses [link beast.ref.boost__beast__flat_stream `flat_stream`] internally, as a performance work-around for a limitation of `boost::asio::ssl::stream` when writing buffer sequences having length greater than one.
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:The `async_read_some` operation may not read all of the requested number of bytes. Consider using the `boost::asio::async_read` function if you need to ensure that the requested amount of data is read before the asynchronous operation completes. 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:The `async_write_some` operation may not transmit all of the data to the peer. Consider using the `boost::asio::async_write` function if you need to ensure that all data is written before the asynchronous operation completes. 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:  boost::beast::ssl_stream<boost::asio:ip::tcp::socket> ss{ioc, ctx};
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:The `read_some` operation may not read all of the requested number of bytes. Consider using the `boost::asio::read` function if you need to ensure that the requested amount of data is read before the blocking operation completes. 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:The `read_some` operation may not read all of the requested number of bytes. Consider using the `boost::asio::read` function if you need to ensure that the requested amount of data is read before the blocking operation completes. 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:    boost::asio::verify_context& ctx // The peer certificate and other context.
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:```void``[link beast.ref.boost__beast__ssl_stream.set_verify_mode.overload1 set_verify_mode]``(    boost::asio::ssl::verify_mode v);  ``[''''&raquo;''' [link beast.ref.boost__beast__ssl_stream.set_verify_mode.overload1 more...]]``boost::system::error_code``[link beast.ref.boost__beast__ssl_stream.set_verify_mode.overload2 set_verify_mode]``(    boost::asio::ssl::verify_mode v,    boost::system::error_code& ec);  ``[''''&raquo;''' [link beast.ref.boost__beast__ssl_stream.set_verify_mode.overload2 more...]]`````[section:overload1 ssl_stream::set_verify_mode (1 of 2 overloads)]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:[heading Synopsis]```voidset_verify_mode(    boost::asio::ssl::verify_mode v);```[heading Description]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:[heading Synopsis]```boost::system::error_codeset_verify_mode(    boost::asio::ssl::verify_mode v,    boost::system::error_code& ec);```[heading Description]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:```template<    class Arg>``[link beast.ref.boost__beast__ssl_stream.ssl_stream.overload1 ssl_stream]``(    Arg&& arg,    boost::asio::ssl::context& ctx);  ``[''''&raquo;''' [link beast.ref.boost__beast__ssl_stream.ssl_stream.overload1 more...]]`````
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:[heading Synopsis]```template<    class Arg>ssl_stream(    Arg&& arg,    boost::asio::ssl::context& ctx);```[heading Description]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:The `write_some` operation may not transmit all of the data to the peer. Consider using the `boost::asio::write` function if you need to ensure that all data is written before the blocking operation completes. 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:The `write_some` operation may not transmit all of the data to the peer. Consider using the `boost::asio::write` function if you need to ensure that all data is written before the blocking operation completes. 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:[heading Synopsis]```using const_buffers_type = std::array< boost::asio::const_buffer, 2 >;```[heading Description][endsect][section:consume static_buffer::consume][indexterm2 consume..static_buffer]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:[heading Synopsis]```using mutable_buffers_type = std::array< boost::asio::mutable_buffer, 2 >;```[heading Description][endsect][section:mutable_data static_buffer::mutable_data][indexterm2 mutable_data..static_buffer]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:[heading Synopsis]```using const_buffers_type = std::array< boost::asio::const_buffer, 2 >;```[heading Description][endsect][section:consume static_buffer_base::consume][indexterm2 consume..static_buffer_base]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:[heading Synopsis]```using mutable_buffers_type = std::array< boost::asio::mutable_buffer, 2 >;```[heading Description][endsect][section:mutable_data static_buffer_base::mutable_data][indexterm2 mutable_data..static_buffer_base]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:These streams may be used anywhere an algorithm accepts a reference to a synchronous or asynchronous read or write stream. It is possible to use a test stream in a call to `boost::asio::read_until`, or in a call to [link beast.ref.boost__beast__http__async_write `http::async_write`] for example.
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:As with Boost.Asio I/O objects, a [link beast.ref.boost__beast__test__stream `test::stream`] constructs with a reference to the `boost::asio::io_context` to use for handling asynchronous I/O. For asynchronous operations, the stream follows the same rules as a traditional asio socket with respect to how completion handlers for asynchronous operations are performed.
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:The `read_some` operation may not read all of the requested number of bytes. Consider using the function `boost::asio::async_read` if you need to ensure that the requested amount of data is read before the asynchronous operation completes. 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:The `async_write_some` operation may not transmit all of the data to the peer. Consider using the function `boost::asio::async_write` if you need to ensure that all data is written before the asynchronous operation completes. 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:[heading Synopsis]```using executor_type = boost::asio::io_context::executor_type;```[heading Description][endsect][section:get_executor test::stream::get_executor][indexterm2 get_executor..test::stream]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:[heading Synopsis]```boost::asio::io_context::executor_typeget_executor();```[heading Description][endsect][section:lowest_layer test::stream::lowest_layer][indexterm2 lowest_layer..test::stream]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:These streams may be used anywhere an algorithm accepts a reference to a synchronous or asynchronous read or write stream. It is possible to use a test stream in a call to `boost::asio::read_until`, or in a call to [link beast.ref.boost__beast__http__async_write `http::async_write`] for example.
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:As with Boost.Asio I/O objects, a [link beast.ref.boost__beast__test__stream `test::stream`] constructs with a reference to the `boost::asio::io_context` to use for handling asynchronous I/O. For asynchronous operations, the stream follows the same rules as a traditional asio socket with respect to how completion handlers for asynchronous operations are performed.
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:The `read_some` operation may not read all of the requested number of bytes. Consider using the function `boost::asio::read` if you need to ensure that the requested amount of data is read before the blocking operation completes. 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:The `read_some` operation may not read all of the requested number of bytes. Consider using the function `boost::asio::read` if you need to ensure that the requested amount of data is read before the blocking operation completes. 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:```explicit``[link beast.ref.boost__beast__test__stream.stream.overload2 stream]``(    boost::asio::io_context& ioc);  ``[''''&raquo;''' [link beast.ref.boost__beast__test__stream.stream.overload2 more...]]````[link beast.ref.boost__beast__test__stream.stream.overload3 stream]``(    boost::asio::io_context& ioc,    fail_count& fc);  ``[''''&raquo;''' [link beast.ref.boost__beast__test__stream.stream.overload3 more...]]````[link beast.ref.boost__beast__test__stream.stream.overload4 stream]``(    boost::asio::io_context& ioc,    string_view s);  ``[''''&raquo;''' [link beast.ref.boost__beast__test__stream.stream.overload4 more...]]````[link beast.ref.boost__beast__test__stream.stream.overload5 stream]``(    boost::asio::io_context& ioc,    fail_count& fc,    string_view s);  ``[''''&raquo;''' [link beast.ref.boost__beast__test__stream.stream.overload5 more...]]`````[section:overload1 test::stream::stream (1 of 5 overloads)]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:[heading Synopsis]```stream(    boost::asio::io_context& ioc);```[heading Description]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:[heading Synopsis]```stream(    boost::asio::io_context& ioc,    fail_count& fc);```[heading Description]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:[heading Synopsis]```stream(    boost::asio::io_context& ioc,    string_view s);```[heading Description]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:[heading Synopsis]```stream(    boost::asio::io_context& ioc,    fail_count& fc,    string_view s);```[heading Description]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:The `write_some` operation may not transmit all of the data to the peer. Consider using the function `boost::asio::write` if you need to ensure that all data is written before the blocking operation completes. 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:The `write_some` operation may not transmit all of the data to the peer. Consider using the function `boost::asio::write` if you need to ensure that all data is written before the blocking operation completes. 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:If a connection is established while the stream is destroyed, the peer will see the error `boost::asio::error::connection_reset` when performing any reads or writes. 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:[endsect][endsect][section:boost__beast__test__stream__read_op test::stream::read_op][heading Synopsis]Defined in header [include_file boost/beast/experimental/test/stream.hpp]```template<    class __Handler__,    class Buffers>class read_op```[heading Description][endsect][section:boost__beast__test__stream__read_op_base test::stream::read_op_base][heading Synopsis]Defined in header [include_file boost/beast/experimental/test/stream.hpp]```struct read_op_base```[heading Member Functions][table [[Name][Description]]  [    [[link beast.ref.boost__beast__test__stream__read_op_base.operator_lp__rp_ [*operator()]]]    [          ]  ]  [    [[link beast.ref.boost__beast__test__stream__read_op_base.read_op_base_dtor_ [*~read_op_base]]]    [          ]  ]][heading Description][section:operator_lp__rp_ test::stream::read_op_base::operator()][indexterm2 operator()..test::stream::read_op_base][heading Synopsis]```voidoperator()();```[heading Description][endsect][section:read_op_base_dtor_ test::stream::read_op_base::~read_op_base][indexterm2 ~read_op_base..test::stream::read_op_base][heading Synopsis]```virtual~read_op_base();```[heading Description][endsect][endsect][section:boost__beast__test__stream__state test::stream::state][heading Synopsis]Defined in header [include_file boost/beast/experimental/test/stream.hpp]```struct state```[heading Member Functions][table [[Name][Description]]  [    [[link beast.ref.boost__beast__test__stream__state.on_write [*on_write]]]    [          ]  ]  [    [[link beast.ref.boost__beast__test__stream__state.state [*state]]]    [          ]  ]  [    [[link beast.ref.boost__beast__test__stream__state.state_dtor_ [*~state]]]    [          ]  ]][heading Data Members][table [[Name][Description]]  [    [[link beast.ref.boost__beast__test__stream__state.b [*b]]]    [          ]  ]  [    [[link beast.ref.boost__beast__test__stream__state.code [*code]]]    [          ]  ]  [    [[link beast.ref.boost__beast__test__stream__state.cv [*cv]]]    [          ]  ]  [    [[link beast.ref.boost__beast__test__stream__state.fc [*fc]]]    [          ]  ]  [    [[link beast.ref.boost__beast__test__stream__state.ioc [*ioc]]]    [          ]  ]  [    [[link beast.ref.boost__beast__test__stream__state.m [*m]]]    [          ]  ]  [    [[link beast.ref.boost__beast__test__stream__state.nread [*nread]]]    [          ]  ]  [    [[link beast.ref.boost__beast__test__stream__state.nwrite [*nwrite]]]    [          ]  ]  [    [[link beast.ref.boost__beast__test__stream__state.op [*op]]]    [          ]  ]  [    [[link beast.ref.boost__beast__test__stream__state.read_max [*read_max]]]    [          ]  ]  [    [[link beast.ref.boost__beast__test__stream__state.write_max [*write_max]]]    [          ]  ]][heading Description][section:b test::stream::state::b][indexterm2 b..test::stream::state][heading Synopsis]```flat_buffer b;```[heading Description][endsect][section:code test::stream::state::code][indexterm2 code..test::stream::state][heading Synopsis]```status code = status::ok;```[heading Description][endsect][section:cv test::stream::state::cv][indexterm2 cv..test::stream::state][heading Synopsis]```std::condition_variable cv;```[heading Description][endsect][section:fc test::stream::state::fc][indexterm2 fc..test::stream::state][heading Synopsis]```fail_count * fc = nullptr;```[heading Description][endsect][section:ioc test::stream::state::ioc][indexterm2 ioc..test::stream::state][heading Synopsis]```boost::asio::io_context & ioc;```[heading Description][endsect][section:m test::stream::state::m][indexterm2 m..test::stream::state][heading Synopsis]```std::mutex m;```[heading Description][endsect][section:nread test::stream::state::nread][indexterm2 nread..test::stream::state][heading Synopsis]```std::size_t nread = 0;```[heading Description][endsect][section:nwrite test::stream::state::nwrite][indexterm2 nwrite..test::stream::state][heading Synopsis]```std::size_t nwrite = 0;```[heading Description][endsect][section:on_write test::stream::state::on_write][indexterm2 on_write..test::stream::state][heading Synopsis]```voidon_write();```[heading Description][endsect][section:op test::stream::state::op][indexterm2 op..test::stream::state][heading Synopsis]```std::unique_ptr< read_op_base > op;```[heading Description][endsect][section:read_max test::stream::state::read_max][indexterm2 read_max..test::stream::state][heading Synopsis]```std::size_t read_max =
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:            (std::numeric_limits<std::size_t>::max)();```[heading Description][endsect][section:state test::stream::state::state][indexterm2 state..test::stream::state][heading Synopsis]```state(    boost::asio::io_context& ioc_,    fail_count* fc_);```[heading Description][endsect][section:write_max test::stream::state::write_max][indexterm2 write_max..test::stream::state][heading Synopsis]```std::size_t write_max =
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:[heading Synopsis]Defined in header [include_file boost/beast/experimental/core/timeout_socket.hpp]```using timeout_socket = basic_timeout_socket< boost::asio::ip::tcp, boost::asio::io_context::executor_type >;```[heading Types][table [[Name][Description]]  [    [[link beast.ref.boost__beast__basic_timeout_socket.executor_type [*executor_type]]]    [      The type of the executor associated with the object.     ]  ]  [    [[link beast.ref.boost__beast__basic_timeout_socket.lowest_layer_type [*lowest_layer_type]]]    [      The type of the lowest layer.     ]  ]  [    [[link beast.ref.boost__beast__basic_timeout_socket.next_layer_type [*next_layer_type]]]    [      The type of the next layer.     ]  ]  [    [[link beast.ref.boost__beast__basic_timeout_socket.protocol_type [*protocol_type]]]    [      The protocol used by the stream.     ]  ]][heading Member Functions][table [[Name][Description]]  [    [[link beast.ref.boost__beast__basic_timeout_socket.async_read_some [*async_read_some]]]    [      Start an asynchronous read.     ]  ]  [    [[link beast.ref.boost__beast__basic_timeout_socket.async_write_some [*async_write_some]]]    [      Start an asynchronous write.     ]  ]  [    [[link beast.ref.boost__beast__basic_timeout_socket.basic_timeout_socket [*basic_timeout_socket]]]    [      Constructor.     ]  ]  [    [[link beast.ref.boost__beast__basic_timeout_socket.get_executor [*get_executor]]]    [      Get the executor associated with the object.     ]  ]  [    [[link beast.ref.boost__beast__basic_timeout_socket.lowest_layer [*lowest_layer]]]    [      Get a reference to the lowest layer.     ]  ]  [    [[link beast.ref.boost__beast__basic_timeout_socket.next_layer [*next_layer]]]    [      Get a reference to the next layer.     ]  ]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Start tearing down a `boost::asio::ssl::stream`. 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:```template<    class ``[link beast.concepts.streams.AsyncStream [*AsyncStream]]``,    class TeardownHandler>void``[link beast.ref.boost__beast__websocket__async_teardown.overload1 async_teardown]``(    role_type role,    boost::asio::ssl::stream< AsyncStream >& stream,    TeardownHandler&& handler);  ``[''''&raquo;''' [link beast.ref.boost__beast__websocket__async_teardown.overload1 more...]]`````
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Start tearing down a `boost::asio::ip::tcp::socket`. 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:```template<    class TeardownHandler>void``[link beast.ref.boost__beast__websocket__async_teardown.overload3 async_teardown]``(    role_type role,    boost::asio::ip::tcp::socket& socket,    TeardownHandler&& handler);  ``[''''&raquo;''' [link beast.ref.boost__beast__websocket__async_teardown.overload3 more...]]`````[section:overload1 websocket::async_teardown (1 of 3 overloads)]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Start tearing down a `boost::asio::ssl::stream`. 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:[heading Synopsis]Defined in header [include_file boost/beast/websocket/ssl.hpp]```template<    class ``[link beast.concepts.streams.AsyncStream [*AsyncStream]]``,    class TeardownHandler>voidasync_teardown(    role_type role,    boost::asio::ssl::stream< AsyncStream >& stream,    TeardownHandler&& handler);```[heading Description]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:This begins tearing down a connection asynchronously. The implementation will call the overload of this function based on the `Stream` parameter used to consruct the socket. When `Stream` is a user defined type, and not a `boost::asio::ip::tcp::socket` or any `boost::asio::ssl::stream`, callers are responsible for providing a suitable overload of this function.
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using boost::asio::io\_context::post().   ]]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:This begins tearing down a connection asynchronously. The implementation will call the overload of this function based on the `Socket` parameter used to consruct the socket. When `Stream` is a user defined type, and not a `boost::asio::ip::tcp::socket` or any `boost::asio::ssl::stream`, callers are responsible for providing a suitable overload of this function.
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using boost::asio::io\_context::post().   ]]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Start tearing down a `boost::asio::ip::tcp::socket`. 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:[heading Synopsis]Defined in header [include_file boost/beast/websocket/teardown.hpp]```template<    class TeardownHandler>voidasync_teardown(    role_type role,    boost::asio::ip::tcp::socket& socket,    TeardownHandler&& handler);```[heading Description]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:This begins tearing down a connection asynchronously. The implementation will call the overload of this function based on the `Stream` parameter used to consruct the socket. When `Stream` is a user defined type, and not a `boost::asio::ip::tcp::socket` or any `boost::asio::ssl::stream`, callers are responsible for providing a suitable overload of this function.
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using boost::asio::io\_context::post().   ]]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:  void handle_connection(boost::asio::ip::tcp::socket& sock)
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:The default implementation for [link beast.ref.boost__beast__websocket__stream `websocket::stream`] when the next layer type is a `boost::asio::ip::tcp::socket` behaves as follows:
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:When the next layer type is a `boost::asio::ssl::stream`, the connection is closed by performing the SSL closing handshake corresponding to the role type, client or server.
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post`.   ]]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post`.   ]]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post`.   ]]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post`.   ]]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post`.   ]]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post`.   ]]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post`.   ]]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post`.   ]]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post`.   ]]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post`.   ]]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post`.   ]]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:If a close frame is sent or received before the ping frame is sent, the completion handler will be called with the error set to `boost::asio::error::operation_aborted`.
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post`.   ]]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:If a close frame is sent or received before the pong frame is sent, the completion handler will be called with the error set to `boost::asio::error::operation_aborted`.
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post`.   ]]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post`.   ]]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post`.   ]]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post`.   ]]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post`.   ]]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Tear down a `boost::asio::ssl::stream`. 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:```template<    class ``[link beast.concepts.streams.SyncStream [*SyncStream]]``>void``[link beast.ref.boost__beast__websocket__teardown.overload1 teardown]``(    role_type role,    boost::asio::ssl::stream< SyncStream >& stream,    error_code& ec);  ``[''''&raquo;''' [link beast.ref.boost__beast__websocket__teardown.overload1 more...]]`````
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Tear down a `boost::asio::ip::tcp::socket`. 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:```void``[link beast.ref.boost__beast__websocket__teardown.overload3 teardown]``(    role_type role,    boost::asio::ip::tcp::socket& socket,    error_code& ec);  ``[''''&raquo;''' [link beast.ref.boost__beast__websocket__teardown.overload3 more...]]`````[section:overload1 websocket::teardown (1 of 3 overloads)]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Tear down a `boost::asio::ssl::stream`. 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:[heading Synopsis]Defined in header [include_file boost/beast/websocket/ssl.hpp]```template<    class ``[link beast.concepts.streams.SyncStream [*SyncStream]]``>voidteardown(    role_type role,    boost::asio::ssl::stream< SyncStream >& stream,    error_code& ec);```[heading Description]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:This tears down a connection. The implementation will call the overload of this function based on the `Stream` parameter used to consruct the socket. When `Stream` is a user defined type, and not a `boost::asio::ip::tcp::socket` or any `boost::asio::ssl::stream`, callers are responsible for providing a suitable overload of this function.
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:This tears down a connection. The implementation will call the overload of this function based on the `Socket` parameter used to consruct the socket. When `Socket` is a user defined type, and not a `boost::asio::ip::tcp::socket` or any `boost::asio::ssl::stream`, callers are responsible for providing a suitable overload of this function.
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:Tear down a `boost::asio::ip::tcp::socket`. 
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:[heading Synopsis]Defined in header [include_file boost/beast/websocket/teardown.hpp]```voidteardown(    role_type role,    boost::asio::ip::tcp::socket& socket,    error_code& ec);```[heading Description]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/reference.qbk:This tears down a connection. The implementation will call the overload of this function based on the `Stream` parameter used to consruct the socket. When `Stream` is a user defined type, and not a `boost::asio::ip::tcp::socket` or any `boost::asio::ssl::stream`, callers are responsible for providing a suitable overload of this function.
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/00_main.qbk:[def __io_context__             [@boost:/doc/html/boost_asio/reference/io_context.html `boost::asio::io_context`]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/00_main.qbk:[def __executor_work_guard__    [@boost:/doc/html/boost_asio/reference/executor_work_guard.html `boost::asio::executor_work_guard`]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/00_main.qbk:[def __post__                   [@boost:/doc/html/boost_asio/reference/post.html `boost::asio::post`]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/00_main.qbk:[def __socket__                 [@boost:/doc/html/boost_asio/reference/ip__tcp/socket.html `boost::asio::ip::tcp::socket`]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/00_main.qbk:[def __ssl_context__            [@boost:/doc/html/boost_asio/reference/ssl__context.html `boost::asio::ssl::context`]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/00_main.qbk:[def __ssl_stream__             [@boost:/doc/html/boost_asio/reference/ssl__stream.html `boost::asio::ssl::stream`]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/00_main.qbk:[def __streambuf__              [@boost:/doc/html/boost_asio/reference/streambuf.html `boost::asio::streambuf`]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/00_main.qbk:[def __use_future__             [@boost:/doc/html/boost_asio/reference/use_future_t.html `boost::asio::use_future`]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/00_main.qbk:[def __yield_context__          [@boost:/doc/html/boost_asio/reference/yield_context.html `boost::asio::yield_context`]]
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/07_concepts/DynamicBuffer.qbk:* `boost::asio::is_dynamic_buffer`
/home/kaworu/boost_1_69_0/libs/beast/doc/qbk/07_concepts/Streams.qbk:asynchronous I/O. They are based on concepts from `boost::asio`.
/home/kaworu/boost_1_69_0/libs/beast/doc/docca/include/docca/doxygen.xsl:    <xsl:when test="contains($name, 'boost::asio::error::')">
/home/kaworu/boost_1_69_0/libs/beast/doc/docca/include/docca/doxygen.xsl:         select="concat(substring-before($name, 'boost::asio::error::'), substring-after($name, 'boost::asio::error::'))"/>
/home/kaworu/boost_1_69_0/libs/beast/doc/html/beast/more_examples/expect_100_continue_server.html:    <span class="comment">// ambiguous function error (from boost::asio::read). Another</span>
/home/kaworu/boost_1_69_0/libs/beast/doc/html/beast/using_io/example_detect_ssl.html:    manner equivalent to using `boost::asio::io_context::post`.
/home/kaworu/boost_1_69_0/libs/beast/doc/html/beast/using_io/example_detect_ssl.html:    <span class="comment">// CompletionToken is boost::asio::use_future.</span>
/home/kaworu/boost_1_69_0/libs/beast/doc/html/beast/using_io/writing_composed_operations.html:    manner equivalent to using `boost::asio::io_context::post`.
/home/kaworu/boost_1_69_0/libs/beast/doc/html/beast/using_io/writing_composed_operations.html:    <span class="comment">// CompletionToken is boost::asio::use_future, or this might</span>
/home/kaworu/boost_1_69_0/libs/beast/doc/html/beast/ref/boost__beast__http__error.html:                  stream returns the error boost::asio::error::eof before any octets
/home/kaworu/boost_1_69_0/libs/beast/doc/html/beast/ref/boost__beast__websocket__async_teardown/overload2.html:                    to using boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/libs/beast/doc/html/beast/ref/boost__beast__websocket__async_teardown/overload1.html:                    to using boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/libs/beast/doc/html/beast/ref/boost__beast__websocket__async_teardown/overload3.html:                    to using boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/libs/beast/doc/html/beast/ref/boost__beast__basic_timeout_socket/async_write_some.html:                    to using boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/libs/beast/doc/html/beast/ref/boost__beast__basic_timeout_socket/async_read_some.html:                    to using boost::asio::io_context::post().
/home/kaworu/boost_1_69_0/libs/beast/CHANGELOG.md:* Use boost::asio::async_completion
/home/kaworu/boost_1_69_0/libs/beast/CHANGELOG.md:* Use boost::asio::is_dynamic_buffer
/home/kaworu/boost_1_69_0/libs/beast/CHANGELOG.md:* Use boost::asio::is_const_buffer_sequence
/home/kaworu/boost_1_69_0/libs/beast/CHANGELOG.md:* Use boost::asio::is_mutable_buffer_sequence
/home/kaworu/boost_1_69_0/libs/beast/CHANGELOG.md:* boost::asio::associated_allocator_t replaces handler_alloc
/home/kaworu/boost_1_69_0/libs/beast/CHANGELOG.md:* Workaround for boost::asio::basic_streambuf type check
/home/kaworu/boost_1_69_0/libs/phoenix/example/adapted_echo_server.cpp:BOOST_PHOENIX_ADAPT_FUNCTION(void, read, boost::asio::async_read, 4)
/home/kaworu/boost_1_69_0/libs/phoenix/example/adapted_echo_server.cpp:BOOST_PHOENIX_ADAPT_FUNCTION(void, write, boost::asio::async_write, 3)
/home/kaworu/boost_1_69_0/libs/phoenix/example/adapted_echo_server.cpp:BOOST_PHOENIX_ADAPT_FUNCTION(boost::asio::mutable_buffers_1, buffer, boost::asio::buffer, 2)
/home/kaworu/boost_1_69_0/libs/phoenix/example/adapted_echo_server.cpp:    boost::asio::io_service io_service;
/home/kaworu/boost_1_69_0/libs/phoenix/example/adapted_echo_server.cpp:    boost::asio::ip::tcp::acceptor acceptor(io_service, boost::asio::ip::tcp::endpoint(boost::asio::ip::tcp::v4(), std::atoi(argv[1])));
/home/kaworu/boost_1_69_0/libs/phoenix/example/adapted_echo_server.cpp:    boost::asio::ip::tcp::socket socket(io_service);
/home/kaworu/boost_1_69_0/libs/phoenix/example/adapted_echo_server.cpp:                bind(&boost::asio::ip::tcp::socket::close, ref(socket))
/home/kaworu/boost_1_69_0/libs/phoenix/example/adapted_echo_server.cpp:            read(ref(socket), buffer(ref(buf), max_length), boost::asio::transfer_at_least(1), phx::ref(read_handler))
/home/kaworu/boost_1_69_0/libs/phoenix/example/adapted_echo_server.cpp:            read(_socket, buffer(_buf, max_length), boost::asio::transfer_at_least(1), phx::ref(read_handler))
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/round_robin.hpp:    std::shared_ptr< boost::asio::io_service >      io_svc_;
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/round_robin.hpp:    boost::asio::steady_timer                       suspend_timer_;
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/round_robin.hpp:    struct service : public boost::asio::io_service::service {
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/round_robin.hpp:        static boost::asio::io_service::id                  id;
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/round_robin.hpp:        std::unique_ptr< boost::asio::io_service::work >    work_;
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/round_robin.hpp:        service( boost::asio::io_service & io_svc) :
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/round_robin.hpp:            boost::asio::io_service::service( io_svc),
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/round_robin.hpp:            work_{ new boost::asio::io_service::work( io_svc) } {
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/round_robin.hpp:    round_robin( std::shared_ptr< boost::asio::io_service > const& io_svc) :
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/round_robin.hpp:        boost::asio::add_service( * io_svc_, new service( * io_svc_) );
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/round_robin.hpp:boost::asio::io_service::id round_robin::service::id;
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/autoecho.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/autoecho.cpp:                    boost::asio::buffer( data),
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/autoecho.cpp:            if ( ec == boost::asio::error::eof) {
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/autoecho.cpp:            boost::asio::async_write(
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/autoecho.cpp:                    boost::asio::buffer( data, length),
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/autoecho.cpp:            if ( ec == boost::asio::error::eof) {
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/autoecho.cpp:void server( std::shared_ptr< boost::asio::io_service > const& io_svc, tcp::acceptor & a) {
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/autoecho.cpp:void client( std::shared_ptr< boost::asio::io_service > const& io_svc, tcp::acceptor & a,
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/autoecho.cpp:        boost::asio::connect( s, iterator);
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/autoecho.cpp:            boost::asio::async_write(
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/autoecho.cpp:                    boost::asio::buffer( message),
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/autoecho.cpp:            if ( ec == boost::asio::error::eof) {
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/autoecho.cpp:                    boost::asio::buffer( reply, max_length),
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/autoecho.cpp:            if ( ec == boost::asio::error::eof) {
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/autoecho.cpp:        std::shared_ptr< boost::asio::io_service > io_svc = std::make_shared< boost::asio::io_service >();
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/exchange.cpp:    auto io_ptr = std::make_shared< boost::asio::io_service >();
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/exchange.cpp:    auto io_ptr = std::make_shared< boost::asio::io_service >();
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/ps/publisher.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/ps/publisher.cpp:        boost::asio::io_service io_service;
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/ps/publisher.cpp:        boost::asio::connect( s, iterator);
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/ps/publisher.cpp:        boost::asio::write( s, boost::asio::buffer( msg, max_length) );
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/ps/publisher.cpp:            boost::asio::write( s, boost::asio::buffer( request, max_length) );
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/ps/subscriber.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/ps/subscriber.cpp:        boost::asio::io_service io_service;
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/ps/subscriber.cpp:        boost::asio::connect( s, iterator);
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/ps/subscriber.cpp:        boost::asio::write( s, boost::asio::buffer( msg, max_length) );
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/ps/subscriber.cpp:            size_t reply_length = s.read_some( boost::asio::buffer( reply, max_length) );
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/ps/server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/ps/server.cpp:    explicit subscriber_session( std::shared_ptr< boost::asio::io_service > const& io_service, registry & reg) :
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/ps/server.cpp:            boost::asio::async_read(
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/ps/server.cpp:                    boost::asio::buffer( data_),
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/ps/server.cpp:                boost::asio::async_write(
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/ps/server.cpp:                        boost::asio::buffer( data, data.size() ),
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/ps/server.cpp:                if ( ec == boost::asio::error::eof) {
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/ps/server.cpp:    explicit publisher_session( std::shared_ptr< boost::asio::io_service > const& io_service, registry & reg) :
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/ps/server.cpp:            boost::asio::async_read(
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/ps/server.cpp:                    boost::asio::buffer( data),
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/ps/server.cpp:                boost::asio::async_read(
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/ps/server.cpp:                        boost::asio::buffer( data),
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/ps/server.cpp:                if ( ec == boost::asio::error::eof) {
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/ps/server.cpp:void accept_publisher( std::shared_ptr< boost::asio::io_service > const& io_service,
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/ps/server.cpp:void accept_subscriber( std::shared_ptr< boost::asio::io_service > const& io_service,
/home/kaworu/boost_1_69_0/libs/fiber/examples/asio/ps/server.cpp:        std::shared_ptr< boost::asio::io_service > io_service = std::make_shared< boost::asio::io_service >();
/home/kaworu/boost_1_69_0/libs/fiber/doc/asio.qbk:        void echo(boost::asio::ip::tcp::socket& socket,boost::asio::yield_context yield){
/home/kaworu/boost_1_69_0/libs/fiber/doc/asio.qbk:            std::size_t n=socket.async_read_some(boost::asio::buffer(data),yield);
/home/kaworu/boost_1_69_0/libs/fiber/doc/asio.qbk:            boost::asio::async_write(socket,boost::asio::buffer(data,n),yield);
/home/kaworu/boost_1_69_0/libs/fiber/doc/asio.qbk:            boost::asio::async_read(
/home/kaworu/boost_1_69_0/libs/fiber/doc/asio.qbk:                    boost::asio::buffer( queue),
/home/kaworu/boost_1_69_0/libs/fiber/doc/asio.qbk:                boost::asio::async_write(
/home/kaworu/boost_1_69_0/libs/fiber/doc/asio.qbk:                        boost::asio::buffer( data_, max_length),
/home/kaworu/boost_1_69_0/libs/fiber/doc/integration.qbk:`boost::asio::steady_timer`]:
/home/kaworu/boost_1_69_0/libs/fiber/doc/integration.qbk:`boost::asio::add_service()`] with a nested `service` struct:
/home/kaworu/boost_1_69_0/libs/fiber/doc/integration.qbk:`boost::asio::io_service::work`]>]. We want the `io_service` instance to
/home/kaworu/boost_1_69_0/libs/fiber/doc/integration.qbk:`boost::asio::io_service::service::shutdown_service()`] is called, we discard
/home/kaworu/boost_1_69_0/libs/fiber/doc/callbacks.qbk:`boost::asio::handler_type<>`]
/home/kaworu/boost_1_69_0/libs/fiber/doc/fibers.qbk:[def __io_service__ [@http://www.boost.org/doc/libs/release/doc/html/boost_asio/reference/io_service.html `boost::asio::io_service`]]
/home/kaworu/boost_1_69_0/libs/fiber/doc/fibers.qbk:[def __yield_context__ ['boost::asio::yield_context]]
/home/kaworu/boost_1_69_0/libs/coroutine2/doc/coro.qbk:[def __io_service__ ['boost::asio::io_sevice]]
/home/kaworu/boost_1_69_0/libs/coroutine2/doc/coro.qbk:[def __yield_context__ ['boost::asio::yield_context]]
/home/kaworu/boost_1_69_0/libs/coroutine2/doc/motivation.qbk:            session(boost::asio::io_service& io_service) :
/home/kaworu/boost_1_69_0/libs/coroutine2/doc/motivation.qbk:                socket_.async_read_some(boost::asio::buffer(data_,max_length),
/home/kaworu/boost_1_69_0/libs/coroutine2/doc/motivation.qbk:                        boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/coroutine2/doc/motivation.qbk:                        boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/coroutine2/doc/motivation.qbk:                    boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/libs/coroutine2/doc/motivation.qbk:                        boost::asio::buffer(data_,bytes_transferred),
/home/kaworu/boost_1_69_0/libs/coroutine2/doc/motivation.qbk:                            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/coroutine2/doc/motivation.qbk:                    socket_.async_read_some(boost::asio::buffer(data_,max_length),
/home/kaworu/boost_1_69_0/libs/coroutine2/doc/motivation.qbk:                            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/coroutine2/doc/motivation.qbk:                            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/coroutine2/doc/motivation.qbk:            boost::asio::ip::tcp::socket socket_;
/home/kaworu/boost_1_69_0/libs/coroutine2/doc/motivation.qbk:        void session(boost::asio::io_service& io_service){
/home/kaworu/boost_1_69_0/libs/coroutine2/doc/motivation.qbk:            boost::asio::ip::tcp::socket socket(io_service);
/home/kaworu/boost_1_69_0/libs/coroutine2/doc/motivation.qbk:                            boost::asio::buffer(data),
/home/kaworu/boost_1_69_0/libs/coroutine2/doc/motivation.qbk:                            boost::asio::yield[ec]);
/home/kaworu/boost_1_69_0/libs/coroutine2/doc/motivation.qbk:                    if (ec==boost::asio::error::eof)
/home/kaworu/boost_1_69_0/libs/coroutine2/doc/motivation.qbk:                    boost::asio::async_write(
/home/kaworu/boost_1_69_0/libs/coroutine2/doc/motivation.qbk:                            boost::asio::buffer(data,length),
/home/kaworu/boost_1_69_0/libs/coroutine2/doc/motivation.qbk:                            boost::asio::yield[ec]);
/home/kaworu/boost_1_69_0/libs/coroutine2/doc/motivation.qbk:                    if (ec==boost::asio::error::eof)
/home/kaworu/boost_1_69_0/libs/coroutine/doc/coro.qbk:[def __io_service__ ['boost::asio::io_sevice]]
/home/kaworu/boost_1_69_0/libs/coroutine/doc/coro.qbk:[def __yield_context__ ['boost::asio::yield_context]]
/home/kaworu/boost_1_69_0/libs/coroutine/doc/motivation.qbk:            session(boost::asio::io_service& io_service) :
/home/kaworu/boost_1_69_0/libs/coroutine/doc/motivation.qbk:                socket_.async_read_some(boost::asio::buffer(data_,max_length),
/home/kaworu/boost_1_69_0/libs/coroutine/doc/motivation.qbk:                        boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/coroutine/doc/motivation.qbk:                        boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/coroutine/doc/motivation.qbk:                    boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/libs/coroutine/doc/motivation.qbk:                        boost::asio::buffer(data_,bytes_transferred),
/home/kaworu/boost_1_69_0/libs/coroutine/doc/motivation.qbk:                            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/coroutine/doc/motivation.qbk:                    socket_.async_read_some(boost::asio::buffer(data_,max_length),
/home/kaworu/boost_1_69_0/libs/coroutine/doc/motivation.qbk:                            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/coroutine/doc/motivation.qbk:                            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/coroutine/doc/motivation.qbk:            boost::asio::ip::tcp::socket socket_;
/home/kaworu/boost_1_69_0/libs/coroutine/doc/motivation.qbk:        void session(boost::asio::io_service& io_service){
/home/kaworu/boost_1_69_0/libs/coroutine/doc/motivation.qbk:            boost::asio::ip::tcp::socket socket(io_service);
/home/kaworu/boost_1_69_0/libs/coroutine/doc/motivation.qbk:                            boost::asio::buffer(data),
/home/kaworu/boost_1_69_0/libs/coroutine/doc/motivation.qbk:                            boost::asio::yield[ec]);
/home/kaworu/boost_1_69_0/libs/coroutine/doc/motivation.qbk:                    if (ec==boost::asio::error::eof)
/home/kaworu/boost_1_69_0/libs/coroutine/doc/motivation.qbk:                    boost::asio::async_write(
/home/kaworu/boost_1_69_0/libs/coroutine/doc/motivation.qbk:                            boost::asio::buffer(data,length),
/home/kaworu/boost_1_69_0/libs/coroutine/doc/motivation.qbk:                            boost::asio::yield[ec]);
/home/kaworu/boost_1_69_0/libs/coroutine/doc/motivation.qbk:                    if (ec==boost::asio::error::eof)
/home/kaworu/boost_1_69_0/libs/coroutine/doc/html/coroutine/motivation.html:      variables. Therefore the code is much easier to read and understand. <a href="#ftn.coroutine.motivation.f0" class="footnote" name="coroutine.motivation.f0"><sup class="footnote">[4]</sup></a>. <span class="emphasis"><em>boost::asio::yield_context</em></span> internally uses
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::access_denied);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::address_family_not_supported);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::address_in_use);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::already_connected);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::already_started);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::connection_aborted);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::connection_refused);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::connection_reset);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::bad_descriptor);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::eof);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::fault);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::host_not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::host_not_found_try_again);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::host_unreachable);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::in_progress);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::interrupted);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::invalid_argument);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::message_size);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::network_down);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::network_reset);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::network_unreachable);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::no_descriptors);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::no_buffer_space);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::no_data);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::no_memory);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::no_permission);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::no_protocol_option);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::no_recovery);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::not_connected);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::not_socket);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::operation_aborted);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::operation_not_supported);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::service_not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::shut_down);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::timed_out);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::try_again);
/home/kaworu/boost_1_69_0/libs/asio/test/error.cpp:  test_error_code(boost::asio::error::would_block);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:        boost::asio::ip::tcp::endpoint(
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:          boost::asio::ip::address_v4::loopback(), 0)),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::ip::tcp::endpoint target_endpoint()
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::io_context io_context_;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::ip::tcp::acceptor acceptor_;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::ip::tcp::endpoint target_endpoint_;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::ip::tcp::socket socket_;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::detail::thread thread_;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    const boost::asio::ip::tcp::endpoint& /*endpoint*/)
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:std::vector<boost::asio::ip::tcp::endpoint>::const_iterator legacy_true_cond_1(
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    std::vector<boost::asio::ip::tcp::endpoint>::const_iterator next)
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    const boost::asio::ip::tcp::endpoint& /*endpoint*/)
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    const boost::asio::ip::tcp::endpoint& endpoint,
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    boost::asio::ip::tcp::endpoint* out_endpoint)
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    std::vector<boost::asio::ip::tcp::endpoint>::const_iterator iter,
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    std::vector<boost::asio::ip::tcp::endpoint>::const_iterator* out_iter)
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  std::vector<boost::asio::ip::tcp::endpoint> endpoints;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::ip::tcp::endpoint result;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    result = boost::asio::connect(socket, endpoints);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    BOOST_ASIO_CHECK(e.code() == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  endpoints.insert(endpoints.begin(), boost::asio::ip::tcp::endpoint());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  std::vector<boost::asio::ip::tcp::endpoint> endpoints;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::ip::tcp::endpoint result;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, ec);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(result == boost::asio::ip::tcp::endpoint());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, ec);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, ec);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  endpoints.insert(endpoints.begin(), boost::asio::ip::tcp::endpoint());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, ec);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  std::vector<boost::asio::ip::tcp::endpoint> endpoints;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::ip::tcp::endpoint result;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    result = boost::asio::connect(socket, endpoints, true_cond_1);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    BOOST_ASIO_CHECK(e.code() == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    result = boost::asio::connect(socket, endpoints, true_cond_2());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    BOOST_ASIO_CHECK(e.code() == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    result = boost::asio::connect(socket, endpoints, legacy_true_cond_1);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    BOOST_ASIO_CHECK(e.code() == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    result = boost::asio::connect(socket, endpoints, legacy_true_cond_2());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    BOOST_ASIO_CHECK(e.code() == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    result = boost::asio::connect(socket, endpoints, false_cond);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    BOOST_ASIO_CHECK(e.code() == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, true_cond_1);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, true_cond_2());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, legacy_true_cond_1);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, legacy_true_cond_2());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    result = boost::asio::connect(socket, endpoints, false_cond);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    BOOST_ASIO_CHECK(e.code() == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, true_cond_1);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, true_cond_2());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, legacy_true_cond_1);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, legacy_true_cond_2());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    result = boost::asio::connect(socket, endpoints, false_cond);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    BOOST_ASIO_CHECK(e.code() == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  endpoints.insert(endpoints.begin(), boost::asio::ip::tcp::endpoint());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, true_cond_1);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, true_cond_2());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, legacy_true_cond_1);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, legacy_true_cond_2());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    result = boost::asio::connect(socket, endpoints, false_cond);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    BOOST_ASIO_CHECK(e.code() == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  std::vector<boost::asio::ip::tcp::endpoint> endpoints;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::ip::tcp::endpoint result;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, true_cond_1, ec);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(result == boost::asio::ip::tcp::endpoint());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, true_cond_2(), ec);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(result == boost::asio::ip::tcp::endpoint());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, legacy_true_cond_1, ec);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(result == boost::asio::ip::tcp::endpoint());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, legacy_true_cond_2(), ec);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(result == boost::asio::ip::tcp::endpoint());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, false_cond, ec);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(result == boost::asio::ip::tcp::endpoint());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, true_cond_1, ec);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, true_cond_2(), ec);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, legacy_true_cond_1, ec);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, legacy_true_cond_2(), ec);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, false_cond, ec);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(result == boost::asio::ip::tcp::endpoint());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, true_cond_1, ec);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, true_cond_2(), ec);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, legacy_true_cond_1, ec);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, legacy_true_cond_2(), ec);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, false_cond, ec);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(result == boost::asio::ip::tcp::endpoint());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  endpoints.insert(endpoints.begin(), boost::asio::ip::tcp::endpoint());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, true_cond_1, ec);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, true_cond_2(), ec);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, legacy_true_cond_1, ec);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, legacy_true_cond_2(), ec);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, endpoints, false_cond, ec);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(result == boost::asio::ip::tcp::endpoint());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  std::vector<boost::asio::ip::tcp::endpoint> endpoints;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  const std::vector<boost::asio::ip::tcp::endpoint>& cendpoints = endpoints;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  std::vector<boost::asio::ip::tcp::endpoint>::const_iterator result;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    result = boost::asio::connect(socket, cendpoints.begin(), cendpoints.end());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    BOOST_ASIO_CHECK(e.code() == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, cendpoints.begin(), cendpoints.end());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, cendpoints.begin(), cendpoints.end());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  endpoints.insert(endpoints.begin(), boost::asio::ip::tcp::endpoint());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, cendpoints.begin(), cendpoints.end());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  std::vector<boost::asio::ip::tcp::endpoint> endpoints;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  const std::vector<boost::asio::ip::tcp::endpoint>& cendpoints = endpoints;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  std::vector<boost::asio::ip::tcp::endpoint>::const_iterator result;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket,
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket,
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket,
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  endpoints.insert(endpoints.begin(), boost::asio::ip::tcp::endpoint());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket,
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  std::vector<boost::asio::ip::tcp::endpoint> endpoints;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  const std::vector<boost::asio::ip::tcp::endpoint>& cendpoints = endpoints;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  std::vector<boost::asio::ip::tcp::endpoint>::const_iterator result;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    BOOST_ASIO_CHECK(e.code() == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    BOOST_ASIO_CHECK(e.code() == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    BOOST_ASIO_CHECK(e.code() == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    BOOST_ASIO_CHECK(e.code() == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    BOOST_ASIO_CHECK(e.code() == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    BOOST_ASIO_CHECK(e.code() == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    BOOST_ASIO_CHECK(e.code() == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  endpoints.insert(endpoints.begin(), boost::asio::ip::tcp::endpoint());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:    BOOST_ASIO_CHECK(e.code() == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  std::vector<boost::asio::ip::tcp::endpoint> endpoints;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  const std::vector<boost::asio::ip::tcp::endpoint>& cendpoints = endpoints;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  std::vector<boost::asio::ip::tcp::endpoint>::const_iterator result;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  endpoints.insert(endpoints.begin(), boost::asio::ip::tcp::endpoint());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  result = boost::asio::connect(socket, cendpoints.begin(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  std::vector<boost::asio::ip::tcp::endpoint> endpoints;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::ip::tcp::endpoint result;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, endpoints,
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(result == boost::asio::ip::tcp::endpoint());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, endpoints,
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, endpoints,
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  endpoints.insert(endpoints.begin(), boost::asio::ip::tcp::endpoint());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, endpoints,
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  std::vector<boost::asio::ip::tcp::endpoint> endpoints;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::ip::tcp::endpoint result;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, endpoints, true_cond_1,
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(result == boost::asio::ip::tcp::endpoint());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, endpoints, true_cond_2(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(result == boost::asio::ip::tcp::endpoint());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, endpoints, legacy_true_cond_1,
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(result == boost::asio::ip::tcp::endpoint());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, endpoints, legacy_true_cond_2(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(result == boost::asio::ip::tcp::endpoint());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, endpoints, false_cond,
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(result == boost::asio::ip::tcp::endpoint());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, endpoints, true_cond_1,
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, endpoints, true_cond_2(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, endpoints, legacy_true_cond_1,
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, endpoints, legacy_true_cond_2(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, endpoints, false_cond,
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(result == boost::asio::ip::tcp::endpoint());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, endpoints, true_cond_1,
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, endpoints, true_cond_2(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, endpoints, legacy_true_cond_1,
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, endpoints, legacy_true_cond_2(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, endpoints, false_cond,
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(result == boost::asio::ip::tcp::endpoint());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  endpoints.insert(endpoints.begin(), boost::asio::ip::tcp::endpoint());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, endpoints, true_cond_1,
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, endpoints, true_cond_2(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, endpoints, legacy_true_cond_1,
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, endpoints, legacy_true_cond_2(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, endpoints, false_cond,
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(result == boost::asio::ip::tcp::endpoint());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  std::vector<boost::asio::ip::tcp::endpoint> endpoints;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  const std::vector<boost::asio::ip::tcp::endpoint>& cendpoints = endpoints;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  std::vector<boost::asio::ip::tcp::endpoint>::const_iterator result;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, cendpoints.begin(), cendpoints.end(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, cendpoints.begin(), cendpoints.end(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, cendpoints.begin(), cendpoints.end(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  endpoints.insert(endpoints.begin(), boost::asio::ip::tcp::endpoint());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, cendpoints.begin(), cendpoints.end(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  std::vector<boost::asio::ip::tcp::endpoint> endpoints;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  const std::vector<boost::asio::ip::tcp::endpoint>& cendpoints = endpoints;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  std::vector<boost::asio::ip::tcp::endpoint>::const_iterator result;
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, cendpoints.begin(), cendpoints.end(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, cendpoints.begin(), cendpoints.end(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, cendpoints.begin(), cendpoints.end(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, cendpoints.begin(), cendpoints.end(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, cendpoints.begin(), cendpoints.end(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, cendpoints.begin(), cendpoints.end(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, cendpoints.begin(), cendpoints.end(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, cendpoints.begin(), cendpoints.end(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, cendpoints.begin(), cendpoints.end(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, cendpoints.begin(), cendpoints.end(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, cendpoints.begin(), cendpoints.end(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, cendpoints.begin(), cendpoints.end(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, cendpoints.begin(), cendpoints.end(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, cendpoints.begin(), cendpoints.end(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, cendpoints.begin(), cendpoints.end(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  endpoints.insert(endpoints.begin(), boost::asio::ip::tcp::endpoint());
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, cendpoints.begin(), cendpoints.end(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, cendpoints.begin(), cendpoints.end(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, cendpoints.begin(), cendpoints.end(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, cendpoints.begin(), cendpoints.end(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  boost::asio::async_connect(socket, cendpoints.begin(), cendpoints.end(),
/home/kaworu/boost_1_69_0/libs/asio/test/connect.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/buffers_iterator.cpp:using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  typedef boost::asio::io_context::executor_type executor_type;
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  test_stream(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:    size_t n = boost::asio::buffer_copy(buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:        boost::asio::buffer(data_, length_) + position_,
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:    boost::asio::post(get_executor(),
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:        boost::asio::detail::bind_handler(
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::io_context& io_context_;
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::streambuf sb1;
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::streambuf sb2(25);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  std::size_t length = boost::asio::read_until(s, sb1, 'Z');
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  length = boost::asio::read_until(s, sb1, 'Z');
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  length = boost::asio::read_until(s, sb1, 'Z');
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  length = boost::asio::read_until(s, sb1, 'Z', ec);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  length = boost::asio::read_until(s, sb1, 'Z', ec);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  length = boost::asio::read_until(s, sb1, 'Z', ec);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  length = boost::asio::read_until(s, sb2, 'Z', ec);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  length = boost::asio::read_until(s, sb2, 'Z', ec);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  length = boost::asio::read_until(s, sb2, 'Z', ec);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  length = boost::asio::read_until(s, sb2, 'Y', ec);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  length = boost::asio::read_until(s, sb2, 'Y', ec);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  length = boost::asio::read_until(s, sb2, 'Y', ec);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::streambuf sb1;
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::streambuf sb2(25);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  std::size_t length = boost::asio::read_until(s, sb1, "XYZ");
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  length = boost::asio::read_until(s, sb1, "XYZ");
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  length = boost::asio::read_until(s, sb1, "XYZ");
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  length = boost::asio::read_until(s, sb1, "XYZ", ec);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  length = boost::asio::read_until(s, sb1, "XYZ", ec);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  length = boost::asio::read_until(s, sb1, "XYZ", ec);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  length = boost::asio::read_until(s, sb2, "XYZ", ec);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  length = boost::asio::read_until(s, sb2, "XYZ", ec);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  length = boost::asio::read_until(s, sb2, "XYZ", ec);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  length = boost::asio::read_until(s, sb2, "WXY", ec);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  length = boost::asio::read_until(s, sb2, "WXY", ec);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  length = boost::asio::read_until(s, sb2, "WXY", ec);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::streambuf sb1;
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::streambuf sb2(25);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  std::size_t length = boost::asio::read_until(s, sb1, match_char('Z'));
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  length = boost::asio::read_until(s, sb1, match_char('Z'));
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  length = boost::asio::read_until(s, sb1, match_char('Z'));
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  length = boost::asio::read_until(s, sb1, match_char('Z'), ec);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  length = boost::asio::read_until(s, sb1, match_char('Z'), ec);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  length = boost::asio::read_until(s, sb1, match_char('Z'), ec);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  length = boost::asio::read_until(s, sb2, match_char('Z'), ec);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  length = boost::asio::read_until(s, sb2, match_char('Z'), ec);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  length = boost::asio::read_until(s, sb2, match_char('Z'), ec);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  length = boost::asio::read_until(s, sb2, match_char('Y'), ec);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  length = boost::asio::read_until(s, sb2, match_char('Y'), ec);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  length = boost::asio::read_until(s, sb2, match_char('Y'), ec);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::streambuf sb1;
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::streambuf sb2(25);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::async_read_until(s, sb1, 'Z',
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::async_read_until(s, sb1, 'Z',
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::async_read_until(s, sb1, 'Z',
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::async_read_until(s, sb2, 'Z',
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::async_read_until(s, sb2, 'Z',
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::async_read_until(s, sb2, 'Z',
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::async_read_until(s, sb2, 'Y',
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::async_read_until(s, sb2, 'Y',
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::async_read_until(s, sb2, 'Y',
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  int i = boost::asio::async_read_until(s, sb2, 'Y',
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::streambuf sb1;
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::streambuf sb2(25);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::async_read_until(s, sb1, "XYZ",
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::async_read_until(s, sb1, "XYZ",
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::async_read_until(s, sb1, "XYZ",
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::async_read_until(s, sb2, "XYZ",
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::async_read_until(s, sb2, "XYZ",
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::async_read_until(s, sb2, "XYZ",
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::async_read_until(s, sb2, "WXY",
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::async_read_until(s, sb2, "WXY",
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::async_read_until(s, sb2, "WXY",
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  int i = boost::asio::async_read_until(s, sb2, "WXY",
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::streambuf sb1;
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::streambuf sb2(25);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::async_read_until(s, sb1, match_char('Z'),
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::async_read_until(s, sb1, match_char('Z'),
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::async_read_until(s, sb1, match_char('Z'),
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::async_read_until(s, sb2, match_char('Z'),
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::async_read_until(s, sb2, match_char('Z'),
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::async_read_until(s, sb2, match_char('Z'),
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  BOOST_ASIO_CHECK(ec == boost::asio::error::not_found);
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::async_read_until(s, sb2, match_char('Y'),
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::async_read_until(s, sb2, match_char('Y'),
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  boost::asio::async_read_until(s, sb2, match_char('Y'),
/home/kaworu/boost_1_69_0/libs/asio/test/read_until.cpp:  int i = boost::asio::async_read_until(s, sb2, match_char('Y'),
/home/kaworu/boost_1_69_0/libs/asio/test/signal_set.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/windows/object_handle.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/windows/object_handle.cpp:  namespace win = boost::asio::windows;
/home/kaworu/boost_1_69_0/libs/asio/test/windows/stream_handle.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/windows/stream_handle.cpp:  namespace win = boost::asio::windows;
/home/kaworu/boost_1_69_0/libs/asio/test/windows/overlapped_ptr.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/windows/overlapped_ptr.cpp:  namespace win = boost::asio::windows;
/home/kaworu/boost_1_69_0/libs/asio/test/windows/random_access_handle.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/windows/random_access_handle.cpp:  namespace win = boost::asio::windows;
/home/kaworu/boost_1_69_0/libs/asio/test/windows/random_access_handle.cpp:    boost::asio::uint64_t offset = 0;
/home/kaworu/boost_1_69_0/libs/asio/test/socket_base.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/socket_base.cpp:  namespace ip = boost::asio::ip;
/home/kaworu/boost_1_69_0/libs/asio/test/socket_base.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/socket_base.cpp:  namespace ip = boost::asio::ip;
/home/kaworu/boost_1_69_0/libs/asio/test/socket_base.cpp:  bool not_root = (ec == boost::asio::error::access_denied);
/home/kaworu/boost_1_69_0/libs/asio/test/socket_base.cpp:  BOOST_ASIO_CHECK_MESSAGE(ec == boost::asio::error::no_protocol_option,
/home/kaworu/boost_1_69_0/libs/asio/test/socket_base.cpp:  BOOST_ASIO_CHECK_MESSAGE(ec == boost::asio::error::no_protocol_option,
/home/kaworu/boost_1_69_0/libs/asio/test/socket_base.cpp:  BOOST_ASIO_CHECK_MESSAGE(ec == boost::asio::error::no_protocol_option,
/home/kaworu/boost_1_69_0/libs/asio/test/socket_base.cpp:  BOOST_ASIO_CHECK_MESSAGE(ec == boost::asio::error::no_protocol_option,
/home/kaworu/boost_1_69_0/libs/asio/test/socket_base.cpp:  BOOST_ASIO_CHECK_MESSAGE(ec == boost::asio::error::no_protocol_option,
/home/kaworu/boost_1_69_0/libs/asio/test/socket_base.cpp:  BOOST_ASIO_CHECK_MESSAGE(ec == boost::asio::error::no_protocol_option,
/home/kaworu/boost_1_69_0/libs/asio/test/socket_base.cpp:  BOOST_ASIO_CHECK_MESSAGE(ec == boost::asio::error::no_protocol_option,
/home/kaworu/boost_1_69_0/libs/asio/test/socket_base.cpp:  BOOST_ASIO_CHECK_MESSAGE(ec == boost::asio::error::no_protocol_option,
/home/kaworu/boost_1_69_0/libs/asio/test/socket_base.cpp:  BOOST_ASIO_CHECK_MESSAGE(ec == boost::asio::error::no_protocol_option,
/home/kaworu/boost_1_69_0/libs/asio/test/socket_base.cpp:  BOOST_ASIO_CHECK_MESSAGE(ec == boost::asio::error::no_protocol_option,
/home/kaworu/boost_1_69_0/libs/asio/test/is_write_buffered.cpp:  typedef boost::asio::io_context io_context_type;
/home/kaworu/boost_1_69_0/libs/asio/test/is_write_buffered.cpp:  test_stream(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/test/is_write_buffered.cpp:    boost::asio::post(io_context_,
/home/kaworu/boost_1_69_0/libs/asio/test/is_write_buffered.cpp:        boost::asio::detail::bind_handler(handler, error, 0));
/home/kaworu/boost_1_69_0/libs/asio/test/is_write_buffered.cpp:    boost::asio::post(io_context_,
/home/kaworu/boost_1_69_0/libs/asio/test/is_write_buffered.cpp:        boost::asio::detail::bind_handler(handler, error, 0));
/home/kaworu/boost_1_69_0/libs/asio/test/is_write_buffered.cpp:  BOOST_ASIO_CHECK(!boost::asio::is_write_buffered<
/home/kaworu/boost_1_69_0/libs/asio/test/is_write_buffered.cpp:      boost::asio::ip::tcp::socket>::value);
/home/kaworu/boost_1_69_0/libs/asio/test/is_write_buffered.cpp:  BOOST_ASIO_CHECK(!boost::asio::is_write_buffered<
/home/kaworu/boost_1_69_0/libs/asio/test/is_write_buffered.cpp:      boost::asio::buffered_read_stream<
/home/kaworu/boost_1_69_0/libs/asio/test/is_write_buffered.cpp:        boost::asio::ip::tcp::socket> >::value);
/home/kaworu/boost_1_69_0/libs/asio/test/is_write_buffered.cpp:  BOOST_ASIO_CHECK(!!boost::asio::is_write_buffered<
/home/kaworu/boost_1_69_0/libs/asio/test/is_write_buffered.cpp:      boost::asio::buffered_write_stream<
/home/kaworu/boost_1_69_0/libs/asio/test/is_write_buffered.cpp:        boost::asio::ip::tcp::socket> >::value);
/home/kaworu/boost_1_69_0/libs/asio/test/is_write_buffered.cpp:  BOOST_ASIO_CHECK(!!boost::asio::is_write_buffered<
/home/kaworu/boost_1_69_0/libs/asio/test/is_write_buffered.cpp:      boost::asio::buffered_stream<boost::asio::ip::tcp::socket> >::value);
/home/kaworu/boost_1_69_0/libs/asio/test/is_write_buffered.cpp:  BOOST_ASIO_CHECK(!boost::asio::is_write_buffered<test_stream>::value);
/home/kaworu/boost_1_69_0/libs/asio/test/is_write_buffered.cpp:  BOOST_ASIO_CHECK(!boost::asio::is_write_buffered<
/home/kaworu/boost_1_69_0/libs/asio/test/is_write_buffered.cpp:      boost::asio::buffered_read_stream<test_stream> >::value);
/home/kaworu/boost_1_69_0/libs/asio/test/is_write_buffered.cpp:  BOOST_ASIO_CHECK(!!boost::asio::is_write_buffered<
/home/kaworu/boost_1_69_0/libs/asio/test/is_write_buffered.cpp:      boost::asio::buffered_write_stream<test_stream> >::value);
/home/kaworu/boost_1_69_0/libs/asio/test/is_write_buffered.cpp:  BOOST_ASIO_CHECK(!!boost::asio::is_write_buffered<
/home/kaworu/boost_1_69_0/libs/asio/test/is_write_buffered.cpp:      boost::asio::buffered_stream<test_stream> >::value);
/home/kaworu/boost_1_69_0/libs/asio/test/posix/stream_descriptor.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/posix/stream_descriptor.cpp:  namespace posix = boost::asio::posix;
/home/kaworu/boost_1_69_0/libs/asio/test/generic/datagram_protocol.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/generic/datagram_protocol.cpp:  namespace generic = boost::asio::generic;
/home/kaworu/boost_1_69_0/libs/asio/test/generic/datagram_protocol.cpp:    boost::asio::ip::udp::socket udp_socket(ioc);
/home/kaworu/boost_1_69_0/libs/asio/test/generic/datagram_protocol.cpp:    socket1 = boost::asio::ip::udp::socket(ioc);
/home/kaworu/boost_1_69_0/libs/asio/test/generic/raw_protocol.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/generic/raw_protocol.cpp:  namespace generic = boost::asio::generic;
/home/kaworu/boost_1_69_0/libs/asio/test/generic/raw_protocol.cpp:    boost::asio::ip::icmp::socket icmp_socket(ioc);
/home/kaworu/boost_1_69_0/libs/asio/test/generic/raw_protocol.cpp:    socket1 = boost::asio::ip::icmp::socket(ioc);
/home/kaworu/boost_1_69_0/libs/asio/test/generic/seq_packet_protocol.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/generic/seq_packet_protocol.cpp:  namespace generic = boost::asio::generic;
/home/kaworu/boost_1_69_0/libs/asio/test/generic/stream_protocol.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/generic/stream_protocol.cpp:  namespace generic = boost::asio::generic;
/home/kaworu/boost_1_69_0/libs/asio/test/generic/stream_protocol.cpp:    boost::asio::ip::tcp::socket tcp_socket(ioc);
/home/kaworu/boost_1_69_0/libs/asio/test/generic/stream_protocol.cpp:    socket1 = boost::asio::ip::tcp::socket(ioc);
/home/kaworu/boost_1_69_0/libs/asio/test/ssl/stream.cpp:bool verify_callback(bool, boost::asio::ssl::verify_context&)
/home/kaworu/boost_1_69_0/libs/asio/test/ssl/stream.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/ssl/stream.cpp:  namespace ip = boost::asio::ip;
/home/kaworu/boost_1_69_0/libs/asio/test/ssl/stream.cpp:    boost::asio::ssl::context context(boost::asio::ssl::context::sslv23);
/home/kaworu/boost_1_69_0/libs/asio/test/local/datagram_protocol.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/local/datagram_protocol.cpp:  namespace local = boost::asio::local;
/home/kaworu/boost_1_69_0/libs/asio/test/local/stream_protocol.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/local/stream_protocol.cpp:  namespace local = boost::asio::local;
/home/kaworu/boost_1_69_0/libs/asio/test/local/connect_pair.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/local/connect_pair.cpp:  namespace local = boost::asio::local;
/home/kaworu/boost_1_69_0/libs/asio/test/local/connect_pair.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/test/strand.cpp:using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/strand.cpp:namespace chronons = boost::asio::chrono;
/home/kaworu/boost_1_69_0/libs/asio/test/strand.cpp:  boost::asio::detail::thread thread1(bindns::bind(io_context_run, &ioc));
/home/kaworu/boost_1_69_0/libs/asio/test/strand.cpp:  boost::asio::detail::thread thread2(bindns::bind(io_context_run, &ioc));
/home/kaworu/boost_1_69_0/libs/asio/test/serial_port_base.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typedef typename boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typename boost::asio::associated_allocator<handler_type>::type a
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:    = boost::asio::get_associated_allocator(completion.completion_handler);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typename boost::asio::associated_executor<handler_type>::type ex
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:    = boost::asio::get_associated_executor(completion.completion_handler);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typedef typename boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typename boost::asio::associated_allocator<handler_type>::type a
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:    = boost::asio::get_associated_allocator(completion.completion_handler);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typename boost::asio::associated_executor<handler_type>::type ex
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:    = boost::asio::get_associated_executor(completion.completion_handler);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:          boost::system::error_code(boost::asio::error::operation_aborted)), a);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typedef typename boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typename boost::asio::associated_allocator<handler_type>::type a
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:    = boost::asio::get_associated_allocator(completion.completion_handler);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typename boost::asio::associated_executor<handler_type>::type ex
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:    = boost::asio::get_associated_executor(completion.completion_handler);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typedef typename boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typename boost::asio::associated_allocator<handler_type>::type a
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:    = boost::asio::get_associated_allocator(completion.completion_handler);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typename boost::asio::associated_executor<handler_type>::type ex
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:    = boost::asio::get_associated_executor(completion.completion_handler);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typedef typename boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typename boost::asio::associated_allocator<handler_type>::type a
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:    = boost::asio::get_associated_allocator(completion.completion_handler);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typename boost::asio::associated_executor<handler_type>::type ex
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:    = boost::asio::get_associated_executor(completion.completion_handler);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:          boost::system::error_code(boost::asio::error::operation_aborted),
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typedef typename boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typename boost::asio::associated_allocator<handler_type>::type a
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:    = boost::asio::get_associated_allocator(completion.completion_handler);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typename boost::asio::associated_executor<handler_type>::type ex
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:    = boost::asio::get_associated_executor(completion.completion_handler);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typedef typename boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typename boost::asio::associated_allocator<handler_type>::type a
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:    = boost::asio::get_associated_allocator(completion.completion_handler);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typename boost::asio::associated_executor<handler_type>::type ex
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:    = boost::asio::get_associated_executor(completion.completion_handler);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typedef typename boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typename boost::asio::associated_allocator<handler_type>::type a
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:    = boost::asio::get_associated_allocator(completion.completion_handler);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typename boost::asio::associated_executor<handler_type>::type ex
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:    = boost::asio::get_associated_executor(completion.completion_handler);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:          boost::system::error_code(boost::asio::error::operation_aborted),
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typedef typename boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typename boost::asio::associated_allocator<handler_type>::type a
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:    = boost::asio::get_associated_allocator(completion.completion_handler);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typename boost::asio::associated_executor<handler_type>::type ex
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:    = boost::asio::get_associated_executor(completion.completion_handler);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typedef typename boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typename boost::asio::associated_allocator<handler_type>::type a
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:    = boost::asio::get_associated_allocator(completion.completion_handler);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typename boost::asio::associated_executor<handler_type>::type ex
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:    = boost::asio::get_associated_executor(completion.completion_handler);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typedef typename boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typename boost::asio::associated_allocator<handler_type>::type a
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:    = boost::asio::get_associated_allocator(completion.completion_handler);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typename boost::asio::associated_executor<handler_type>::type ex
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:    = boost::asio::get_associated_executor(completion.completion_handler);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:          boost::system::error_code(boost::asio::error::operation_aborted),
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typedef typename boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typename boost::asio::associated_allocator<handler_type>::type a
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:    = boost::asio::get_associated_allocator(completion.completion_handler);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:  typename boost::asio::associated_executor<handler_type>::type ex
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/async_ops.hpp:    = boost::asio::get_associated_executor(completion.completion_handler);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:typename boost::asio::async_result<
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  typename boost::asio::handler_type<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:deprecated_async_op_0(boost::asio::io_context& ctx,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  typedef typename boost::asio::handler_type<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  boost::asio::async_result<handler_type> result(handler);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:typename boost::asio::async_result<
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  typename boost::asio::handler_type<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:deprecated_async_op_ec_0(boost::asio::io_context& ctx,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  typedef typename boost::asio::handler_type<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  boost::asio::async_result<handler_type> result(handler);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:          boost::system::error_code(boost::asio::error::operation_aborted)));
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:typename boost::asio::async_result<
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  typename boost::asio::handler_type<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:deprecated_async_op_ex_0(boost::asio::io_context& ctx,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  typedef typename boost::asio::handler_type<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  boost::asio::async_result<handler_type> result(handler);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:typename boost::asio::async_result<
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  typename boost::asio::handler_type<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:deprecated_async_op_1(boost::asio::io_context& ctx,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  typedef typename boost::asio::handler_type<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  boost::asio::async_result<handler_type> result(handler);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:typename boost::asio::async_result<
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  typename boost::asio::handler_type<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:deprecated_async_op_ec_1(boost::asio::io_context& ctx,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  typedef typename boost::asio::handler_type<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  boost::asio::async_result<handler_type> result(handler);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:          boost::system::error_code(boost::asio::error::operation_aborted), 0));
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:typename boost::asio::async_result<
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  typename boost::asio::handler_type<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:deprecated_async_op_ex_1(boost::asio::io_context& ctx,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  typedef typename boost::asio::handler_type<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  boost::asio::async_result<handler_type> result(handler);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:typename boost::asio::async_result<
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  typename boost::asio::handler_type<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:deprecated_async_op_2(boost::asio::io_context& ctx,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  typedef typename boost::asio::handler_type<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  boost::asio::async_result<handler_type> result(handler);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:typename boost::asio::async_result<
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  typename boost::asio::handler_type<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:deprecated_async_op_ec_2(boost::asio::io_context& ctx,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  typedef typename boost::asio::handler_type<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  boost::asio::async_result<handler_type> result(handler);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:          boost::system::error_code(boost::asio::error::operation_aborted),
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:typename boost::asio::async_result<
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  typename boost::asio::handler_type<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:deprecated_async_op_ex_2(boost::asio::io_context& ctx,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  typedef typename boost::asio::handler_type<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  boost::asio::async_result<handler_type> result(handler);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:typename boost::asio::async_result<
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  typename boost::asio::handler_type<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:deprecated_async_op_3(boost::asio::io_context& ctx,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  typedef typename boost::asio::handler_type<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  boost::asio::async_result<handler_type> result(handler);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:typename boost::asio::async_result<
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  typename boost::asio::handler_type<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:deprecated_async_op_ec_3(boost::asio::io_context& ctx,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  typedef typename boost::asio::handler_type<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  boost::asio::async_result<handler_type> result(handler);
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:          boost::system::error_code(boost::asio::error::operation_aborted),
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:typename boost::asio::async_result<
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  typename boost::asio::handler_type<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:deprecated_async_op_ex_3(boost::asio::io_context& ctx,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  typedef typename boost::asio::handler_type<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/test/archetypes/deprecated_async_ops.hpp:  boost::asio::async_result<handler_type> result(handler);
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_stream.cpp:typedef boost::asio::buffered_stream<
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_stream.cpp:    boost::asio::ip::tcp::socket> stream_type;
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_stream.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_stream.cpp:    array<boost::asio::mutable_buffer, 2> mutable_buffers = {{
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_stream.cpp:        boost::asio::buffer(mutable_char_buffer, 10),
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_stream.cpp:        boost::asio::buffer(mutable_char_buffer + 10, 10) }};
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_stream.cpp:    array<boost::asio::const_buffer, 2> const_buffers = {{
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_stream.cpp:        boost::asio::buffer(const_char_buffer, 10),
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_stream.cpp:        boost::asio::buffer(const_char_buffer + 10, 10) }};
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_stream.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_stream.cpp:  boost::asio::ip::tcp::acceptor acceptor(io_context,
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_stream.cpp:      boost::asio::ip::tcp::endpoint(boost::asio::ip::tcp::v4(), 0));
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_stream.cpp:  boost::asio::ip::tcp::endpoint server_endpoint = acceptor.local_endpoint();
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_stream.cpp:  server_endpoint.address(boost::asio::ip::address_v4::loopback());
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_stream.cpp:  const boost::asio::const_buffer write_buf = boost::asio::buffer(write_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_stream.cpp:        boost::asio::buffer(write_buf + bytes_written));
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_stream.cpp:  const boost::asio::mutable_buffer read_buf = boost::asio::buffer(read_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_stream.cpp:        boost::asio::buffer(read_buf + bytes_read));
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_stream.cpp:        boost::asio::buffer(write_buf + bytes_written));
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_stream.cpp:        boost::asio::buffer(read_buf + bytes_read));
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_stream.cpp:      boost::asio::buffer(read_buf), error);
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_stream.cpp:  BOOST_ASIO_CHECK(error == boost::asio::error::eof);
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_stream.cpp:  BOOST_ASIO_CHECK(e == boost::asio::error::eof);
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_stream.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_stream.cpp:  boost::asio::ip::tcp::acceptor acceptor(io_context,
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_stream.cpp:      boost::asio::ip::tcp::endpoint(boost::asio::ip::tcp::v4(), 0));
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_stream.cpp:  boost::asio::ip::tcp::endpoint server_endpoint = acceptor.local_endpoint();
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_stream.cpp:  server_endpoint.address(boost::asio::ip::address_v4::loopback());
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_stream.cpp:  const boost::asio::const_buffer write_buf = boost::asio::buffer(write_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_stream.cpp:        boost::asio::buffer(write_buf + bytes_written),
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_stream.cpp:  const boost::asio::mutable_buffer read_buf = boost::asio::buffer(read_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_stream.cpp:        boost::asio::buffer(read_buf + bytes_read),
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_stream.cpp:        boost::asio::buffer(write_buf + bytes_written),
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_stream.cpp:        boost::asio::buffer(read_buf + bytes_read),
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_stream.cpp:  client_socket.async_read_some(boost::asio::buffer(read_buf), handle_read_eof);
/home/kaworu/boost_1_69_0/libs/asio/test/serial_port.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/latency/udp_server.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/libs/asio/test/latency/udp_server.cpp:class udp_server : boost::asio::coroutine
/home/kaworu/boost_1_69_0/libs/asio/test/latency/udp_server.cpp:  udp_server(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/libs/asio/test/latency/udp_server.cpp:          boost::asio::buffer(buffer_),
/home/kaworu/boost_1_69_0/libs/asio/test/latency/udp_server.cpp:        socket_.send_to(boost::asio::buffer(buffer_, n), sender_, 0, ec);
/home/kaworu/boost_1_69_0/libs/asio/test/latency/udp_server.cpp:  boost::asio::io_context io_context(1);
/home/kaworu/boost_1_69_0/libs/asio/test/latency/udp_client.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/libs/asio/test/latency/udp_client.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/test/latency/udp_client.cpp:  udp::endpoint target(boost::asio::ip::make_address(ip), first_port);
/home/kaworu/boost_1_69_0/libs/asio/test/latency/udp_client.cpp:    socket.send_to(boost::asio::buffer(write_buf), target, 0, ec);
/home/kaworu/boost_1_69_0/libs/asio/test/latency/udp_client.cpp:    do socket.receive(boost::asio::buffer(read_buf), 0, ec);
/home/kaworu/boost_1_69_0/libs/asio/test/latency/udp_client.cpp:    while (ec == boost::asio::error::would_block);
/home/kaworu/boost_1_69_0/libs/asio/test/latency/tcp_server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/test/latency/tcp_server.cpp:class tcp_server : boost::asio::coroutine
/home/kaworu/boost_1_69_0/libs/asio/test/latency/tcp_server.cpp:        yield boost::asio::async_read(socket_,
/home/kaworu/boost_1_69_0/libs/asio/test/latency/tcp_server.cpp:            boost::asio::buffer(buffer_), ref(this));
/home/kaworu/boost_1_69_0/libs/asio/test/latency/tcp_server.cpp:          yield boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/libs/asio/test/latency/tcp_server.cpp:              boost::asio::buffer(buffer_), ref(this));
/home/kaworu/boost_1_69_0/libs/asio/test/latency/tcp_server.cpp:  boost::asio::io_context io_context(1);
/home/kaworu/boost_1_69_0/libs/asio/test/latency/tcp_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/test/latency/tcp_client.cpp:    return (ec && ec != boost::asio::error::would_block) ? 0 : ~0;
/home/kaworu/boost_1_69_0/libs/asio/test/latency/tcp_client.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/test/latency/tcp_client.cpp:    tcp::endpoint target(boost::asio::ip::make_address(ip), port);
/home/kaworu/boost_1_69_0/libs/asio/test/latency/tcp_client.cpp:    boost::asio::write(socket,
/home/kaworu/boost_1_69_0/libs/asio/test/latency/tcp_client.cpp:        boost::asio::buffer(write_buf),
/home/kaworu/boost_1_69_0/libs/asio/test/latency/tcp_client.cpp:    boost::asio::read(socket,
/home/kaworu/boost_1_69_0/libs/asio/test/latency/tcp_client.cpp:        boost::asio::buffer(read_buf),
/home/kaworu/boost_1_69_0/libs/asio/test/coroutine.cpp:void yield_break_coro(boost::asio::coroutine& coro)
/home/kaworu/boost_1_69_0/libs/asio/test/coroutine.cpp:  boost::asio::coroutine coro;
/home/kaworu/boost_1_69_0/libs/asio/test/coroutine.cpp:void return_coro(boost::asio::coroutine& coro)
/home/kaworu/boost_1_69_0/libs/asio/test/coroutine.cpp:  boost::asio::coroutine coro;
/home/kaworu/boost_1_69_0/libs/asio/test/coroutine.cpp:void exception_coro(boost::asio::coroutine& coro)
/home/kaworu/boost_1_69_0/libs/asio/test/coroutine.cpp:  boost::asio::coroutine coro;
/home/kaworu/boost_1_69_0/libs/asio/test/coroutine.cpp:void fall_off_end_coro(boost::asio::coroutine& coro)
/home/kaworu/boost_1_69_0/libs/asio/test/coroutine.cpp:  boost::asio::coroutine coro;
/home/kaworu/boost_1_69_0/libs/asio/test/is_read_buffered.cpp:  typedef boost::asio::io_context io_context_type;
/home/kaworu/boost_1_69_0/libs/asio/test/is_read_buffered.cpp:  test_stream(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/test/is_read_buffered.cpp:    boost::asio::post(io_context_,
/home/kaworu/boost_1_69_0/libs/asio/test/is_read_buffered.cpp:        boost::asio::detail::bind_handler(handler, error, 0));
/home/kaworu/boost_1_69_0/libs/asio/test/is_read_buffered.cpp:    boost::asio::post(io_context_,
/home/kaworu/boost_1_69_0/libs/asio/test/is_read_buffered.cpp:        boost::asio::detail::bind_handler(handler, error, 0));
/home/kaworu/boost_1_69_0/libs/asio/test/is_read_buffered.cpp:  BOOST_ASIO_CHECK(!boost::asio::is_read_buffered<
/home/kaworu/boost_1_69_0/libs/asio/test/is_read_buffered.cpp:      boost::asio::ip::tcp::socket>::value);
/home/kaworu/boost_1_69_0/libs/asio/test/is_read_buffered.cpp:  BOOST_ASIO_CHECK(!!boost::asio::is_read_buffered<
/home/kaworu/boost_1_69_0/libs/asio/test/is_read_buffered.cpp:      boost::asio::buffered_read_stream<
/home/kaworu/boost_1_69_0/libs/asio/test/is_read_buffered.cpp:        boost::asio::ip::tcp::socket> >::value);
/home/kaworu/boost_1_69_0/libs/asio/test/is_read_buffered.cpp:  BOOST_ASIO_CHECK(!boost::asio::is_read_buffered<
/home/kaworu/boost_1_69_0/libs/asio/test/is_read_buffered.cpp:      boost::asio::buffered_write_stream<
/home/kaworu/boost_1_69_0/libs/asio/test/is_read_buffered.cpp:        boost::asio::ip::tcp::socket> >::value);
/home/kaworu/boost_1_69_0/libs/asio/test/is_read_buffered.cpp:  BOOST_ASIO_CHECK(!!boost::asio::is_read_buffered<
/home/kaworu/boost_1_69_0/libs/asio/test/is_read_buffered.cpp:      boost::asio::buffered_stream<boost::asio::ip::tcp::socket> >::value);
/home/kaworu/boost_1_69_0/libs/asio/test/is_read_buffered.cpp:  BOOST_ASIO_CHECK(!boost::asio::is_read_buffered<test_stream>::value);
/home/kaworu/boost_1_69_0/libs/asio/test/is_read_buffered.cpp:  BOOST_ASIO_CHECK(!!boost::asio::is_read_buffered<
/home/kaworu/boost_1_69_0/libs/asio/test/is_read_buffered.cpp:      boost::asio::buffered_read_stream<test_stream> >::value);
/home/kaworu/boost_1_69_0/libs/asio/test/is_read_buffered.cpp:  BOOST_ASIO_CHECK(!boost::asio::is_read_buffered<
/home/kaworu/boost_1_69_0/libs/asio/test/is_read_buffered.cpp:      boost::asio::buffered_write_stream<test_stream> >::value);
/home/kaworu/boost_1_69_0/libs/asio/test/is_read_buffered.cpp:  BOOST_ASIO_CHECK(!!boost::asio::is_read_buffered<
/home/kaworu/boost_1_69_0/libs/asio/test/is_read_buffered.cpp:      boost::asio::buffered_stream<test_stream> >::value);
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:void decrement_to_zero(boost::asio::system_timer* t, int* count)
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:    t->expires_at(t->expiry() + boost::asio::chrono::seconds(1));
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:void cancel_timer(boost::asio::system_timer* t)
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:void cancel_one_timer(boost::asio::system_timer* t)
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:boost::asio::system_timer::time_point now()
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:  return boost::asio::system_timer::clock_type::now();
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:  using boost::asio::chrono::seconds;
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:  using boost::asio::chrono::microseconds;
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:  boost::asio::system_timer::time_point start = now();
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:  boost::asio::system_timer t1(ioc, seconds(1));
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:  boost::asio::system_timer::time_point end = now();
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:  boost::asio::system_timer::time_point expected_end = start + seconds(1);
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:  boost::asio::system_timer t2(ioc, seconds(1) + microseconds(500000));
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:  boost::asio::system_timer t3(ioc, seconds(5));
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:  boost::asio::system_timer t4(ioc, seconds(1));
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:  boost::asio::system_timer t5(ioc, seconds(10));
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:  boost::asio::system_timer t6(ioc, seconds(1));
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:  boost::asio::system_timer t7(ioc, seconds(3));
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:  boost::asio::system_timer t8(ioc, seconds(1));
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:  static boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:    boost::asio::system_timer t;
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:      t.expires_at((boost::asio::system_timer::time_point::max)());
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:  static boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:    boost::asio::system_timer t;
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:    timers[i].t.expires_at((boost::asio::system_timer::time_point::max)());
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:    timers[i].t.expires_at((boost::asio::system_timer::time_point::min)());
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:void io_context_run(boost::asio::io_context* ioc)
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:  boost::asio::executor_work_guard<boost::asio::io_context::executor_type> work
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:    = boost::asio::make_work_guard(ioc);
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:  boost::asio::system_timer t1(ioc);
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:  boost::asio::system_timer t2(ioc);
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:  boost::asio::detail::thread th(bindns::bind(io_context_run, &ioc));
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:  t2.expires_after(boost::asio::chrono::seconds(2));
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:  t1.expires_after(boost::asio::chrono::seconds(2));
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:  t2.expires_after(boost::asio::chrono::seconds(4));
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:boost::asio::system_timer make_timer(boost::asio::io_context& ioc, int* count)
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:  boost::asio::system_timer t(ioc);
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:  t.expires_after(boost::asio::chrono::seconds(1));
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:  boost::asio::io_context io_context1;
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:  boost::asio::io_context io_context2;
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:  boost::asio::system_timer t1 = make_timer(io_context1, &count);
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:  boost::asio::system_timer t2 = make_timer(io_context2, &count);
/home/kaworu/boost_1_69_0/libs/asio/test/system_timer.cpp:  boost::asio::system_timer t3 = std::move(t1);
/home/kaworu/boost_1_69_0/libs/asio/test/unit_test.hpp:  boost::asio::detail::test_name();
/home/kaworu/boost_1_69_0/libs/asio/test/unit_test.hpp:  boost::asio::detail::test_errors();
/home/kaworu/boost_1_69_0/libs/asio/test/unit_test.hpp:  long errors = boost::asio::detail::test_errors();
/home/kaworu/boost_1_69_0/libs/asio/test/unit_test.hpp:  long errors_before = boost::asio::detail::test_errors();
/home/kaworu/boost_1_69_0/libs/asio/test/unit_test.hpp:      << boost::asio::detail::test_name() << ": " \
/home/kaworu/boost_1_69_0/libs/asio/test/unit_test.hpp:    ++boost::asio::detail::test_errors(); \
/home/kaworu/boost_1_69_0/libs/asio/test/unit_test.hpp:      << boost::asio::detail::test_name() << ": " \
/home/kaworu/boost_1_69_0/libs/asio/test/unit_test.hpp:    ++boost::asio::detail::test_errors(); \
/home/kaworu/boost_1_69_0/libs/asio/test/unit_test.hpp:      << boost::asio::detail::test_name() << ": " \
/home/kaworu/boost_1_69_0/libs/asio/test/unit_test.hpp:      << boost::asio::detail::test_name() << ": " \
/home/kaworu/boost_1_69_0/libs/asio/test/unit_test.hpp:    ++boost::asio::detail::test_errors(); \
/home/kaworu/boost_1_69_0/libs/asio/test/unit_test.hpp:    boost::asio::detail::begin_test_suite(name); \
/home/kaworu/boost_1_69_0/libs/asio/test/unit_test.hpp:    return boost::asio::detail::end_test_suite(name); \
/home/kaworu/boost_1_69_0/libs/asio/test/unit_test.hpp:  boost::asio::detail::run_test<&test>(#test);
/home/kaworu/boost_1_69_0/libs/asio/test/unit_test.hpp:  boost::asio::detail::compile_test<&test>(#test);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mutable_buffer mb1 = boost::asio::buffer(dest_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mutable_buffer mb2 = boost::asio::buffer(source_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mb1 = boost::asio::buffer(dest_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  const_buffer cb1 = boost::asio::buffer(source_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mb1 = boost::asio::buffer(dest_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mutable_buffers_1 mbc1 = boost::asio::buffer(source_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mb1 = boost::asio::buffer(dest_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  const_buffers_1 cbc1 = const_buffers_1(boost::asio::buffer(source_data));
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mbc1 = boost::asio::buffer(dest_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mb1 = boost::asio::buffer(source_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mbc1 = boost::asio::buffer(dest_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  cb1 = boost::asio::buffer(source_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mbc1 = boost::asio::buffer(dest_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mutable_buffers_1 mbc2 = boost::asio::buffer(source_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mbc1 = boost::asio::buffer(dest_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  cbc1 = const_buffers_1(boost::asio::buffer(source_data));
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mb1 = boost::asio::buffer(dest_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mv1.push_back(boost::asio::buffer(source_data, 5));
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mv1.push_back(boost::asio::buffer(source_data) + 5);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mb1 = boost::asio::buffer(dest_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  cv1.push_back(boost::asio::buffer(source_data, 6));
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  cv1.push_back(boost::asio::buffer(source_data) + 6);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mv1.push_back(boost::asio::buffer(dest_data, 7));
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mv1.push_back(boost::asio::buffer(dest_data) + 7);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  cb1 = boost::asio::buffer(source_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mv1.push_back(boost::asio::buffer(dest_data, 7));
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mv1.push_back(boost::asio::buffer(dest_data) + 7);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  cv1.push_back(boost::asio::buffer(source_data, 8));
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  cv1.push_back(boost::asio::buffer(source_data) + 8);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mb1 = boost::asio::buffer(dest_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mb2 = boost::asio::buffer(source_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mb1 = boost::asio::buffer(dest_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  cb1 = boost::asio::buffer(source_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mb1 = boost::asio::buffer(dest_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mbc1 = boost::asio::buffer(source_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mb1 = boost::asio::buffer(dest_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  cbc1 = const_buffers_1(boost::asio::buffer(source_data));
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mbc1 = boost::asio::buffer(dest_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mb1 = boost::asio::buffer(source_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mbc1 = boost::asio::buffer(dest_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  cb1 = boost::asio::buffer(source_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mbc1 = boost::asio::buffer(dest_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mbc2 = boost::asio::buffer(source_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mbc1 = boost::asio::buffer(dest_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  cbc1 = const_buffers_1(boost::asio::buffer(source_data));
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mb1 = boost::asio::buffer(dest_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mv1.push_back(boost::asio::buffer(source_data, 5));
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mv1.push_back(boost::asio::buffer(source_data) + 5);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mb1 = boost::asio::buffer(dest_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  cv1.push_back(boost::asio::buffer(source_data, 6));
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  cv1.push_back(boost::asio::buffer(source_data) + 6);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mv1.push_back(boost::asio::buffer(dest_data, 7));
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mv1.push_back(boost::asio::buffer(dest_data) + 7);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  cb1 = boost::asio::buffer(source_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mv1.push_back(boost::asio::buffer(dest_data, 7));
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  mv1.push_back(boost::asio::buffer(dest_data) + 7);
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  cv1.push_back(boost::asio::buffer(source_data, 8));
/home/kaworu/boost_1_69_0/libs/asio/test/buffer.cpp:  cv1.push_back(boost::asio::buffer(source_data) + 8);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  typedef boost::asio::io_context::executor_type executor_type;
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  test_random_access_device(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bool check_buffers(boost::asio::uint64_t offset,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      size_t buffer_length = boost::asio::buffer_size(*iter);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bool check_buffers(boost::asio::uint64_t offset,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:    return check_buffers(offset, boost::asio::buffer_sequence_begin(buffers),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:        boost::asio::buffer_sequence_end(buffers), length);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  size_t read_some_at(boost::asio::uint64_t offset,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:    return boost::asio::buffer_copy(buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:        boost::asio::buffer(data_, length_) + offset,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  size_t read_some_at(boost::asio::uint64_t offset,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  void async_read_some_at(boost::asio::uint64_t offset,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:    boost::asio::post(get_executor(),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:        boost::asio::detail::bind_handler(
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::io_context& io_context_;
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::mutable_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:    = boost::asio::buffer(read_buf, sizeof(read_buf));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  size_t bytes_transferred = boost::asio::read_at(s, 0, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  std::vector<boost::asio::mutable_buffer> buffers;
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  buffers.push_back(boost::asio::buffer(read_buf, 32));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  buffers.push_back(boost::asio::buffer(read_buf) + 32);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  size_t bytes_transferred = boost::asio::read_at(s, 0, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::streambuf sb(sizeof(read_data));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  size_t bytes_transferred = boost::asio::read_at(s, 0, sb);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::mutable_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:    = boost::asio::buffer(read_buf, sizeof(read_buf));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  size_t bytes_transferred = boost::asio::read_at(s, 0, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  std::vector<boost::asio::mutable_buffer> buffers;
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  buffers.push_back(boost::asio::buffer(read_buf, 32));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  buffers.push_back(boost::asio::buffer(read_buf) + 32);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  size_t bytes_transferred = boost::asio::read_at(s, 0, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::streambuf sb(sizeof(read_data));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  size_t bytes_transferred = boost::asio::read_at(s, 0, sb, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::mutable_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:    = boost::asio::buffer(read_buf, sizeof(read_buf));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  size_t bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  std::vector<boost::asio::mutable_buffer> buffers;
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  buffers.push_back(boost::asio::buffer(read_buf, 32));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  buffers.push_back(boost::asio::buffer(read_buf) + 32);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  size_t bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::streambuf sb(sizeof(read_data));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  size_t bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::mutable_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:    = boost::asio::buffer(read_buf, sizeof(read_buf));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  size_t bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  std::vector<boost::asio::mutable_buffer> buffers;
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  buffers.push_back(boost::asio::buffer(read_buf, 32));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  buffers.push_back(boost::asio::buffer(read_buf) + 32);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  size_t bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::streambuf sb(sizeof(read_data));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  size_t bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  bytes_transferred = boost::asio::read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::mutable_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:    = boost::asio::buffer(read_buf, sizeof(read_buf));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  int i = boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::array<boost::asio::mutable_buffer, 2> buffers = { {
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:    boost::asio::buffer(read_buf, 32),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:    boost::asio::buffer(read_buf) + 32 } };
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  int i = boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  std::array<boost::asio::mutable_buffer, 2> buffers = { {
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:    boost::asio::buffer(read_buf, 32),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:    boost::asio::buffer(read_buf) + 32 } };
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  int i = boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  std::vector<boost::asio::mutable_buffer> buffers;
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  buffers.push_back(boost::asio::buffer(read_buf, 32));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  buffers.push_back(boost::asio::buffer(read_buf) + 32);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  int i = boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::streambuf sb(sizeof(read_data));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  int i = boost::asio::async_read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::mutable_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:    = boost::asio::buffer(read_buf, sizeof(read_buf));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  int i = boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::array<boost::asio::mutable_buffer, 2> buffers = { {
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:    boost::asio::buffer(read_buf, 32),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:    boost::asio::buffer(read_buf) + 32 } };
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  int i = boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  std::array<boost::asio::mutable_buffer, 2> buffers = { {
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:    boost::asio::buffer(read_buf, 32),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:    boost::asio::buffer(read_buf) + 32 } };
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  int i = boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  std::vector<boost::asio::mutable_buffer> buffers;
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  buffers.push_back(boost::asio::buffer(read_buf, 32));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  buffers.push_back(boost::asio::buffer(read_buf) + 32);
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  int i = boost::asio::async_read_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::streambuf sb(sizeof(read_data));
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, sb, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, sb, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, sb, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, sb, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, sb, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, sb, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, sb, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, sb, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, sb, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, sb, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 0, sb, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  boost::asio::async_read_at(s, 1234, sb, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read_at.cpp:  int i = boost::asio::async_read_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  typedef boost::asio::io_context::executor_type executor_type;
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  test_stream(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      size_t buffer_length = boost::asio::buffer_size(*iter);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:    return check_buffers(boost::asio::buffer_sequence_begin(buffers),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:        boost::asio::buffer_sequence_end(buffers), length);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:    size_t n = boost::asio::buffer_copy(buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:        boost::asio::buffer(data_, length_) + position_,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:    boost::asio::post(get_executor(),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:        boost::asio::detail::bind_handler(
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::io_context& io_context_;
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  std::vector<boost::asio::mutable_buffer> buffers;
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  size_t bytes_transferred = boost::asio::read(s, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::mutable_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:    = boost::asio::buffer(read_buf, sizeof(read_buf));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  size_t bytes_transferred = boost::asio::read(s, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  std::vector<boost::asio::mutable_buffer> buffers;
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  buffers.push_back(boost::asio::buffer(read_buf, 32));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  buffers.push_back(boost::asio::buffer(read_buf, 39) + 32);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  buffers.push_back(boost::asio::buffer(read_buf) + 39);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  size_t bytes_transferred = boost::asio::read(s, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::streambuf sb(sizeof(read_data));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  size_t bytes_transferred = boost::asio::read(s, sb);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  std::vector<boost::asio::mutable_buffer> buffers;
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  size_t bytes_transferred = boost::asio::read(s, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::mutable_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:    = boost::asio::buffer(read_buf, sizeof(read_buf));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  size_t bytes_transferred = boost::asio::read(s, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  std::vector<boost::asio::mutable_buffer> buffers;
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  buffers.push_back(boost::asio::buffer(read_buf, 32));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  buffers.push_back(boost::asio::buffer(read_buf, 39) + 32);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  buffers.push_back(boost::asio::buffer(read_buf) + 39);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  size_t bytes_transferred = boost::asio::read(s, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::streambuf sb(sizeof(read_data));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  size_t bytes_transferred = boost::asio::read(s, sb, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::mutable_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:    = boost::asio::buffer(read_buf, sizeof(read_buf));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  size_t bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers, old_style_transfer_all);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers, old_style_transfer_all);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers, old_style_transfer_all);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  std::vector<boost::asio::mutable_buffer> buffers;
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  buffers.push_back(boost::asio::buffer(read_buf, 32));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  buffers.push_back(boost::asio::buffer(read_buf, 39) + 32);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  buffers.push_back(boost::asio::buffer(read_buf) + 39);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  size_t bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers, old_style_transfer_all);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers, old_style_transfer_all);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers, old_style_transfer_all);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::streambuf sb(sizeof(read_data));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  size_t bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb, old_style_transfer_all);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb, old_style_transfer_all);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb, old_style_transfer_all);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::mutable_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:    = boost::asio::buffer(read_buf, sizeof(read_buf));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  size_t bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers, short_transfer, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers, short_transfer, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers, short_transfer, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  std::vector<boost::asio::mutable_buffer> buffers;
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  buffers.push_back(boost::asio::buffer(read_buf, 32));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  buffers.push_back(boost::asio::buffer(read_buf, 39) + 32);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  buffers.push_back(boost::asio::buffer(read_buf) + 39);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  size_t bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers, short_transfer, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers, short_transfer, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, buffers, short_transfer, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::streambuf sb(sizeof(read_data));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  size_t bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb, short_transfer, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb, short_transfer, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  bytes_transferred = boost::asio::read(s, sb, short_transfer, error);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::mutable_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:    = boost::asio::buffer(read_buf, sizeof(read_buf));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  int i = boost::asio::async_read(s, buffers, archetypes::lazy_handler());
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::array<boost::asio::mutable_buffer, 2> buffers = { {
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:    boost::asio::buffer(read_buf, 32),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:    boost::asio::buffer(read_buf) + 32 } };
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  int i = boost::asio::async_read(s, buffers, archetypes::lazy_handler());
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  std::array<boost::asio::mutable_buffer, 2> buffers = { {
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:    boost::asio::buffer(read_buf, 32),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:    boost::asio::buffer(read_buf) + 32 } };
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  int i = boost::asio::async_read(s, buffers, archetypes::lazy_handler());
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  std::vector<boost::asio::mutable_buffer> buffers;
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  buffers.push_back(boost::asio::buffer(read_buf, 32));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  buffers.push_back(boost::asio::buffer(read_buf, 39) + 32);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  buffers.push_back(boost::asio::buffer(read_buf) + 39);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  int i = boost::asio::async_read(s, buffers, archetypes::lazy_handler());
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::streambuf sb(sizeof(read_data));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  int i = boost::asio::async_read(s, sb, archetypes::lazy_handler());
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::mutable_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:    = boost::asio::buffer(read_buf, sizeof(read_buf));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  int i = boost::asio::async_read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::array<boost::asio::mutable_buffer, 2> buffers = { {
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:    boost::asio::buffer(read_buf, 32),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:    boost::asio::buffer(read_buf) + 32 } };
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  int i = boost::asio::async_read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  std::array<boost::asio::mutable_buffer, 2> buffers = { {
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:    boost::asio::buffer(read_buf, 32),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:    boost::asio::buffer(read_buf) + 32 } };
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  int i = boost::asio::async_read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  std::vector<boost::asio::mutable_buffer> buffers;
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  buffers.push_back(boost::asio::buffer(read_buf, 32));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  buffers.push_back(boost::asio::buffer(read_buf, 39) + 32);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  buffers.push_back(boost::asio::buffer(read_buf) + 39);
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  int i = boost::asio::async_read(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::streambuf sb(sizeof(read_data));
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, sb, boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, sb, boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, sb, boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, sb, boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, sb, boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, sb, boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, sb, boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, sb, boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, sb, boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, sb, boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, sb, boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, sb, boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, sb, boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, sb, boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, sb, boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, sb, boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, sb, boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, sb, boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, sb, boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, sb, boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, sb, boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, sb, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, sb, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, sb, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, sb, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, sb, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  boost::asio::async_read(s, sb, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/read.cpp:  int i = boost::asio::async_read(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_read_stream.cpp:typedef boost::asio::buffered_read_stream<
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_read_stream.cpp:    boost::asio::ip::tcp::socket> stream_type;
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_read_stream.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_read_stream.cpp:    array<boost::asio::mutable_buffer, 2> mutable_buffers = {{
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_read_stream.cpp:        boost::asio::buffer(mutable_char_buffer, 10),
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_read_stream.cpp:        boost::asio::buffer(mutable_char_buffer + 10, 10) }};
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_read_stream.cpp:    array<boost::asio::const_buffer, 2> const_buffers = {{
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_read_stream.cpp:        boost::asio::buffer(const_char_buffer, 10),
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_read_stream.cpp:        boost::asio::buffer(const_char_buffer + 10, 10) }};
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_read_stream.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_read_stream.cpp:  boost::asio::ip::tcp::acceptor acceptor(io_context,
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_read_stream.cpp:      boost::asio::ip::tcp::endpoint(boost::asio::ip::tcp::v4(), 0));
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_read_stream.cpp:  boost::asio::ip::tcp::endpoint server_endpoint = acceptor.local_endpoint();
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_read_stream.cpp:  server_endpoint.address(boost::asio::ip::address_v4::loopback());
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_read_stream.cpp:  const boost::asio::const_buffer write_buf = boost::asio::buffer(write_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_read_stream.cpp:        boost::asio::buffer(write_buf + bytes_written));
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_read_stream.cpp:  const boost::asio::mutable_buffer read_buf = boost::asio::buffer(read_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_read_stream.cpp:        boost::asio::buffer(read_buf + bytes_read));
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_read_stream.cpp:        boost::asio::buffer(write_buf + bytes_written));
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_read_stream.cpp:        boost::asio::buffer(read_buf + bytes_read));
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_read_stream.cpp:      boost::asio::buffer(read_buf), error);
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_read_stream.cpp:  BOOST_ASIO_CHECK(error == boost::asio::error::eof);
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_read_stream.cpp:  BOOST_ASIO_CHECK(e == boost::asio::error::eof);
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_read_stream.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_read_stream.cpp:  boost::asio::ip::tcp::acceptor acceptor(io_context,
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_read_stream.cpp:      boost::asio::ip::tcp::endpoint(boost::asio::ip::tcp::v4(), 0));
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_read_stream.cpp:  boost::asio::ip::tcp::endpoint server_endpoint = acceptor.local_endpoint();
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_read_stream.cpp:  server_endpoint.address(boost::asio::ip::address_v4::loopback());
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_read_stream.cpp:  const boost::asio::const_buffer write_buf = boost::asio::buffer(write_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_read_stream.cpp:        boost::asio::buffer(write_buf + bytes_written),
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_read_stream.cpp:  const boost::asio::mutable_buffer read_buf = boost::asio::buffer(read_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_read_stream.cpp:        boost::asio::buffer(read_buf + bytes_read),
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_read_stream.cpp:        boost::asio::buffer(write_buf + bytes_written),
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_read_stream.cpp:        boost::asio::buffer(read_buf + bytes_read),
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_read_stream.cpp:  client_socket.async_read_some(boost::asio::buffer(read_buf), handle_read_eof);
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:void decrement_to_zero(boost::asio::deadline_timer* t, int* count)
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:void cancel_timer(boost::asio::deadline_timer* t)
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:void cancel_one_timer(boost::asio::deadline_timer* t)
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:  boost::asio::deadline_timer t1(ioc, seconds(1));
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:  boost::asio::deadline_timer t2(ioc, seconds(1) + microseconds(500000));
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:  boost::asio::deadline_timer t3(ioc, seconds(5));
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:  boost::asio::deadline_timer t4(ioc, seconds(1));
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:  boost::asio::deadline_timer t5(ioc, seconds(10));
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:        boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:  boost::asio::deadline_timer t6(ioc, seconds(1));
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:        boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:  boost::asio::deadline_timer t7(ioc, seconds(3));
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:        boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:        boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:  boost::asio::deadline_timer t8(ioc, seconds(1));
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:  static boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:    boost::asio::deadline_timer t;
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:  static boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:    boost::asio::deadline_timer t;
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:void io_context_run(boost::asio::io_context* ioc)
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:  boost::asio::executor_work_guard<boost::asio::io_context::executor_type> work
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:    = boost::asio::make_work_guard(ioc);
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:  boost::asio::deadline_timer t1(ioc);
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:  boost::asio::deadline_timer t2(ioc);
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:  boost::asio::detail::thread th(boost::bind(io_context_run, &ioc));
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:  boost::asio::deadline_timer t1(ioc);
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:boost::asio::deadline_timer make_timer(boost::asio::io_context& ioc, int* count)
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:  boost::asio::deadline_timer t(ioc);
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:  boost::asio::io_context io_context1;
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:  boost::asio::io_context io_context2;
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:  boost::asio::deadline_timer t1 = make_timer(io_context1, &count);
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:  boost::asio::deadline_timer t2 = make_timer(io_context2, &count);
/home/kaworu/boost_1_69_0/libs/asio/test/deadline_timer.cpp:  boost::asio::deadline_timer t3 = std::move(t1);
/home/kaworu/boost_1_69_0/libs/asio/test/streambuf.cpp:  boost::asio::streambuf sb;
/home/kaworu/boost_1_69_0/libs/asio/test/streambuf.cpp:    boost::asio::buffer_copy(sb.prepare(10), boost::asio::buffer("cd", 2));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  typedef boost::asio::io_context::executor_type executor_type;
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  test_random_access_device(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bool check_buffers(boost::asio::uint64_t offset,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      size_t buffer_length = boost::asio::buffer_size(*iter);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bool check_buffers(boost::asio::uint64_t offset,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:    return check_buffers(offset, boost::asio::buffer_sequence_begin(buffers),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:        boost::asio::buffer_sequence_end(buffers), length);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  size_t write_some_at(boost::asio::uint64_t offset,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:    return boost::asio::buffer_copy(
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:        boost::asio::buffer(data_, length_) + offset,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  size_t write_some_at(boost::asio::uint64_t offset,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  void async_write_some_at(boost::asio::uint64_t offset,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:    boost::asio::post(get_executor(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:        boost::asio::detail::bind_handler(
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::io_context& io_context_;
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::const_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:    = boost::asio::buffer(write_data, sizeof(write_data));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  size_t bytes_transferred = boost::asio::write_at(s, 0, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::mutable_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:    = boost::asio::buffer(mutable_write_data, sizeof(mutable_write_data));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  size_t bytes_transferred = boost::asio::write_at(s, 0, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  std::vector<boost::asio::const_buffer> buffers;
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  buffers.push_back(boost::asio::buffer(write_data, 32));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  buffers.push_back(boost::asio::buffer(write_data) + 32);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  size_t bytes_transferred = boost::asio::write_at(s, 0, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::const_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:    = boost::asio::buffer(write_data, sizeof(write_data));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  size_t bytes_transferred = boost::asio::write_at(s, 0, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::mutable_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:    = boost::asio::buffer(mutable_write_data, sizeof(mutable_write_data));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  size_t bytes_transferred = boost::asio::write_at(s, 0, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  std::vector<boost::asio::const_buffer> buffers;
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  buffers.push_back(boost::asio::buffer(write_data, 32));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  buffers.push_back(boost::asio::buffer(write_data) + 32);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  size_t bytes_transferred = boost::asio::write_at(s, 0, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::const_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:    = boost::asio::buffer(write_data, sizeof(write_data));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  size_t bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::mutable_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:    = boost::asio::buffer(mutable_write_data, sizeof(mutable_write_data));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  size_t bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  std::vector<boost::asio::const_buffer> buffers;
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  buffers.push_back(boost::asio::buffer(write_data, 32));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  buffers.push_back(boost::asio::buffer(write_data) + 32);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  size_t bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::const_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:    = boost::asio::buffer(write_data, sizeof(write_data));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  size_t bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::mutable_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:    = boost::asio::buffer(mutable_write_data, sizeof(mutable_write_data));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  size_t bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  std::vector<boost::asio::const_buffer> buffers;
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  buffers.push_back(boost::asio::buffer(write_data, 32));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  buffers.push_back(boost::asio::buffer(write_data) + 32);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  size_t bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  bytes_transferred = boost::asio::write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::const_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:    = boost::asio::buffer(write_data, sizeof(write_data));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  int i = boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::mutable_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:    = boost::asio::buffer(mutable_write_data, sizeof(mutable_write_data));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  int i = boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::array<boost::asio::const_buffer, 2> buffers = { {
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:    boost::asio::buffer(write_data, 32),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:    boost::asio::buffer(write_data) + 32 } };
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  int i = boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  std::array<boost::asio::const_buffer, 2> buffers = { {
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:    boost::asio::buffer(write_data, 32),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:    boost::asio::buffer(write_data) + 32 } };
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  int i = boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  std::vector<boost::asio::const_buffer> buffers;
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  buffers.push_back(boost::asio::buffer(write_data, 32));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  buffers.push_back(boost::asio::buffer(write_data) + 32);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  int i = boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::streambuf sb;
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::const_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:    = boost::asio::buffer(write_data, sizeof(write_data));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  int i = boost::asio::async_write_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::const_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:    = boost::asio::buffer(write_data, sizeof(write_data));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  int i = boost::asio::async_write_at(s, 0, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::mutable_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:    = boost::asio::buffer(mutable_write_data, sizeof(mutable_write_data));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  int i = boost::asio::async_write_at(s, 0, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::array<boost::asio::const_buffer, 2> buffers = { {
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:    boost::asio::buffer(write_data, 32),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:    boost::asio::buffer(write_data) + 32 } };
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  int i = boost::asio::async_write_at(s, 0, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  std::array<boost::asio::const_buffer, 2> buffers = { {
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:    boost::asio::buffer(write_data, 32),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:    boost::asio::buffer(write_data) + 32 } };
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  int i = boost::asio::async_write_at(s, 0, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  std::vector<boost::asio::const_buffer> buffers;
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  buffers.push_back(boost::asio::buffer(write_data, 32));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  buffers.push_back(boost::asio::buffer(write_data) + 32);
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  int i = boost::asio::async_write_at(s, 0, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::streambuf sb;
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::const_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:    = boost::asio::buffer(write_data, sizeof(write_data));
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:      boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, sb, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, sb, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, sb, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, sb, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, sb, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, sb, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, sb, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, sb, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, sb, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, sb, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 0, sb, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  boost::asio::async_write_at(s, 1234, sb, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write_at.cpp:  int i = boost::asio::async_write_at(s, 0, sb, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:namespace chronons = boost::asio::chrono;
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:    boost::asio::post(*ioc, bindns::bind(decrement_to_zero, ioc, count));
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:    boost::asio::dispatch(*ioc,
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:    boost::asio::post(*ioc, bindns::bind(sleep_increment, ioc, count));
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  boost::asio::post(*ioc, bindns::bind(sleep_increment, ioc, count));
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  boost::asio::post(ioc, bindns::bind(increment, &count));
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  boost::asio::post(ioc, bindns::bind(increment, &count));
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  boost::asio::post(ioc, bindns::bind(increment, &count));
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  boost::asio::post(ioc, bindns::bind(increment, &count));
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  boost::asio::post(ioc, bindns::bind(increment, &count));
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  boost::asio::post(ioc, bindns::bind(increment, &count));
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  boost::asio::post(ioc, bindns::bind(&io_context::stop, &ioc));
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  boost::asio::post(ioc, bindns::bind(increment, &count));
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  boost::asio::post(ioc, bindns::bind(decrement_to_zero, &ioc, &count));
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  boost::asio::post(ioc, bindns::bind(nested_decrement_to_zero, &ioc, &count));
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  boost::asio::dispatch(ioc,
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  boost::asio::post(ioc, bindns::bind(start_sleep_increments, &ioc, &count));
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  boost::asio::post(ioc, bindns::bind(start_sleep_increments, &ioc, &count2));
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  boost::asio::detail::thread thread1(bindns::bind(io_context_run, &ioc));
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  boost::asio::detail::thread thread2(bindns::bind(io_context_run, &ioc));
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  boost::asio::dispatch(ioc, boost::asio::bind_executor(ioc2,
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  boost::asio::post(ioc, &throw_exception);
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  boost::asio::post(ioc, bindns::bind(increment, &count));
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  boost::asio::post(ioc, bindns::bind(increment, &count));
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  boost::asio::post(ioc, &throw_exception);
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  boost::asio::post(ioc, bindns::bind(increment, &count));
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:class test_service : public boost::asio::io_context::service
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  static boost::asio::io_context::id id;
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  test_service(boost::asio::io_context& s)
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:    : boost::asio::io_context::service(s) {}
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:boost::asio::io_context::id test_service::id;
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  boost::asio::io_context ioc1;
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  boost::asio::io_context ioc2;
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  boost::asio::io_context ioc3;
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  boost::asio::use_service<test_service>(ioc1);
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  BOOST_ASIO_CHECK(boost::asio::has_service<test_service>(ioc1));
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:    boost::asio::add_service(ioc1, svc1);
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  catch (boost::asio::service_already_exists&)
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  boost::asio::add_service(ioc2, svc2);
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  BOOST_ASIO_CHECK(boost::asio::has_service<test_service>(ioc2));
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  BOOST_ASIO_CHECK(&boost::asio::use_service<test_service>(ioc2) == svc2);
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:    boost::asio::add_service(ioc2, svc3);
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  catch (boost::asio::service_already_exists&)
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:    boost::asio::add_service(ioc3, svc4);
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  catch (boost::asio::invalid_service_owner&)
/home/kaworu/boost_1_69_0/libs/asio/test/io_context.cpp:  BOOST_ASIO_CHECK(!boost::asio::has_service<test_service>(ioc3));
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_write_stream.cpp:typedef boost::asio::buffered_write_stream<
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_write_stream.cpp:    boost::asio::ip::tcp::socket> stream_type;
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_write_stream.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_write_stream.cpp:    array<boost::asio::mutable_buffer, 2> mutable_buffers = {{
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_write_stream.cpp:        boost::asio::buffer(mutable_char_buffer, 10),
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_write_stream.cpp:        boost::asio::buffer(mutable_char_buffer + 10, 10) }};
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_write_stream.cpp:    array<boost::asio::const_buffer, 2> const_buffers = {{
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_write_stream.cpp:        boost::asio::buffer(const_char_buffer, 10),
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_write_stream.cpp:        boost::asio::buffer(const_char_buffer + 10, 10) }};
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_write_stream.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_write_stream.cpp:  boost::asio::ip::tcp::acceptor acceptor(io_context,
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_write_stream.cpp:      boost::asio::ip::tcp::endpoint(boost::asio::ip::tcp::v4(), 0));
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_write_stream.cpp:  boost::asio::ip::tcp::endpoint server_endpoint = acceptor.local_endpoint();
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_write_stream.cpp:  server_endpoint.address(boost::asio::ip::address_v4::loopback());
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_write_stream.cpp:  const boost::asio::const_buffer write_buf = boost::asio::buffer(write_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_write_stream.cpp:        boost::asio::buffer(write_buf + bytes_written));
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_write_stream.cpp:  const boost::asio::mutable_buffer read_buf = boost::asio::buffer(read_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_write_stream.cpp:        boost::asio::buffer(read_buf + bytes_read));
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_write_stream.cpp:        boost::asio::buffer(write_buf + bytes_written));
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_write_stream.cpp:        boost::asio::buffer(read_buf + bytes_read));
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_write_stream.cpp:      boost::asio::buffer(read_buf), error);
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_write_stream.cpp:  BOOST_ASIO_CHECK(error == boost::asio::error::eof);
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_write_stream.cpp:  BOOST_ASIO_CHECK(e == boost::asio::error::eof);
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_write_stream.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_write_stream.cpp:  boost::asio::ip::tcp::acceptor acceptor(io_context,
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_write_stream.cpp:      boost::asio::ip::tcp::endpoint(boost::asio::ip::tcp::v4(), 0));
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_write_stream.cpp:  boost::asio::ip::tcp::endpoint server_endpoint = acceptor.local_endpoint();
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_write_stream.cpp:  server_endpoint.address(boost::asio::ip::address_v4::loopback());
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_write_stream.cpp:  const boost::asio::const_buffer write_buf = boost::asio::buffer(write_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_write_stream.cpp:        boost::asio::buffer(write_buf + bytes_written),
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_write_stream.cpp:  const boost::asio::mutable_buffer read_buf = boost::asio::buffer(read_data);
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_write_stream.cpp:        boost::asio::buffer(read_buf + bytes_read),
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_write_stream.cpp:        boost::asio::buffer(write_buf + bytes_written),
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_write_stream.cpp:        boost::asio::buffer(read_buf + bytes_read),
/home/kaworu/boost_1_69_0/libs/asio/test/buffered_write_stream.cpp:  client_socket.async_read_some(boost::asio::buffer(read_buf), handle_read_eof);
/home/kaworu/boost_1_69_0/libs/asio/test/use_future.cpp:  using boost::asio::use_future;
/home/kaworu/boost_1_69_0/libs/asio/test/use_future.cpp:    BOOST_ASIO_CHECK(e.code() == boost::asio::error::operation_aborted);
/home/kaworu/boost_1_69_0/libs/asio/test/use_future.cpp:  using boost::asio::use_future;
/home/kaworu/boost_1_69_0/libs/asio/test/use_future.cpp:    BOOST_ASIO_CHECK(e.code() == boost::asio::error::operation_aborted);
/home/kaworu/boost_1_69_0/libs/asio/test/use_future.cpp:  using boost::asio::use_future;
/home/kaworu/boost_1_69_0/libs/asio/test/use_future.cpp:    BOOST_ASIO_CHECK(e.code() == boost::asio::error::operation_aborted);
/home/kaworu/boost_1_69_0/libs/asio/test/use_future.cpp:  using boost::asio::use_future;
/home/kaworu/boost_1_69_0/libs/asio/test/use_future.cpp:    BOOST_ASIO_CHECK(e.code() == boost::asio::error::operation_aborted);
/home/kaworu/boost_1_69_0/libs/asio/test/use_future.cpp:  using boost::asio::use_future;
/home/kaworu/boost_1_69_0/libs/asio/test/use_future.cpp:  using boost::asio::use_future;
/home/kaworu/boost_1_69_0/libs/asio/test/use_future.cpp:  using boost::asio::use_future;
/home/kaworu/boost_1_69_0/libs/asio/test/use_future.cpp:  using boost::asio::use_future;
/home/kaworu/boost_1_69_0/libs/asio/test/use_future.cpp:  using boost::asio::use_future;
/home/kaworu/boost_1_69_0/libs/asio/test/use_future.cpp:  boost::asio::io_context ctx;
/home/kaworu/boost_1_69_0/libs/asio/test/use_future.cpp:    BOOST_ASIO_CHECK(e.code() == boost::asio::error::operation_aborted);
/home/kaworu/boost_1_69_0/libs/asio/test/use_future.cpp:  using boost::asio::use_future;
/home/kaworu/boost_1_69_0/libs/asio/test/use_future.cpp:  boost::asio::io_context ctx;
/home/kaworu/boost_1_69_0/libs/asio/test/use_future.cpp:    BOOST_ASIO_CHECK(e.code() == boost::asio::error::operation_aborted);
/home/kaworu/boost_1_69_0/libs/asio/test/use_future.cpp:  using boost::asio::use_future;
/home/kaworu/boost_1_69_0/libs/asio/test/use_future.cpp:  boost::asio::io_context ctx;
/home/kaworu/boost_1_69_0/libs/asio/test/use_future.cpp:    BOOST_ASIO_CHECK(e.code() == boost::asio::error::operation_aborted);
/home/kaworu/boost_1_69_0/libs/asio/test/use_future.cpp:  using boost::asio::use_future;
/home/kaworu/boost_1_69_0/libs/asio/test/use_future.cpp:  boost::asio::io_context ctx;
/home/kaworu/boost_1_69_0/libs/asio/test/use_future.cpp:    BOOST_ASIO_CHECK(e.code() == boost::asio::error::operation_aborted);
/home/kaworu/boost_1_69_0/libs/asio/test/use_future.cpp:  using boost::asio::use_future;
/home/kaworu/boost_1_69_0/libs/asio/test/use_future.cpp:  boost::asio::io_context ctx;
/home/kaworu/boost_1_69_0/libs/asio/test/use_future.cpp:  using boost::asio::use_future;
/home/kaworu/boost_1_69_0/libs/asio/test/use_future.cpp:  boost::asio::io_context ctx;
/home/kaworu/boost_1_69_0/libs/asio/test/use_future.cpp:  using boost::asio::use_future;
/home/kaworu/boost_1_69_0/libs/asio/test/use_future.cpp:  boost::asio::io_context ctx;
/home/kaworu/boost_1_69_0/libs/asio/test/use_future.cpp:  using boost::asio::use_future;
/home/kaworu/boost_1_69_0/libs/asio/test/use_future.cpp:  boost::asio::io_context ctx;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/host_name.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/host_name.cpp:  namespace ip = boost::asio::ip;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:  namespace ip = boost::asio::ip;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:  namespace ip = boost::asio::ip;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:  namespace ip = boost::asio::ip;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:    array<boost::asio::mutable_buffer, 2> mutable_buffers = {{
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:        boost::asio::buffer(mutable_char_buffer, 10),
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:        boost::asio::buffer(mutable_char_buffer + 10, 10) }};
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:    array<boost::asio::const_buffer, 2> const_buffers = {{
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:        boost::asio::buffer(const_char_buffer, 10),
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:        boost::asio::buffer(const_char_buffer + 10, 10) }};
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:  BOOST_ASIO_CHECK(err == boost::asio::error::operation_aborted);
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:  BOOST_ASIO_CHECK(err == boost::asio::error::eof);
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:  namespace ip = boost::asio::ip;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:      boost::asio::mutable_buffer(0, 0),
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:      boost::asio::const_buffer(0, 0),
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:  boost::asio::async_read(client_side_socket,
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:      boost::asio::buffer(read_buffer),
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:  boost::asio::async_write(server_side_socket,
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:      boost::asio::buffer(write_data),
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:  boost::asio::async_read(server_side_socket,
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:      boost::asio::buffer(read_buffer),
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:  boost::asio::async_read(client_side_socket,
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:      boost::asio::buffer(read_buffer),
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:      const boost::system::error_code&, boost::asio::ip::tcp::socket) {}
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:  namespace ip = boost::asio::ip;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:  namespace ip = boost::asio::ip;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:      boost::asio::ip::tcp::resolver::results_type) {}
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:      boost::asio::ip::tcp::resolver::iterator) {}
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:  namespace ip = boost::asio::ip;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:  namespace ip = boost::asio::ip;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:  namespace ip = boost::asio::ip;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/tcp.cpp:  boost::asio::ip::tcp::socket sock(ioc);
/home/kaworu/boost_1_69_0/libs/asio/test/ip/unicast.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/unicast.cpp:  namespace ip = boost::asio::ip;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/unicast.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/unicast.cpp:  namespace ip = boost::asio::ip;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/unicast.cpp:    BOOST_ASIO_CHECK_MESSAGE(ec == boost::asio::error::no_protocol_option,
/home/kaworu/boost_1_69_0/libs/asio/test/ip/unicast.cpp:    BOOST_ASIO_CHECK_MESSAGE(ec == boost::asio::error::no_protocol_option,
/home/kaworu/boost_1_69_0/libs/asio/test/ip/unicast.cpp:    BOOST_ASIO_CHECK_MESSAGE(ec == boost::asio::error::no_protocol_option,
/home/kaworu/boost_1_69_0/libs/asio/test/ip/unicast.cpp:    BOOST_ASIO_CHECK_MESSAGE(ec == boost::asio::error::no_protocol_option,
/home/kaworu/boost_1_69_0/libs/asio/test/ip/address.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/address.cpp:  namespace ip = boost::asio::ip;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/v6_only.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/v6_only.cpp:  namespace ip = boost::asio::ip;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/v6_only.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/v6_only.cpp:  namespace ip = boost::asio::ip;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/icmp.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/icmp.cpp:  namespace ip = boost::asio::ip;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/icmp.cpp:      boost::asio::ip::icmp::resolver::results_type) {}
/home/kaworu/boost_1_69_0/libs/asio/test/ip/icmp.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/icmp.cpp:  namespace ip = boost::asio::ip;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/multicast.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/multicast.cpp:  namespace ip = boost::asio::ip;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/multicast.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/multicast.cpp:  namespace ip = boost::asio::ip;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/multicast.cpp:    BOOST_ASIO_CHECK_MESSAGE(ec == boost::asio::error::no_protocol_option,
/home/kaworu/boost_1_69_0/libs/asio/test/ip/multicast.cpp:    BOOST_ASIO_CHECK_MESSAGE(ec == boost::asio::error::no_protocol_option,
/home/kaworu/boost_1_69_0/libs/asio/test/ip/address_v4.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/address_v4.cpp:  namespace ip = boost::asio::ip;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/address_v4.cpp:  using boost::asio::ip::address_v4;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/network_v4.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/network_v4.cpp:  namespace ip = boost::asio::ip;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/network_v4.cpp:  using boost::asio::ip::address_v4;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/network_v4.cpp:  using boost::asio::ip::make_address_v4;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/network_v4.cpp:  using boost::asio::ip::network_v4;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/network_v4.cpp:  using boost::asio::ip::make_network_v4;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/network_v6.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/network_v6.cpp:  namespace ip = boost::asio::ip;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/network_v6.cpp:  using boost::asio::ip::address_v6;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/network_v6.cpp:  using boost::asio::ip::make_address_v6;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/network_v6.cpp:  using boost::asio::ip::network_v6;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/network_v6.cpp:  using boost::asio::ip::make_network_v6;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/address_v6.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/address_v6.cpp:  namespace ip = boost::asio::ip;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/address_v6.cpp:  using boost::asio::ip::address_v6;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/udp.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/udp.cpp:  namespace ip = boost::asio::ip;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/udp.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/udp.cpp:  namespace ip = boost::asio::ip;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/udp.cpp:      boost::asio::ip::udp::resolver::results_type) {}
/home/kaworu/boost_1_69_0/libs/asio/test/ip/udp.cpp:  using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/asio/test/ip/udp.cpp:  namespace ip = boost::asio::ip;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  typedef boost::asio::io_context::executor_type executor_type;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  test_stream(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      size_t buffer_length = boost::asio::buffer_size(*iter);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:    return check_buffers(boost::asio::buffer_sequence_begin(buffers),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:        boost::asio::buffer_sequence_end(buffers), length);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:    size_t n = boost::asio::buffer_copy(
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:        boost::asio::buffer(data_, length_) + position_,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:    boost::asio::post(get_executor(),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:        boost::asio::detail::bind_handler(
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::io_context& io_context_;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  std::vector<boost::asio::const_buffer> buffers;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  size_t bytes_transferred = boost::asio::write(s, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::const_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:    = boost::asio::buffer(write_data, sizeof(write_data));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  size_t bytes_transferred = boost::asio::write(s, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::mutable_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:    = boost::asio::buffer(mutable_write_data, sizeof(mutable_write_data));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  size_t bytes_transferred = boost::asio::write(s, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  std::vector<boost::asio::const_buffer> buffers;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  buffers.push_back(boost::asio::buffer(write_data, 32));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  buffers.push_back(boost::asio::buffer(write_data, 39) + 32);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  buffers.push_back(boost::asio::buffer(write_data) + 39);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  size_t bytes_transferred = boost::asio::write(s, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  std::vector<boost::asio::const_buffer> buffers;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  size_t bytes_transferred = boost::asio::write(s, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::const_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:    = boost::asio::buffer(write_data, sizeof(write_data));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  size_t bytes_transferred = boost::asio::write(s, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::mutable_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:    = boost::asio::buffer(mutable_write_data, sizeof(mutable_write_data));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  size_t bytes_transferred = boost::asio::write(s, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  std::vector<boost::asio::const_buffer> buffers;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  buffers.push_back(boost::asio::buffer(write_data, 32));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  buffers.push_back(boost::asio::buffer(write_data, 39) + 32);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  buffers.push_back(boost::asio::buffer(write_data) + 39);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  size_t bytes_transferred = boost::asio::write(s, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::const_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:    = boost::asio::buffer(write_data, sizeof(write_data));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  size_t bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers, old_style_transfer_all);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers, old_style_transfer_all);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers, old_style_transfer_all);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::mutable_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:    = boost::asio::buffer(mutable_write_data, sizeof(mutable_write_data));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  size_t bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers, old_style_transfer_all);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers, old_style_transfer_all);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers, old_style_transfer_all);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  std::vector<boost::asio::const_buffer> buffers;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  buffers.push_back(boost::asio::buffer(write_data, 32));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  buffers.push_back(boost::asio::buffer(write_data, 39) + 32);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  buffers.push_back(boost::asio::buffer(write_data) + 39);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  size_t bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(1));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(10));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(42));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers, old_style_transfer_all);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers, old_style_transfer_all);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers, old_style_transfer_all);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers, short_transfer);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::const_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:    = boost::asio::buffer(write_data, sizeof(write_data));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  size_t bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers, short_transfer, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers, short_transfer, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers, short_transfer, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::mutable_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:    = boost::asio::buffer(mutable_write_data, sizeof(mutable_write_data));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  size_t bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers, short_transfer, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers, short_transfer, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers, short_transfer, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  std::vector<boost::asio::const_buffer> buffers;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  buffers.push_back(boost::asio::buffer(write_data, 32));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  buffers.push_back(boost::asio::buffer(write_data, 39) + 32);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  buffers.push_back(boost::asio::buffer(write_data) + 39);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  size_t bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_all(), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_at_least(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(1), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(10), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:      boost::asio::transfer_exactly(42), error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers, short_transfer, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers, short_transfer, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  bytes_transferred = boost::asio::write(s, buffers, short_transfer, error);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::const_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:    = boost::asio::buffer(write_data, sizeof(write_data));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  int i = boost::asio::async_write(s, buffers, archetypes::lazy_handler());
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::mutable_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:    = boost::asio::buffer(mutable_write_data, sizeof(mutable_write_data));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  int i = boost::asio::async_write(s, buffers, archetypes::lazy_handler());
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::array<boost::asio::const_buffer, 2> buffers = { {
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:    boost::asio::buffer(write_data, 32),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:    boost::asio::buffer(write_data) + 32 } };
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  int i = boost::asio::async_write(s, buffers, archetypes::lazy_handler());
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  std::array<boost::asio::const_buffer, 2> buffers = { {
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:    boost::asio::buffer(write_data, 32),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:    boost::asio::buffer(write_data) + 32 } };
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  int i = boost::asio::async_write(s, buffers, archetypes::lazy_handler());
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  std::vector<boost::asio::const_buffer> buffers;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  buffers.push_back(boost::asio::buffer(write_data, 32));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  buffers.push_back(boost::asio::buffer(write_data, 39) + 32);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  buffers.push_back(boost::asio::buffer(write_data) + 39);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  int i = boost::asio::async_write(s, buffers, archetypes::lazy_handler());
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::streambuf sb;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::const_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:    = boost::asio::buffer(write_data, sizeof(write_data));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, sb,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  int i = boost::asio::async_write(s, sb, archetypes::lazy_handler());
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::const_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:    = boost::asio::buffer(write_data, sizeof(write_data));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  int i = boost::asio::async_write(s, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::mutable_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:    = boost::asio::buffer(mutable_write_data, sizeof(mutable_write_data));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  int i = boost::asio::async_write(s, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::array<boost::asio::const_buffer, 2> buffers = { {
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:    boost::asio::buffer(write_data, 32),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:    boost::asio::buffer(write_data) + 32 } };
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  int i = boost::asio::async_write(s, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  std::array<boost::asio::const_buffer, 2> buffers = { {
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:    boost::asio::buffer(write_data, 32),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:    boost::asio::buffer(write_data) + 32 } };
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  int i = boost::asio::async_write(s, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  std::vector<boost::asio::const_buffer> buffers;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  buffers.push_back(boost::asio::buffer(write_data, 32));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  buffers.push_back(boost::asio::buffer(write_data, 39) + 32);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  buffers.push_back(boost::asio::buffer(write_data) + 39);
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  int i = boost::asio::async_write(s, buffers, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::io_context ioc;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::streambuf sb;
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::const_buffer buffers
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:    = boost::asio::buffer(write_data, sizeof(write_data));
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, sb, boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, sb, boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, sb, boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, sb, boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, sb, boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, sb, boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, sb, boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, sb, boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, sb, boost::asio::transfer_at_least(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, sb, boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, sb, boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, sb, boost::asio::transfer_at_least(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, sb, boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, sb, boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, sb, boost::asio::transfer_exactly(1),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, sb, boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, sb, boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, sb, boost::asio::transfer_exactly(10),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, sb, boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, sb, boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, sb, boost::asio::transfer_exactly(42),
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, sb, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, sb, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, sb, old_style_transfer_all,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, sb, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, sb, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  boost::asio::async_write(s, sb, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/test/write.cpp:  int i = boost::asio::async_write(s, sb, short_transfer,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/fork/daemon.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/fork/daemon.cpp:  udp_daytime_server(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/fork/daemon.cpp:        boost::asio::buffer(recv_buffer_), remote_endpoint_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/fork/daemon.cpp:            socket_.send_to(boost::asio::buffer(message),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/fork/daemon.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/fork/daemon.cpp:    boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/fork/daemon.cpp:    io_context.notify_fork(boost::asio::io_context::fork_prepare);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/fork/daemon.cpp:        //   io_context.notify_fork(boost::asio::io_context::fork_parent);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/fork/daemon.cpp:        //   io_context.notify_fork(boost::asio::io_context::fork_prepare);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/fork/daemon.cpp:    io_context.notify_fork(boost::asio::io_context::fork_child);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/fork/process_per_connection.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/fork/process_per_connection.cpp:  server(boost::asio::io_context& io_context, unsigned short port)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/fork/process_per_connection.cpp:            io_context_.notify_fork(boost::asio::io_context::fork_prepare);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/fork/process_per_connection.cpp:              io_context_.notify_fork(boost::asio::io_context::fork_child);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/fork/process_per_connection.cpp:              io_context_.notify_fork(boost::asio::io_context::fork_parent);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/fork/process_per_connection.cpp:    socket_.async_read_some(boost::asio::buffer(data_),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/fork/process_per_connection.cpp:    boost::asio::async_write(socket_, boost::asio::buffer(data_, length),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/fork/process_per_connection.cpp:  boost::asio::io_context& io_context_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/fork/process_per_connection.cpp:  boost::asio::signal_set signal_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/fork/process_per_connection.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/buffers/reference_counted.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/buffers/reference_counted.cpp:      buffer_(boost::asio::buffer(*data_))
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/buffers/reference_counted.cpp:  typedef boost::asio::const_buffer value_type;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/buffers/reference_counted.cpp:  typedef const boost::asio::const_buffer* const_iterator;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/buffers/reference_counted.cpp:  const boost::asio::const_buffer* begin() const { return &buffer_; }
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/buffers/reference_counted.cpp:  const boost::asio::const_buffer* end() const { return &buffer_ + 1; }
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/buffers/reference_counted.cpp:  boost::asio::const_buffer buffer_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/buffers/reference_counted.cpp:    boost::asio::async_write(socket_, buffer,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/buffers/reference_counted.cpp:  server(boost::asio::io_context& io_context, short port)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/buffers/reference_counted.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/blocking_udp_client.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/blocking_udp_client.cpp:  std::size_t receive(const boost::asio::mutable_buffer& buffer,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/blocking_udp_client.cpp:    socket_.async_receive(boost::asio::buffer(buffer),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/blocking_udp_client.cpp:  boost::asio::io_context io_context_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/blocking_udp_client.cpp:        boost::asio::ip::make_address(argv[1]),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/blocking_udp_client.cpp:      std::size_t n = c.receive(boost::asio::buffer(data),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/async_tcp_client.cpp:using boost::asio::steady_timer;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/async_tcp_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/async_tcp_client.cpp:  client(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/async_tcp_client.cpp:    boost::asio::async_read_until(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/async_tcp_client.cpp:        boost::asio::dynamic_buffer(input_buffer_), '\n',
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/async_tcp_client.cpp:    boost::asio::async_write(socket_, boost::asio::buffer("\n", 1),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/async_tcp_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/blocking_tcp_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/blocking_tcp_client.cpp:    boost::asio::async_connect(socket_, endpoints,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/blocking_tcp_client.cpp:    boost::asio::async_read_until(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/blocking_tcp_client.cpp:        boost::asio::dynamic_buffer(input_buffer_), '\n',
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/blocking_tcp_client.cpp:    boost::asio::async_write(socket_, boost::asio::buffer(data),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/blocking_tcp_client.cpp:  boost::asio::io_context io_context_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:    boost::asio::io_context& io_context = socket_.get_executor().context();
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:    boost::asio::async_connect(socket, endpoints,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:    boost::asio::async_write(socket, boost::asio::buffer(msg),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:      std::size_t n = boost::asio::async_read_until(socket,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:          boost::asio::dynamic_buffer(input_buffer), '\n',
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/server.cpp:using boost::asio::steady_timer;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/server.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/server.cpp:    boost::asio::async_read_until(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/server.cpp:        boost::asio::dynamic_buffer(input_buffer_), '\n',
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/server.cpp:    boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/server.cpp:        boost::asio::buffer(output_queue_.front()),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/server.cpp:  udp_broadcaster(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/server.cpp:    socket_.send(boost::asio::buffer(msg), 0, ignored_error);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/server.cpp:  server(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/server.cpp:  boost::asio::io_context& io_context_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timeouts/server.cpp:        boost::asio::ip::make_address(argv[2]), atoi(argv[3]));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/futures/daytime_client.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/futures/daytime_client.cpp:void get_daytime(boost::asio::io_context& io_context, const char* hostname)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/futures/daytime_client.cpp:          boost::asio::use_future);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/futures/daytime_client.cpp:      socket.async_send_to(boost::asio::buffer(send_buf),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/futures/daytime_client.cpp:          boost::asio::use_future);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/futures/daytime_client.cpp:          boost::asio::buffer(recv_buf),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/futures/daytime_client.cpp:          boost::asio::use_future);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/futures/daytime_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/futures/daytime_client.cpp:    auto work = boost::asio::make_work_guard(io_context);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/allocation/server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/allocation/server.cpp:    socket_.async_read_some(boost::asio::buffer(data_),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/allocation/server.cpp:    boost::asio::async_write(socket_, boost::asio::buffer(data_, length),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/allocation/server.cpp:  server(boost::asio::io_context& io_context, short port)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/allocation/server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_3.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_3.cpp:  // In this example, when the completion token is boost::asio::yield_context
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_3.cpp:  // completion token is boost::asio::use_future it would be std::future<void>.
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_3.cpp:  -> typename boost::asio::async_result<
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_3.cpp:  // The boost::asio::async_completion object takes the completion token and
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_3.cpp:  boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_3.cpp:  // boost::asio::post operation. The async_write operation is used only for
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_3.cpp:  auto executor = boost::asio::get_associated_executor(
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_3.cpp:  // boost::asio::bind_executor function.
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_3.cpp:    boost::asio::post(
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_3.cpp:        boost::asio::bind_executor(executor,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_3.cpp:            boost::asio::error::invalid_argument)));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_3.cpp:    boost::asio::async_write(socket,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_3.cpp:        boost::asio::buffer(message, length),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_3.cpp:        boost::asio::bind_executor(executor,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_3.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_3.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_3.cpp:      socket, "", boost::asio::use_future);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_5.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_5.cpp:  // In this example, when the completion token is boost::asio::yield_context
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_5.cpp:  // completion token is boost::asio::use_future it would be std::future<void>.
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_5.cpp:  -> typename boost::asio::async_result<
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_5.cpp:    typename boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_5.cpp:    std::unique_ptr<boost::asio::steady_timer> delay_timer_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_5.cpp:    boost::asio::executor_work_guard<tcp::socket::executor_type> io_work_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_5.cpp:          boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_5.cpp:              boost::asio::buffer(*encoded_message_), std::move(*this));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_5.cpp:    using executor_type = boost::asio::associated_executor_t<
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_5.cpp:      return boost::asio::get_associated_executor(
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_5.cpp:    using allocator_type = boost::asio::associated_allocator_t<
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_5.cpp:      return boost::asio::get_associated_allocator(
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_5.cpp:  // The boost::asio::async_completion object takes the completion token and
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_5.cpp:  boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_5.cpp:  std::unique_ptr<boost::asio::steady_timer> delay_timer(
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_5.cpp:      new boost::asio::steady_timer(socket.get_executor().context()));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_5.cpp:      boost::asio::make_work_guard(socket.get_executor()),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_5.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_5.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_5.cpp:      socket, "Testing future\r\n", 5, boost::asio::use_future);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_1.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_1.cpp:  // when the completion token is boost::asio::yield_context (used for stackful
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_1.cpp:  // token is boost::asio::use_future it would be std::future<std::size_t>.
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_1.cpp:  -> typename boost::asio::async_result<
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_1.cpp:  return boost::asio::async_write(socket,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_1.cpp:      boost::asio::buffer(message, std::strlen(message)),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_1.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_1.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_1.cpp:      socket, "Testing future\r\n", boost::asio::use_future);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_4.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_4.cpp:  // In this example, when the completion token is boost::asio::yield_context
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_4.cpp:  // completion token is boost::asio::use_future it would be std::future<void>.
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_4.cpp:  -> typename boost::asio::async_result<
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_4.cpp:    typename boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_4.cpp:    using executor_type = boost::asio::associated_executor_t<
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_4.cpp:      return boost::asio::get_associated_executor(
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_4.cpp:    using allocator_type = boost::asio::associated_allocator_t<
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_4.cpp:      return boost::asio::get_associated_allocator(
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_4.cpp:  // The boost::asio::async_completion object takes the completion token and
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_4.cpp:  boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_4.cpp:  boost::asio::async_write(socket, boost::asio::buffer(*encoded_message),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_4.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_4.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_4.cpp:      socket, "Testing future\r\n", boost::asio::use_future);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_2.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_2.cpp:  // In this example, when the completion token is boost::asio::yield_context
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_2.cpp:  // completion token is boost::asio::use_future it would be std::future<void>.
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_2.cpp:  -> typename boost::asio::async_result<
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_2.cpp:  // The boost::asio::async_completion object takes the completion token and
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_2.cpp:  boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_2.cpp:  auto executor = boost::asio::get_associated_executor(
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_2.cpp:  // the boost::asio::bind_executor function.
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_2.cpp:  boost::asio::async_write(socket,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_2.cpp:      boost::asio::buffer(message, std::strlen(message)),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_2.cpp:      boost::asio::bind_executor(executor,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_2.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_2.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/operations/composed_2.cpp:      socket, "Testing future\r\n", boost::asio::use_future);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/chat/chat_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/chat/chat_client.cpp:  chat_client(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/chat/chat_client.cpp:    boost::asio::post(io_context_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/chat/chat_client.cpp:    boost::asio::post(io_context_, [this]() { socket_.close(); });
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/chat/chat_client.cpp:    boost::asio::async_connect(socket_, endpoints,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/chat/chat_client.cpp:    boost::asio::async_read(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/chat/chat_client.cpp:        boost::asio::buffer(read_msg_.data(), chat_message::header_length),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/chat/chat_client.cpp:    boost::asio::async_read(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/chat/chat_client.cpp:        boost::asio::buffer(read_msg_.body(), read_msg_.body_length()),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/chat/chat_client.cpp:    boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/chat/chat_client.cpp:        boost::asio::buffer(write_msgs_.front().data(),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/chat/chat_client.cpp:  boost::asio::io_context& io_context_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/chat/chat_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/chat/chat_server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/chat/chat_server.cpp:    boost::asio::async_read(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/chat/chat_server.cpp:        boost::asio::buffer(read_msg_.data(), chat_message::header_length),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/chat/chat_server.cpp:    boost::asio::async_read(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/chat/chat_server.cpp:        boost::asio::buffer(read_msg_.body(), read_msg_.body_length()),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/chat/chat_server.cpp:    boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/chat/chat_server.cpp:        boost::asio::buffer(write_msgs_.front().data(),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/chat/chat_server.cpp:  chat_server(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/chat/chat_server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/spawn/parallel_grep.cpp:using boost::asio::dispatch;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/spawn/parallel_grep.cpp:using boost::asio::spawn;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/spawn/parallel_grep.cpp:using boost::asio::strand;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/spawn/parallel_grep.cpp:using boost::asio::thread_pool;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/spawn/parallel_grep.cpp:using boost::asio::yield_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/spawn/echo_server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/spawn/echo_server.cpp:    boost::asio::spawn(strand_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/spawn/echo_server.cpp:        [this, self](boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/spawn/echo_server.cpp:              std::size_t n = socket_.async_read_some(boost::asio::buffer(data), yield);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/spawn/echo_server.cpp:              boost::asio::async_write(socket_, boost::asio::buffer(data, n), yield);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/spawn/echo_server.cpp:    boost::asio::spawn(strand_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/spawn/echo_server.cpp:        [this, self](boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/spawn/echo_server.cpp:  boost::asio::steady_timer timer_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/spawn/echo_server.cpp:  boost::asio::io_context::strand strand_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/spawn/echo_server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/spawn/echo_server.cpp:    boost::asio::spawn(io_context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/spawn/echo_server.cpp:        [&](boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/ssl/server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/ssl/server.cpp:  session(tcp::socket socket, boost::asio::ssl::context& context)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/ssl/server.cpp:    socket_.async_handshake(boost::asio::ssl::stream_base::server, 
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/ssl/server.cpp:    socket_.async_read_some(boost::asio::buffer(data_),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/ssl/server.cpp:    boost::asio::async_write(socket_, boost::asio::buffer(data_, length),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/ssl/server.cpp:  boost::asio::ssl::stream<tcp::socket> socket_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/ssl/server.cpp:  server(boost::asio::io_context& io_context, unsigned short port)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/ssl/server.cpp:      context_(boost::asio::ssl::context::sslv23)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/ssl/server.cpp:        boost::asio::ssl::context::default_workarounds
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/ssl/server.cpp:        | boost::asio::ssl::context::no_sslv2
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/ssl/server.cpp:        | boost::asio::ssl::context::single_dh_use);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/ssl/server.cpp:    context_.use_private_key_file("server.pem", boost::asio::ssl::context::pem);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/ssl/server.cpp:  boost::asio::ssl::context context_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/ssl/server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/ssl/client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/ssl/client.cpp:  client(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/ssl/client.cpp:      boost::asio::ssl::context& context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/ssl/client.cpp:    socket_.set_verify_mode(boost::asio::ssl::verify_peer);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/ssl/client.cpp:      boost::asio::ssl::verify_context& ctx)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/ssl/client.cpp:    boost::asio::async_connect(socket_.lowest_layer(), endpoints,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/ssl/client.cpp:    socket_.async_handshake(boost::asio::ssl::stream_base::client,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/ssl/client.cpp:    boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/ssl/client.cpp:        boost::asio::buffer(request_, request_length),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/ssl/client.cpp:    boost::asio::async_read(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/ssl/client.cpp:        boost::asio::buffer(reply_, length),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/ssl/client.cpp:  boost::asio::ssl::stream<tcp::socket> socket_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/ssl/client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/ssl/client.cpp:    boost::asio::ssl::context ctx(boost::asio::ssl::context::sslv23);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/echo/async_tcp_echo_server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/echo/async_tcp_echo_server.cpp:    socket_.async_read_some(boost::asio::buffer(data_, max_length),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/echo/async_tcp_echo_server.cpp:    boost::asio::async_write(socket_, boost::asio::buffer(data_, length),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/echo/async_tcp_echo_server.cpp:  server(boost::asio::io_context& io_context, short port)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/echo/async_tcp_echo_server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/echo/blocking_udp_echo_server.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/echo/blocking_udp_echo_server.cpp:void server(boost::asio::io_context& io_context, unsigned short port)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/echo/blocking_udp_echo_server.cpp:        boost::asio::buffer(data, max_length), sender_endpoint);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/echo/blocking_udp_echo_server.cpp:    sock.send_to(boost::asio::buffer(data, length), sender_endpoint);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/echo/blocking_udp_echo_server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/echo/blocking_udp_echo_client.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/echo/blocking_udp_echo_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/echo/blocking_udp_echo_client.cpp:    s.send_to(boost::asio::buffer(request, request_length), *endpoints.begin());
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/echo/blocking_udp_echo_client.cpp:        boost::asio::buffer(reply, max_length), sender_endpoint);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/echo/blocking_tcp_echo_server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/echo/blocking_tcp_echo_server.cpp:      size_t length = sock.read_some(boost::asio::buffer(data), error);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/echo/blocking_tcp_echo_server.cpp:      if (error == boost::asio::error::eof)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/echo/blocking_tcp_echo_server.cpp:      boost::asio::write(sock, boost::asio::buffer(data, length));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/echo/blocking_tcp_echo_server.cpp:void server(boost::asio::io_context& io_context, unsigned short port)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/echo/blocking_tcp_echo_server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/echo/async_udp_echo_server.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/echo/async_udp_echo_server.cpp:  server(boost::asio::io_context& io_context, short port)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/echo/async_udp_echo_server.cpp:        boost::asio::buffer(data_, max_length), sender_endpoint_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/echo/async_udp_echo_server.cpp:        boost::asio::buffer(data_, length), sender_endpoint_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/echo/async_udp_echo_server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/echo/blocking_tcp_echo_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/echo/blocking_tcp_echo_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/echo/blocking_tcp_echo_client.cpp:    boost::asio::connect(s, resolver.resolve(argv[1], argv[2]));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/echo/blocking_tcp_echo_client.cpp:    boost::asio::write(s, boost::asio::buffer(request, request_length));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/echo/blocking_tcp_echo_client.cpp:    size_t reply_length = boost::asio::read(s,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/echo/blocking_tcp_echo_client.cpp:        boost::asio::buffer(reply, request_length));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/local/stream_server.cpp:using boost::asio::local::stream_protocol;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/local/stream_server.cpp:    socket_.async_read_some(boost::asio::buffer(data_),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/local/stream_server.cpp:    boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/local/stream_server.cpp:        boost::asio::buffer(data_, length),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/local/stream_server.cpp:  server(boost::asio::io_context& io_context, const std::string& file)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/local/stream_server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/local/stream_client.cpp:using boost::asio::local::stream_protocol;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/local/stream_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/local/stream_client.cpp:    boost::asio::write(s, boost::asio::buffer(request, request_length));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/local/stream_client.cpp:    size_t reply_length = boost::asio::read(s,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/local/stream_client.cpp:        boost::asio::buffer(reply, request_length));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/local/iostream_client.cpp:using boost::asio::local::stream_protocol;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/local/connect_pair.cpp:using boost::asio::local::stream_protocol;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/local/connect_pair.cpp:    socket_.async_read_some(boost::asio::buffer(data_),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/local/connect_pair.cpp:    boost::asio::async_write(socket_, boost::asio::buffer(data_, size),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/local/connect_pair.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/local/connect_pair.cpp:    boost::asio::local::connect_pair(socket, filter_socket);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/local/connect_pair.cpp:      boost::asio::write(socket, boost::asio::buffer(request));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/local/connect_pair.cpp:      boost::asio::read(socket, boost::asio::buffer(reply));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/invocation/prioritised_handlers.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/invocation/prioritised_handlers.cpp:class handler_priority_queue : boost::asio::execution_context
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/invocation/prioritised_handlers.cpp:  boost::asio::executor_binder<Handler, executor>
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/invocation/prioritised_handlers.cpp:    return boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/invocation/prioritised_handlers.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/invocation/prioritised_handlers.cpp:  boost::asio::post(io_context, pri_queue.wrap(0, low_priority_handler()));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/invocation/prioritised_handlers.cpp:  tcp::endpoint endpoint(boost::asio::ip::address_v4::loopback(), 0);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/invocation/prioritised_handlers.cpp:  boost::asio::steady_timer timer(io_context);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/invocation/prioritised_handlers.cpp:  timer.expires_at(boost::asio::steady_timer::clock_type::time_point::min());
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/nonblocking/third_party_lib.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/nonblocking/third_party_lib.cpp:    if (std::size_t len = socket_.read_some(boost::asio::buffer(data_), ec))
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/nonblocking/third_party_lib.cpp:      write_buffer_ = boost::asio::buffer(data_, len);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/nonblocking/third_party_lib.cpp:          boost::asio::buffer(write_buffer_), ec))
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/nonblocking/third_party_lib.cpp:      state_ = boost::asio::buffer_size(write_buffer_) > 0 ? writing : reading;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/nonblocking/third_party_lib.cpp:  boost::asio::const_buffer write_buffer_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/nonblocking/third_party_lib.cpp:            if (!ec || ec == boost::asio::error::would_block)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/nonblocking/third_party_lib.cpp:            if (!ec || ec == boost::asio::error::would_block)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/nonblocking/third_party_lib.cpp:  server(boost::asio::io_context& io_context, unsigned short port)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/nonblocking/third_party_lib.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/multicast/receiver.cpp:  receiver(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/multicast/receiver.cpp:      const boost::asio::ip::address& listen_address,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/multicast/receiver.cpp:      const boost::asio::ip::address& multicast_address)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/multicast/receiver.cpp:    boost::asio::ip::udp::endpoint listen_endpoint(
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/multicast/receiver.cpp:    socket_.set_option(boost::asio::ip::udp::socket::reuse_address(true));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/multicast/receiver.cpp:        boost::asio::ip::multicast::join_group(multicast_address));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/multicast/receiver.cpp:        boost::asio::buffer(data_), sender_endpoint_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/multicast/receiver.cpp:  boost::asio::ip::udp::socket socket_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/multicast/receiver.cpp:  boost::asio::ip::udp::endpoint sender_endpoint_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/multicast/receiver.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/multicast/receiver.cpp:        boost::asio::ip::make_address(argv[1]),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/multicast/receiver.cpp:        boost::asio::ip::make_address(argv[2]));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/multicast/sender.cpp:  sender(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/multicast/sender.cpp:      const boost::asio::ip::address& multicast_address)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/multicast/sender.cpp:        boost::asio::buffer(message_), endpoint_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/multicast/sender.cpp:  boost::asio::ip::udp::endpoint endpoint_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/multicast/sender.cpp:  boost::asio::ip::udp::socket socket_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/multicast/sender.cpp:  boost::asio::steady_timer timer_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/multicast/sender.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/multicast/sender.cpp:    sender s(io_context, boost::asio::ip::make_address(argv[1]));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timers/time_t_timer.cpp:// The boost::asio::basic_waitable_timer template accepts an optional WaitTraits
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timers/time_t_timer.cpp:typedef boost::asio::basic_waitable_timer<
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/timers/time_t_timer.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/executors/fork_join.cpp:using boost::asio::dispatch;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/executors/fork_join.cpp:using boost::asio::execution_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/executors/fork_join.cpp:using boost::asio::thread_pool;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/executors/bank_account_1.cpp:using boost::asio::post;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/executors/bank_account_1.cpp:using boost::asio::thread_pool;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/executors/actor.cpp:using boost::asio::defer;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/executors/actor.cpp:using boost::asio::executor;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/executors/actor.cpp:using boost::asio::post;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/executors/actor.cpp:using boost::asio::strand;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/executors/actor.cpp:using boost::asio::system_executor;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/executors/actor.cpp:using boost::asio::thread_pool;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/executors/priority_scheduler.cpp:using boost::asio::dispatch;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/executors/priority_scheduler.cpp:using boost::asio::execution_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/executors/pipeline.cpp:using boost::asio::execution_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/executors/pipeline.cpp:using boost::asio::executor_binder;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/executors/pipeline.cpp:using boost::asio::get_associated_executor;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/executors/pipeline.cpp:using boost::asio::post;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/executors/pipeline.cpp:using boost::asio::system_executor;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/executors/pipeline.cpp:using boost::asio::use_future;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/executors/pipeline.cpp:using boost::asio::use_service;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/executors/pipeline.cpp:using boost::asio::bind_executor;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/executors/pipeline.cpp:using boost::asio::thread_pool;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/executors/bank_account_2.cpp:using boost::asio::post;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/executors/bank_account_2.cpp:using boost::asio::thread_pool;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/executors/bank_account_2.cpp:using boost::asio::use_future;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/socks4/sync_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/socks4/sync_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/socks4/sync_client.cpp:    boost::asio::connect(socket, endpoints);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/socks4/sync_client.cpp:    boost::asio::write(socket, socks_request.buffers());
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/socks4/sync_client.cpp:    boost::asio::read(socket, socks_reply.buffers());
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/socks4/sync_client.cpp:    boost::asio::write(socket, boost::asio::buffer(request));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/socks4/sync_client.cpp:          boost::asio::buffer(response), error))
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/socks4/sync_client.cpp:    if (error != boost::asio::error::eof)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/socks4/socks4.hpp:  request(command_type cmd, const boost::asio::ip::tcp::endpoint& endpoint,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/socks4/socks4.hpp:    if (endpoint.protocol() != boost::asio::ip::tcp::v4())
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/socks4/socks4.hpp:          boost::asio::error::address_family_not_supported);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/socks4/socks4.hpp:  std::array<boost::asio::const_buffer, 7> buffers() const
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/socks4/socks4.hpp:        boost::asio::buffer(&version_, 1),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/socks4/socks4.hpp:        boost::asio::buffer(&command_, 1),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/socks4/socks4.hpp:        boost::asio::buffer(&port_high_byte_, 1),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/socks4/socks4.hpp:        boost::asio::buffer(&port_low_byte_, 1),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/socks4/socks4.hpp:        boost::asio::buffer(address_),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/socks4/socks4.hpp:        boost::asio::buffer(user_id_),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/socks4/socks4.hpp:        boost::asio::buffer(&null_byte_, 1)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/socks4/socks4.hpp:  boost::asio::ip::address_v4::bytes_type address_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/socks4/socks4.hpp:  std::array<boost::asio::mutable_buffer, 5> buffers()
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/socks4/socks4.hpp:        boost::asio::buffer(&null_byte_, 1),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/socks4/socks4.hpp:        boost::asio::buffer(&status_, 1),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/socks4/socks4.hpp:        boost::asio::buffer(&port_high_byte_, 1),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/socks4/socks4.hpp:        boost::asio::buffer(&port_low_byte_, 1),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/socks4/socks4.hpp:        boost::asio::buffer(address_)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/socks4/socks4.hpp:  boost::asio::ip::tcp::endpoint endpoint() const
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/socks4/socks4.hpp:    boost::asio::ip::address_v4 address(address_);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/socks4/socks4.hpp:    return boost::asio::ip::tcp::endpoint(address, port);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/socks4/socks4.hpp:  boost::asio::ip::address_v4::bytes_type address_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/iostreams/http_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/iostreams/http_client.cpp:    boost::asio::ip::tcp::iostream s;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/handler_tracking/async_tcp_echo_server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/handler_tracking/async_tcp_echo_server.cpp:    socket_.async_read_some(boost::asio::buffer(data_, max_length),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/handler_tracking/async_tcp_echo_server.cpp:    boost::asio::async_write(socket_, boost::asio::buffer(data_, length),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/handler_tracking/async_tcp_echo_server.cpp:  server(boost::asio::io_context& io_context, short port)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/handler_tracking/async_tcp_echo_server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/handler_tracking/custom_tracking.hpp:  static void creation(boost::asio::execution_context& /*ctx*/,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/handler_tracking/custom_tracking.hpp:  static void operation(boost::asio::execution_context& /*ctx*/,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/handler_tracking/custom_tracking.hpp:  static void reactor_registration(boost::asio::execution_context& context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/handler_tracking/custom_tracking.hpp:  static void reactor_deregistration(boost::asio::execution_context& context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/handler_tracking/custom_tracking.hpp:  static void reactor_events(boost::asio::execution_context& context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/reply.hpp:  std::vector<boost::asio::const_buffer> to_buffers();
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/server.hpp:  boost::asio::io_context io_context_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/server.hpp:  boost::asio::signal_set signals_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/server.hpp:  boost::asio::ip::tcp::acceptor acceptor_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/server.cpp:  boost::asio::ip::tcp::resolver resolver(io_context_);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/server.cpp:  boost::asio::ip::tcp::endpoint endpoint =
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/server.cpp:  acceptor_.set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/server.cpp:      [this](boost::system::error_code ec, boost::asio::ip::tcp::socket socket)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/connection.hpp:  explicit connection(boost::asio::ip::tcp::socket socket,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/connection.hpp:  boost::asio::ip::tcp::socket socket_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/connection.cpp:connection::connection(boost::asio::ip::tcp::socket socket,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/connection.cpp:  socket_.async_read_some(boost::asio::buffer(buffer_),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/connection.cpp:        else if (ec != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/connection.cpp:  boost::asio::async_write(socket_, reply_.to_buffers(),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/connection.cpp:          socket_.shutdown(boost::asio::ip::tcp::socket::shutdown_both,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/connection.cpp:        if (ec != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/reply.cpp:boost::asio::const_buffer to_buffer(reply::status_type status)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/reply.cpp:    return boost::asio::buffer(ok);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/reply.cpp:    return boost::asio::buffer(created);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/reply.cpp:    return boost::asio::buffer(accepted);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/reply.cpp:    return boost::asio::buffer(no_content);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/reply.cpp:    return boost::asio::buffer(multiple_choices);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/reply.cpp:    return boost::asio::buffer(moved_permanently);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/reply.cpp:    return boost::asio::buffer(moved_temporarily);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/reply.cpp:    return boost::asio::buffer(not_modified);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/reply.cpp:    return boost::asio::buffer(bad_request);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/reply.cpp:    return boost::asio::buffer(unauthorized);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/reply.cpp:    return boost::asio::buffer(forbidden);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/reply.cpp:    return boost::asio::buffer(not_found);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/reply.cpp:    return boost::asio::buffer(internal_server_error);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/reply.cpp:    return boost::asio::buffer(not_implemented);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/reply.cpp:    return boost::asio::buffer(bad_gateway);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/reply.cpp:    return boost::asio::buffer(service_unavailable);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/reply.cpp:    return boost::asio::buffer(internal_server_error);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/reply.cpp:std::vector<boost::asio::const_buffer> reply::to_buffers()
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/reply.cpp:  std::vector<boost::asio::const_buffer> buffers;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/reply.cpp:    buffers.push_back(boost::asio::buffer(h.name));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/reply.cpp:    buffers.push_back(boost::asio::buffer(misc_strings::name_value_separator));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/reply.cpp:    buffers.push_back(boost::asio::buffer(h.value));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/reply.cpp:    buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/reply.cpp:  buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp11/http/server/reply.cpp:  buffers.push_back(boost::asio::buffer(content));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/refactored_echo_server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/refactored_echo_server.cpp:using boost::asio::experimental::co_spawn;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/refactored_echo_server.cpp:using boost::asio::experimental::detached;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/refactored_echo_server.cpp:namespace this_coro = boost::asio::experimental::this_coro;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/refactored_echo_server.cpp:  using awaitable = boost::asio::experimental::awaitable<
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/refactored_echo_server.cpp:    T, boost::asio::io_context::executor_type>;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/refactored_echo_server.cpp:  std::size_t n = co_await socket.async_read_some(boost::asio::buffer(data), token);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/refactored_echo_server.cpp:  co_await async_write(socket, boost::asio::buffer(data, n), token);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/refactored_echo_server.cpp:    boost::asio::io_context io_context(1);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/refactored_echo_server.cpp:    boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/chat_server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/chat_server.cpp:using boost::asio::experimental::awaitable;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/chat_server.cpp:using boost::asio::experimental::co_spawn;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/chat_server.cpp:using boost::asio::experimental::detached;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/chat_server.cpp:using boost::asio::experimental::redirect_error;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/chat_server.cpp:namespace this_coro = boost::asio::experimental::this_coro;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/chat_server.cpp:        std::size_t n = co_await boost::asio::async_read_until(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/chat_server.cpp:            boost::asio::dynamic_buffer(read_msg, 1024), "\n", token);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/chat_server.cpp:          co_await boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/chat_server.cpp:              boost::asio::buffer(write_msgs_.front()), token);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/chat_server.cpp:  boost::asio::steady_timer timer_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/chat_server.cpp:    boost::asio::io_context io_context(1);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/chat_server.cpp:    boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/echo_server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/echo_server.cpp:using boost::asio::experimental::co_spawn;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/echo_server.cpp:using boost::asio::experimental::detached;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/echo_server.cpp:namespace this_coro = boost::asio::experimental::this_coro;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/echo_server.cpp:  using awaitable = boost::asio::experimental::awaitable<
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/echo_server.cpp:    T, boost::asio::io_context::executor_type>;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/echo_server.cpp:      std::size_t n = co_await socket.async_read_some(boost::asio::buffer(data), token);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/echo_server.cpp:      co_await async_write(socket, boost::asio::buffer(data, n), token);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/echo_server.cpp:    boost::asio::io_context io_context(1);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/echo_server.cpp:    boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/double_buffered_echo_server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/double_buffered_echo_server.cpp:using boost::asio::experimental::co_spawn;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/double_buffered_echo_server.cpp:using boost::asio::experimental::detached;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/double_buffered_echo_server.cpp:namespace this_coro = boost::asio::experimental::this_coro;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/double_buffered_echo_server.cpp:  using awaitable = boost::asio::experimental::awaitable<
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/double_buffered_echo_server.cpp:    T, boost::asio::io_context::executor_type>;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/double_buffered_echo_server.cpp:   size_t n = co_await s.async_read_some(boost::asio::buffer(p1, 1024), token);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/double_buffered_echo_server.cpp:     auto write_result = boost::asio::async_write(s, boost::asio::buffer(p2, n), token);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/double_buffered_echo_server.cpp:     n = co_await s.async_read_some(boost::asio::buffer(p1, 1024), token);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/double_buffered_echo_server.cpp:    boost::asio::io_context io_context(1);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/double_buffered_echo_server.cpp:    boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/range_based_for.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/range_based_for.cpp:using boost::asio::experimental::awaitable;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/range_based_for.cpp:using boost::asio::experimental::co_spawn;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/range_based_for.cpp:using boost::asio::experimental::detached;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/range_based_for.cpp:namespace this_coro = boost::asio::experimental::this_coro;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/range_based_for.cpp:    co_await boost::asio::async_write(s, boost::asio::buffer("hello\r\n", 7), token);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/range_based_for.cpp:    boost::asio::io_context io_context(1);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp17/coroutines_ts/range_based_for.cpp:    boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/fork/daemon.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/fork/daemon.cpp:  udp_daytime_server(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/fork/daemon.cpp:        boost::asio::buffer(recv_buffer_), remote_endpoint_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/fork/daemon.cpp:      socket_.send_to(boost::asio::buffer(message),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/fork/daemon.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/fork/daemon.cpp:    boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/fork/daemon.cpp:        boost::bind(&boost::asio::io_context::stop, &io_context));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/fork/daemon.cpp:    io_context.notify_fork(boost::asio::io_context::fork_prepare);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/fork/daemon.cpp:        //   io_context.notify_fork(boost::asio::io_context::fork_parent);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/fork/daemon.cpp:        //   io_context.notify_fork(boost::asio::io_context::fork_prepare);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/fork/daemon.cpp:    io_context.notify_fork(boost::asio::io_context::fork_child);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/fork/process_per_connection.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/fork/process_per_connection.cpp:  server(boost::asio::io_context& io_context, unsigned short port)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/fork/process_per_connection.cpp:      io_context_.notify_fork(boost::asio::io_context::fork_prepare);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/fork/process_per_connection.cpp:        io_context_.notify_fork(boost::asio::io_context::fork_child);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/fork/process_per_connection.cpp:        io_context_.notify_fork(boost::asio::io_context::fork_parent);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/fork/process_per_connection.cpp:    socket_.async_read_some(boost::asio::buffer(data_),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/fork/process_per_connection.cpp:    boost::asio::async_write(socket_, boost::asio::buffer(data_, length),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/fork/process_per_connection.cpp:  boost::asio::io_context& io_context_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/fork/process_per_connection.cpp:  boost::asio::signal_set signal_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/fork/process_per_connection.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/buffers/reference_counted.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/buffers/reference_counted.cpp:      buffer_(boost::asio::buffer(*data_))
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/buffers/reference_counted.cpp:  typedef boost::asio::const_buffer value_type;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/buffers/reference_counted.cpp:  typedef const boost::asio::const_buffer* const_iterator;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/buffers/reference_counted.cpp:  const boost::asio::const_buffer* begin() const { return &buffer_; }
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/buffers/reference_counted.cpp:  const boost::asio::const_buffer* end() const { return &buffer_ + 1; }
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/buffers/reference_counted.cpp:  boost::asio::const_buffer buffer_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/buffers/reference_counted.cpp:  session(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/buffers/reference_counted.cpp:    boost::asio::async_write(socket_, buffer,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/buffers/reference_counted.cpp:  server(boost::asio::io_context& io_context, short port)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/buffers/reference_counted.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/buffers/reference_counted.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/buffers/reference_counted.cpp:  boost::asio::io_context& io_context_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/buffers/reference_counted.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/serialization/server.cpp:  server(boost::asio::io_context& io_context, unsigned short port)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/serialization/server.cpp:        boost::asio::ip::tcp::endpoint(boost::asio::ip::tcp::v4(), port))
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/serialization/server.cpp:          boost::asio::placeholders::error, new_conn));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/serialization/server.cpp:            boost::asio::placeholders::error, conn));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/serialization/server.cpp:          boost::asio::placeholders::error, new_conn));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/serialization/server.cpp:  boost::asio::ip::tcp::acceptor acceptor_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/serialization/server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/serialization/connection.hpp:  connection(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/serialization/connection.hpp:  boost::asio::ip::tcp::socket& socket()
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/serialization/connection.hpp:      boost::system::error_code error(boost::asio::error::invalid_argument);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/serialization/connection.hpp:      boost::asio::post(socket_.get_executor(), boost::bind(handler, error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/serialization/connection.hpp:    std::vector<boost::asio::const_buffer> buffers;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/serialization/connection.hpp:    buffers.push_back(boost::asio::buffer(outbound_header_));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/serialization/connection.hpp:    buffers.push_back(boost::asio::buffer(outbound_data_));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/serialization/connection.hpp:    boost::asio::async_write(socket_, buffers, handler);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/serialization/connection.hpp:    boost::asio::async_read(socket_, boost::asio::buffer(inbound_header_),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/serialization/connection.hpp:          this, boost::asio::placeholders::error, boost::ref(t),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/serialization/connection.hpp:        boost::system::error_code error(boost::asio::error::invalid_argument);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/serialization/connection.hpp:      boost::asio::async_read(socket_, boost::asio::buffer(inbound_data_),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/serialization/connection.hpp:          boost::asio::placeholders::error, boost::ref(t), handler));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/serialization/connection.hpp:        boost::system::error_code error(boost::asio::error::invalid_argument);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/serialization/connection.hpp:  boost::asio::ip::tcp::socket socket_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/serialization/client.cpp:  client(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/serialization/client.cpp:    boost::asio::ip::tcp::resolver resolver(io_context);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/serialization/client.cpp:    boost::asio::ip::tcp::resolver::query query(host, service);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/serialization/client.cpp:    boost::asio::ip::tcp::resolver::iterator endpoint_iterator =
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/serialization/client.cpp:    boost::asio::async_connect(connection_.socket(), endpoint_iterator,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/serialization/client.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/serialization/client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/serialization/client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_udp_client.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_udp_client.cpp:  std::size_t receive(const boost::asio::mutable_buffer& buffer,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_udp_client.cpp:      boost::asio::chrono::steady_clock::duration timeout,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_udp_client.cpp:    socket_.async_receive(boost::asio::buffer(buffer),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_udp_client.cpp:  void run(boost::asio::chrono::steady_clock::duration timeout)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_udp_client.cpp:  boost::asio::io_context io_context_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_udp_client.cpp:        boost::asio::ip::make_address(argv[1]),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_udp_client.cpp:      std::size_t n = c.receive(boost::asio::buffer(data),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_udp_client.cpp:          boost::asio::chrono::seconds(10), ec);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/async_tcp_client.cpp:using boost::asio::steady_timer;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/async_tcp_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/async_tcp_client.cpp:  client(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/async_tcp_client.cpp:      deadline_.expires_after(boost::asio::chrono::seconds(60));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/async_tcp_client.cpp:    deadline_.expires_after(boost::asio::chrono::seconds(30));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/async_tcp_client.cpp:    boost::asio::async_read_until(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/async_tcp_client.cpp:        boost::asio::dynamic_buffer(input_buffer_), '\n',
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/async_tcp_client.cpp:    boost::asio::async_write(socket_, boost::asio::buffer("\n", 1),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/async_tcp_client.cpp:      heartbeat_timer_.expires_after(boost::asio::chrono::seconds(10));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/async_tcp_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_tcp_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_tcp_client.cpp:      boost::asio::chrono::steady_clock::duration timeout)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_tcp_client.cpp:    boost::asio::async_connect(socket_, endpoints, var(ec) = _1);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_tcp_client.cpp:  std::string read_line(boost::asio::chrono::steady_clock::duration timeout)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_tcp_client.cpp:    boost::asio::async_read_until(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_tcp_client.cpp:        boost::asio::dynamic_buffer(input_buffer_),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_tcp_client.cpp:      boost::asio::chrono::steady_clock::duration timeout)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_tcp_client.cpp:    boost::asio::async_write(socket_, boost::asio::buffer(data), var(ec) = _1);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_tcp_client.cpp:  void run(boost::asio::chrono::steady_clock::duration timeout)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_tcp_client.cpp:  boost::asio::io_context io_context_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_tcp_client.cpp:    c.connect(argv[1], argv[2], boost::asio::chrono::seconds(10));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_tcp_client.cpp:    boost::asio::chrono::steady_clock::time_point time_sent =
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_tcp_client.cpp:      boost::asio::chrono::steady_clock::now();
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_tcp_client.cpp:    c.write_line(argv[3], boost::asio::chrono::seconds(10));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_tcp_client.cpp:      std::string line = c.read_line(boost::asio::chrono::seconds(10));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_tcp_client.cpp:    boost::asio::chrono::steady_clock::time_point time_received =
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_tcp_client.cpp:      boost::asio::chrono::steady_clock::now();
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_tcp_client.cpp:    std::cout << boost::asio::chrono::duration_cast<
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_tcp_client.cpp:      boost::asio::chrono::microseconds>(
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:  close_after(boost::asio::chrono::steady_clock::duration t, tcp::socket& s)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:  boost::asio::chrono::steady_clock::duration timeout_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:    boost::asio::io_context& io_context = socket_.get_executor().context();
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:  boost::asio::chrono::steady_clock::duration timeout_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:    boost::asio::async_connect(socket, endpoints,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:        close_after(boost::asio::chrono::seconds(10), socket));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:    boost::asio::chrono::steady_clock::time_point time_sent =
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:      boost::asio::chrono::steady_clock::now();
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:    boost::asio::async_write(socket, boost::asio::buffer(msg),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:        close_after(boost::asio::chrono::seconds(10), socket));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:      std::size_t n = boost::asio::async_read_until(socket,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:          boost::asio::dynamic_buffer(input_buffer), '\n',
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:          close_after(boost::asio::chrono::seconds(10), socket));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:    boost::asio::chrono::steady_clock::time_point time_received =
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:      boost::asio::chrono::steady_clock::now();
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:    std::cout << boost::asio::chrono::duration_cast<
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:      boost::asio::chrono::microseconds>(
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/server.cpp:using boost::asio::steady_timer;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/server.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/server.cpp:  tcp_session(boost::asio::io_context& io_context, channel& ch)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/server.cpp:    input_deadline_.expires_after(boost::asio::chrono::seconds(30));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/server.cpp:    boost::asio::async_read_until(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/server.cpp:        boost::asio::dynamic_buffer(input_buffer_), '\n',
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/server.cpp:    output_deadline_.expires_after(boost::asio::chrono::seconds(30));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/server.cpp:    boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/server.cpp:        boost::asio::buffer(output_queue_.front()),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/server.cpp:  udp_broadcaster(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/server.cpp:    socket_.send(boost::asio::buffer(msg), 0, ignored_ec);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/server.cpp:  server(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/server.cpp:  boost::asio::io_context& io_context_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timeouts/server.cpp:        boost::asio::ip::make_address(argv[2]), atoi(argv[3]));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/windows/transmit_file.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/windows/transmit_file.cpp:using boost::asio::windows::overlapped_ptr;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/windows/transmit_file.cpp:using boost::asio::windows::random_access_handle;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/windows/transmit_file.cpp:        boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/windows/transmit_file.cpp:  static pointer create(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/windows/transmit_file.cpp:            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/windows/transmit_file.cpp:            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/windows/transmit_file.cpp:  connection(boost::asio::io_context& io_context, const std::string& filename)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/windows/transmit_file.cpp:  server(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/windows/transmit_file.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/windows/transmit_file.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/allocation/server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/allocation/server.cpp:  session(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/allocation/server.cpp:    socket_.async_read_some(boost::asio::buffer(data_),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/allocation/server.cpp:            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/allocation/server.cpp:            boost::asio::placeholders::bytes_transferred)));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/allocation/server.cpp:      boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/allocation/server.cpp:          boost::asio::buffer(data_, bytes_transferred),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/allocation/server.cpp:              boost::asio::placeholders::error)));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/allocation/server.cpp:      socket_.async_read_some(boost::asio::buffer(data_),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/allocation/server.cpp:              boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/allocation/server.cpp:              boost::asio::placeholders::bytes_transferred)));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/allocation/server.cpp:  server(boost::asio::io_context& io_context, short port)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/allocation/server.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/allocation/server.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/allocation/server.cpp:  boost::asio::io_context& io_context_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/allocation/server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/icmp/ping.cpp:using boost::asio::ip::icmp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/icmp/ping.cpp:using boost::asio::steady_timer;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/icmp/ping.cpp:namespace chrono = boost::asio::chrono;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/icmp/ping.cpp:  pinger(boost::asio::io_context& io_context, const char* destination)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/icmp/ping.cpp:    boost::asio::streambuf request_buffer;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/icmp/ping.cpp:  boost::asio::streambuf reply_buffer_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/icmp/ping.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/icmp/ipv4_header.hpp:  boost::asio::ip::address_v4 source_address() const
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/icmp/ipv4_header.hpp:    boost::asio::ip::address_v4::bytes_type bytes
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/icmp/ipv4_header.hpp:    return boost::asio::ip::address_v4(bytes);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/icmp/ipv4_header.hpp:  boost::asio::ip::address_v4 destination_address() const
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/icmp/ipv4_header.hpp:    boost::asio::ip::address_v4::bytes_type bytes
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/icmp/ipv4_header.hpp:    return boost::asio::ip::address_v4(bytes);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_client.cpp:  chat_client(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_client.cpp:    boost::asio::async_connect(socket_, endpoints,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_client.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_client.cpp:    boost::asio::post(io_context_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_client.cpp:    boost::asio::post(io_context_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_client.cpp:      boost::asio::async_read(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_client.cpp:          boost::asio::buffer(read_msg_.data(), chat_message::header_length),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_client.cpp:      boost::asio::async_read(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_client.cpp:          boost::asio::buffer(read_msg_.body(), read_msg_.body_length()),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_client.cpp:      boost::asio::async_read(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_client.cpp:          boost::asio::buffer(read_msg_.data(), chat_message::header_length),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_client.cpp:      boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_client.cpp:          boost::asio::buffer(write_msgs_.front().data(),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_client.cpp:        boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_client.cpp:            boost::asio::buffer(write_msgs_.front().data(),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_client.cpp:              boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_client.cpp:  boost::asio::io_context& io_context_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_client.cpp:    boost::thread t(boost::bind(&boost::asio::io_context::run, &io_context));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/posix_chat_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/posix_chat_client.cpp:namespace posix = boost::asio::posix;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/posix_chat_client.cpp:  posix_chat_client(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/posix_chat_client.cpp:    boost::asio::async_connect(socket_, endpoints,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/posix_chat_client.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/posix_chat_client.cpp:      boost::asio::async_read(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/posix_chat_client.cpp:          boost::asio::buffer(read_msg_.data(), chat_message::header_length),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/posix_chat_client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/posix_chat_client.cpp:      boost::asio::async_read_until(input_, input_buffer_, '\n',
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/posix_chat_client.cpp:            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/posix_chat_client.cpp:            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/posix_chat_client.cpp:      boost::asio::async_read(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/posix_chat_client.cpp:          boost::asio::buffer(read_msg_.body(), read_msg_.body_length()),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/posix_chat_client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/posix_chat_client.cpp:      boost::array<boost::asio::const_buffer, 2> buffers = {{
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/posix_chat_client.cpp:        boost::asio::buffer(read_msg_.body(), read_msg_.body_length()),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/posix_chat_client.cpp:        boost::asio::buffer(eol) }};
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/posix_chat_client.cpp:      boost::asio::async_write(output_, buffers,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/posix_chat_client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/posix_chat_client.cpp:      boost::asio::async_read(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/posix_chat_client.cpp:          boost::asio::buffer(read_msg_.data(), chat_message::header_length),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/posix_chat_client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/posix_chat_client.cpp:      boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/posix_chat_client.cpp:          boost::asio::buffer(write_msg_.data(), write_msg_.length()),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/posix_chat_client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/posix_chat_client.cpp:    else if (error == boost::asio::error::not_found)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/posix_chat_client.cpp:      boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/posix_chat_client.cpp:          boost::asio::buffer(write_msg_.data(), write_msg_.length()),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/posix_chat_client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/posix_chat_client.cpp:      boost::asio::async_read_until(input_, input_buffer_, '\n',
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/posix_chat_client.cpp:            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/posix_chat_client.cpp:            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/posix_chat_client.cpp:  boost::asio::streambuf input_buffer_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/posix_chat_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_server.cpp:  chat_session(boost::asio::io_context& io_context, chat_room& room)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_server.cpp:    boost::asio::async_read(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_server.cpp:        boost::asio::buffer(read_msg_.data(), chat_message::header_length),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_server.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_server.cpp:      boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_server.cpp:          boost::asio::buffer(write_msgs_.front().data(),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_server.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_server.cpp:      boost::asio::async_read(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_server.cpp:          boost::asio::buffer(read_msg_.body(), read_msg_.body_length()),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_server.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_server.cpp:      boost::asio::async_read(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_server.cpp:          boost::asio::buffer(read_msg_.data(), chat_message::header_length),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_server.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_server.cpp:        boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_server.cpp:            boost::asio::buffer(write_msgs_.front().data(),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_server.cpp:              boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_server.cpp:  chat_server(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_server.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_server.cpp:  boost::asio::io_context& io_context_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/chat/chat_server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/spawn/parallel_grep.cpp:using boost::asio::dispatch;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/spawn/parallel_grep.cpp:using boost::asio::spawn;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/spawn/parallel_grep.cpp:using boost::asio::strand;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/spawn/parallel_grep.cpp:using boost::asio::thread_pool;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/spawn/parallel_grep.cpp:using boost::asio::yield_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/spawn/echo_server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/spawn/echo_server.cpp:  explicit session(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/spawn/echo_server.cpp:    boost::asio::spawn(strand_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/spawn/echo_server.cpp:    boost::asio::spawn(strand_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/spawn/echo_server.cpp:  void echo(boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/spawn/echo_server.cpp:        timer_.expires_after(boost::asio::chrono::seconds(10));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/spawn/echo_server.cpp:        std::size_t n = socket_.async_read_some(boost::asio::buffer(data), yield);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/spawn/echo_server.cpp:        boost::asio::async_write(socket_, boost::asio::buffer(data, n), yield);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/spawn/echo_server.cpp:  void timeout(boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/spawn/echo_server.cpp:      if (timer_.expiry() <= boost::asio::steady_timer::clock_type::now())
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/spawn/echo_server.cpp:  boost::asio::io_context::strand strand_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/spawn/echo_server.cpp:  boost::asio::steady_timer timer_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/spawn/echo_server.cpp:void do_accept(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/spawn/echo_server.cpp:    unsigned short port, boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/spawn/echo_server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/spawn/echo_server.cpp:    boost::asio::spawn(io_context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/server.cpp:typedef boost::asio::ssl::stream<boost::asio::ip::tcp::socket> ssl_socket;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/server.cpp:  session(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/server.cpp:      boost::asio::ssl::context& context)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/server.cpp:    socket_.async_handshake(boost::asio::ssl::stream_base::server,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/server.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/server.cpp:      socket_.async_read_some(boost::asio::buffer(data_, max_length),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/server.cpp:            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/server.cpp:            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/server.cpp:      boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/server.cpp:          boost::asio::buffer(data_, bytes_transferred),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/server.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/server.cpp:      socket_.async_read_some(boost::asio::buffer(data_, max_length),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/server.cpp:            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/server.cpp:            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/server.cpp:  server(boost::asio::io_context& io_context, unsigned short port)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/server.cpp:          boost::asio::ip::tcp::endpoint(boost::asio::ip::tcp::v4(), port)),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/server.cpp:      context_(boost::asio::ssl::context::sslv23)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/server.cpp:        boost::asio::ssl::context::default_workarounds
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/server.cpp:        | boost::asio::ssl::context::no_sslv2
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/server.cpp:        | boost::asio::ssl::context::single_dh_use);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/server.cpp:    context_.use_private_key_file("server.pem", boost::asio::ssl::context::pem);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/server.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/server.cpp:  boost::asio::io_context& io_context_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/server.cpp:  boost::asio::ip::tcp::acceptor acceptor_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/server.cpp:  boost::asio::ssl::context context_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/client.cpp:  client(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/client.cpp:      boost::asio::ssl::context& context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/client.cpp:      boost::asio::ip::tcp::resolver::results_type endpoints)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/client.cpp:    socket_.set_verify_mode(boost::asio::ssl::verify_peer);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/client.cpp:    boost::asio::async_connect(socket_.lowest_layer(), endpoints,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/client.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/client.cpp:      boost::asio::ssl::verify_context& ctx)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/client.cpp:      socket_.async_handshake(boost::asio::ssl::stream_base::client,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/client.cpp:      boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/client.cpp:          boost::asio::buffer(request_, request_length),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/client.cpp:            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/client.cpp:            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/client.cpp:      boost::asio::async_read(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/client.cpp:          boost::asio::buffer(reply_, bytes_transferred),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/client.cpp:            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/client.cpp:            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/client.cpp:  boost::asio::ssl::stream<boost::asio::ip::tcp::socket> socket_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/client.cpp:    boost::asio::ip::tcp::resolver resolver(io_context);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/client.cpp:    boost::asio::ip::tcp::resolver::results_type endpoints =
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/ssl/client.cpp:    boost::asio::ssl::context ctx(boost::asio::ssl::context::sslv23);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/services/logger_service.hpp:  : public boost::asio::io_context::service
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/services/logger_service.hpp:  static boost::asio::io_context::id id;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/services/logger_service.hpp:  logger_service(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/services/logger_service.hpp:    : boost::asio::io_context::service(io_context),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/services/logger_service.hpp:      work_(boost::asio::make_work_guard(work_io_context_)),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/services/logger_service.hpp:            boost::bind(&boost::asio::io_context::run, &work_io_context_)))
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/services/logger_service.hpp:    boost::asio::post(work_io_context_, boost::bind(
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/services/logger_service.hpp:    boost::asio::post(work_io_context_, boost::bind(
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/services/logger_service.hpp:  boost::asio::io_context work_io_context_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/services/logger_service.hpp:  boost::asio::executor_work_guard<
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/services/logger_service.hpp:      boost::asio::io_context::executor_type> work_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/services/basic_logger.hpp:  explicit basic_logger(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/services/basic_logger.hpp:    : service_(boost::asio::use_service<Service>(io_context)),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/services/basic_logger.hpp:  boost::asio::io_context& get_io_context()
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/services/daytime_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/services/daytime_client.cpp:    s->async_read_some(boost::asio::buffer(read_buffer),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/services/daytime_client.cpp:        boost::bind(read_handler, boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/services/daytime_client.cpp:          boost::asio::placeholders::bytes_transferred, s));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/services/daytime_client.cpp:    s->async_read_some(boost::asio::buffer(read_buffer),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/services/daytime_client.cpp:        boost::bind(read_handler, boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/services/daytime_client.cpp:          boost::asio::placeholders::bytes_transferred, s));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/services/daytime_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/services/daytime_client.cpp:    boost::asio::async_connect(socket, endpoints,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/services/daytime_client.cpp:          boost::asio::placeholders::error, &socket));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/services/logger_service.cpp:boost::asio::io_context::id logger_service::id;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/async_tcp_echo_server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/async_tcp_echo_server.cpp:  session(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/async_tcp_echo_server.cpp:    socket_.async_read_some(boost::asio::buffer(data_, max_length),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/async_tcp_echo_server.cpp:          boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/async_tcp_echo_server.cpp:          boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/async_tcp_echo_server.cpp:      boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/async_tcp_echo_server.cpp:          boost::asio::buffer(data_, bytes_transferred),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/async_tcp_echo_server.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/async_tcp_echo_server.cpp:      socket_.async_read_some(boost::asio::buffer(data_, max_length),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/async_tcp_echo_server.cpp:            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/async_tcp_echo_server.cpp:            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/async_tcp_echo_server.cpp:  server(boost::asio::io_context& io_context, short port)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/async_tcp_echo_server.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/async_tcp_echo_server.cpp:  boost::asio::io_context& io_context_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/async_tcp_echo_server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/blocking_udp_echo_server.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/blocking_udp_echo_server.cpp:void server(boost::asio::io_context& io_context, unsigned short port)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/blocking_udp_echo_server.cpp:        boost::asio::buffer(data, max_length), sender_endpoint);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/blocking_udp_echo_server.cpp:    sock.send_to(boost::asio::buffer(data, length), sender_endpoint);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/blocking_udp_echo_server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/blocking_udp_echo_client.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/blocking_udp_echo_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/blocking_udp_echo_client.cpp:    s.send_to(boost::asio::buffer(request, request_length), *endpoints.begin());
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/blocking_udp_echo_client.cpp:        boost::asio::buffer(reply, max_length), sender_endpoint);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/blocking_tcp_echo_server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/blocking_tcp_echo_server.cpp:      size_t length = sock->read_some(boost::asio::buffer(data), error);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/blocking_tcp_echo_server.cpp:      if (error == boost::asio::error::eof)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/blocking_tcp_echo_server.cpp:      boost::asio::write(*sock, boost::asio::buffer(data, length));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/blocking_tcp_echo_server.cpp:void server(boost::asio::io_context& io_context, unsigned short port)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/blocking_tcp_echo_server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/async_udp_echo_server.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/async_udp_echo_server.cpp:  server(boost::asio::io_context& io_context, short port)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/async_udp_echo_server.cpp:        boost::asio::buffer(data_, max_length), sender_endpoint_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/async_udp_echo_server.cpp:          boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/async_udp_echo_server.cpp:          boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/async_udp_echo_server.cpp:          boost::asio::buffer(data_, bytes_recvd), sender_endpoint_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/async_udp_echo_server.cpp:            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/async_udp_echo_server.cpp:            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/async_udp_echo_server.cpp:          boost::asio::buffer(data_, max_length), sender_endpoint_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/async_udp_echo_server.cpp:            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/async_udp_echo_server.cpp:            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/async_udp_echo_server.cpp:        boost::asio::buffer(data_, max_length), sender_endpoint_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/async_udp_echo_server.cpp:          boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/async_udp_echo_server.cpp:          boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/async_udp_echo_server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/blocking_tcp_echo_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/blocking_tcp_echo_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/blocking_tcp_echo_client.cpp:    boost::asio::connect(s, endpoints);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/blocking_tcp_echo_client.cpp:    boost::asio::write(s, boost::asio::buffer(request, request_length));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/blocking_tcp_echo_client.cpp:    size_t reply_length = boost::asio::read(s,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/echo/blocking_tcp_echo_client.cpp:        boost::asio::buffer(reply, request_length));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/stream_server.cpp:using boost::asio::local::stream_protocol;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/stream_server.cpp:  session(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/stream_server.cpp:    socket_.async_read_some(boost::asio::buffer(data_),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/stream_server.cpp:          boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/stream_server.cpp:          boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/stream_server.cpp:      boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/stream_server.cpp:          boost::asio::buffer(data_, bytes_transferred),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/stream_server.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/stream_server.cpp:      socket_.async_read_some(boost::asio::buffer(data_),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/stream_server.cpp:            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/stream_server.cpp:            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/stream_server.cpp:  server(boost::asio::io_context& io_context, const std::string& file)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/stream_server.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/stream_server.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/stream_server.cpp:  boost::asio::io_context& io_context_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/stream_server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/stream_client.cpp:using boost::asio::local::stream_protocol;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/stream_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/stream_client.cpp:    boost::asio::write(s, boost::asio::buffer(request, request_length));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/stream_client.cpp:    size_t reply_length = boost::asio::read(s,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/stream_client.cpp:        boost::asio::buffer(reply, request_length));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/iostream_client.cpp:using boost::asio::local::stream_protocol;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/connect_pair.cpp:using boost::asio::local::stream_protocol;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/connect_pair.cpp:  uppercase_filter(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/connect_pair.cpp:    socket_.async_read_some(boost::asio::buffer(data_),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/connect_pair.cpp:          this, boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/connect_pair.cpp:          boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/connect_pair.cpp:      boost::asio::async_write(socket_, boost::asio::buffer(data_, size),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/connect_pair.cpp:            this, boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/connect_pair.cpp:      socket_.async_read_some(boost::asio::buffer(data_),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/connect_pair.cpp:            this, boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/connect_pair.cpp:            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/connect_pair.cpp:void run(boost::asio::io_context* io_context)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/connect_pair.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/connect_pair.cpp:    boost::asio::local::connect_pair(socket, filter.socket());
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/connect_pair.cpp:      boost::asio::write(socket, boost::asio::buffer(request));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/local/connect_pair.cpp:      boost::asio::read(socket, boost::asio::buffer(reply));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/invocation/prioritised_handlers.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/invocation/prioritised_handlers.cpp:class handler_priority_queue : public boost::asio::execution_context
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/invocation/prioritised_handlers.cpp:  boost::asio::executor_binder<Handler, executor>
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/invocation/prioritised_handlers.cpp:    return boost::asio::bind_executor(executor(*this, priority), handler);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/invocation/prioritised_handlers.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/invocation/prioritised_handlers.cpp:  boost::asio::post(io_context, pri_queue.wrap(0, low_priority_handler));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/invocation/prioritised_handlers.cpp:  tcp::endpoint endpoint(boost::asio::ip::address_v4::loopback(), 0);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/invocation/prioritised_handlers.cpp:  boost::asio::steady_timer timer(io_context);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/invocation/prioritised_handlers.cpp:  timer.expires_at(boost::asio::steady_timer::time_point::min());
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/nonblocking/third_party_lib.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/nonblocking/third_party_lib.cpp:    if (std::size_t len = socket_.read_some(boost::asio::buffer(data_), ec))
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/nonblocking/third_party_lib.cpp:      write_buffer_ = boost::asio::buffer(data_, len);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/nonblocking/third_party_lib.cpp:          boost::asio::buffer(write_buffer_), ec))
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/nonblocking/third_party_lib.cpp:      state_ = boost::asio::buffer_size(write_buffer_) > 0 ? writing : reading;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/nonblocking/third_party_lib.cpp:  boost::asio::const_buffer write_buffer_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/nonblocking/third_party_lib.cpp:  static pointer create(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/nonblocking/third_party_lib.cpp:  connection(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/nonblocking/third_party_lib.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/nonblocking/third_party_lib.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/nonblocking/third_party_lib.cpp:    if (!ec || ec == boost::asio::error::would_block)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/nonblocking/third_party_lib.cpp:    if (!ec || ec == boost::asio::error::would_block)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/nonblocking/third_party_lib.cpp:  server(boost::asio::io_context& io_context, unsigned short port)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/nonblocking/third_party_lib.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/nonblocking/third_party_lib.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer5/timer.cpp:  printer(boost::asio::io_context& io)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer5/timer.cpp:      timer1_(io, boost::asio::chrono::seconds(1)),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer5/timer.cpp:      timer2_(io, boost::asio::chrono::seconds(1)),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer5/timer.cpp:    timer1_.async_wait(boost::asio::bind_executor(strand_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer5/timer.cpp:    timer2_.async_wait(boost::asio::bind_executor(strand_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer5/timer.cpp:      timer1_.expires_at(timer1_.expiry() + boost::asio::chrono::seconds(1));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer5/timer.cpp:      timer1_.async_wait(boost::asio::bind_executor(strand_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer5/timer.cpp:      timer2_.expires_at(timer2_.expiry() + boost::asio::chrono::seconds(1));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer5/timer.cpp:      timer2_.async_wait(boost::asio::bind_executor(strand_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer5/timer.cpp:  boost::asio::io_context::strand strand_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer5/timer.cpp:  boost::asio::steady_timer timer1_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer5/timer.cpp:  boost::asio::steady_timer timer2_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer5/timer.cpp:  boost::asio::io_context io;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer5/timer.cpp:  boost::thread t(boost::bind(&boost::asio::io_context::run, &io));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime6/server.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime6/server.cpp:  udp_server(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime6/server.cpp:        boost::asio::buffer(recv_buffer_), remote_endpoint_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime6/server.cpp:          boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime6/server.cpp:          boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime6/server.cpp:      socket_.async_send_to(boost::asio::buffer(*message), remote_endpoint_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime6/server.cpp:            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime6/server.cpp:            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime6/server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer1/timer.cpp:  boost::asio::io_context io;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer1/timer.cpp:  boost::asio::steady_timer t(io, boost::asio::chrono::seconds(5));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime4/client.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime4/client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime4/client.cpp:    socket.send_to(boost::asio::buffer(send_buf), receiver_endpoint);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime4/client.cpp:        boost::asio::buffer(recv_buf), sender_endpoint);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime3/server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime3/server.cpp:  static pointer create(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime3/server.cpp:    boost::asio::async_write(socket_, boost::asio::buffer(message_),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime3/server.cpp:          boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime3/server.cpp:          boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime3/server.cpp:  tcp_connection(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime3/server.cpp:  tcp_server(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime3/server.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime3/server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:All programs that use asio need to have at least one boost::asio::io_context object.
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:\until boost::asio::io_context
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:Next we declare an object of type boost::asio::steady_timer. The core asio classes
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:\until boost::asio::steady_timer
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:That is, the call to boost::asio::steady_timer::wait() will not return until the
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:boost::asio::steady_timer::wait() function is called on an expired timer, it will
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:\until boost::asio::steady_timer 
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:we call the boost::asio::steady_timer::async_wait() function to perform an
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:Finally, we must call the boost::asio::io_context::run() member function
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:be called from threads that are currently calling boost::asio::io_context::run().
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:Therefore unless the boost::asio::io_context::run() function is called the callback for
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:The boost::asio::io_context::run() function will also continue to run while there is
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:calling boost::asio::io_context::run(). For example, if we had omitted the above call
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:to boost::asio::steady_timer::async_wait(), the io_context would not have had any
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:work to do, and consequently boost::asio::io_context::run() would have returned
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:tutorial Timer.2 we learnt that the boost::asio::io_context::run() function completes
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:with your callback handler. The boost::asio::steady_timer::async_wait() function
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:In this example, the boost::asio::placeholders::error argument to boost::bind() is a
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:\until boost::asio::io_context
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:\until boost::asio::steady_timer
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:boost::asio::steady_timer::async_wait() from <tt>main</tt> we bind the additional
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:You will note that the boost::asio::placeholders::error placeholder is not specified
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:This tutorial demonstrates the use of the boost::asio::io_context::strand class to
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:calling the boost::asio::io_context::run() function from one thread only. As you
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:boost::asio::io_context::run(). Consequently, calling boost::asio::io_context::run() from
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:is to have a pool of threads calling boost::asio::io_context::run(). However, as this
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:In addition to initialising a pair of boost::asio::steady_timer members, the
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:boost::asio::io_context::strand.
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:An boost::asio::io_context::strand is an executor that guarantees that, for those
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:the number of threads that are calling boost::asio::io_context::run(). Of course, the
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:<b>not</b> dispatched through an boost::asio::io_context::strand, or were dispatched
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:through a different boost::asio::io_context::strand object.
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:to an boost::asio::io_context::strand object. The
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:boost::asio::io_context::strand::bind_executor() function returns a new handler that
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:boost::asio::io_context::strand object. By binding the handlers to the same
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:boost::asio::io_context::strand, we are ensuring that they cannot execute
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:The <tt>main</tt> function now causes boost::asio::io_context::run() to
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer_dox.txt:boost::asio::io_context::run() will continue to execute while there is "work" left to
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer3/timer.cpp:    boost::asio::steady_timer* t, int* count)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer3/timer.cpp:    t->expires_at(t->expiry() + boost::asio::chrono::seconds(1));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer3/timer.cpp:          boost::asio::placeholders::error, t, count));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer3/timer.cpp:  boost::asio::io_context io;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer3/timer.cpp:  boost::asio::steady_timer t(io, boost::asio::chrono::seconds(1));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer3/timer.cpp:        boost::asio::placeholders::error, &t, &count));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:All programs that use asio need to have at least one boost::asio::io_context
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:\until boost::asio::io_context
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:boost::asio::ip::tcp::resolver object.
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:boost::asio::ip::tcp::resolver::iterator. (Note that a default constructed
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:boost::asio::ip::tcp::resolver::iterator object can be used as an end iterator.)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:version. The boost::asio::connect() function does this for us automatically.
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:\until boost::asio::connect
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:We use a <tt>boost::array</tt> to hold the received data. The boost::asio::buffer()
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:When the server closes the connection, the boost::asio::ip::tcp::socket::read_some()
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:function will exit with the boost::asio::error::eof error, which is how we know to
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:\until boost::asio::io_context
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:A boost::asio::ip::tcp::acceptor object needs to be created to listen
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:boost::asio::io_context object provides I/O services, such as sockets, that the
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:Run the boost::asio::io_context object so that it will perform asynchronous operations
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:In the function <tt>start()</tt>, we call boost::asio::async_write() to serve the data
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:to the client. Note that we are using boost::asio::async_write(), rather than
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:boost::asio::ip::tcp::socket::async_write_some(), to ensure that the entire block of
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:this program, both of the argument placeholders (boost::asio::placeholders::error and
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:boost::asio::placeholders::bytes_transferred) could potentially have been removed,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:The boost::asio::async_write() call used to initiate the call can then be changed to
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:  boost::asio::async_write(socket_, boost::asio::buffer(message_),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:\until using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:\until boost::asio::io_context
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:We use an boost::asio::ip::udp::resolver object to find the correct remote endpoint to
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:IPv4 endpoints by the boost::asio::ip::udp::v4() argument.
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:The boost::asio::ip::udp::resolver::resolve() function is guaranteed to return at
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:boost::asio::ip::udp::socket and initiate contact with the remote endpoint.
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:boost::asio::ip::udp::socket::receive_from(). 
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:\until boost::asio::io_context
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:Create an boost::asio::ip::udp::socket object to receive requests on UDP port 13.
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:be populated by boost::asio::ip::udp::socket::receive_from().
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:the boost::asio::io_context object.
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:The function boost::asio::ip::udp::socket::async_receive_from() will cause the
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:is received, the boost::asio::io_context object will invoke the
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:request, the boost::asio::io_context object would return an error if the client sent
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:We now call boost::asio::ip::udp::socket::async_send_to() to serve the data to the
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:\until boost::asio::placeholders::bytes_transferred
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:this program, both of the argument placeholders (boost::asio::placeholders::error and
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:boost::asio::placeholders::bytes_transferred) could potentially have been removed.
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:\until boost::asio::io_context
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime_dox.txt:We have created two lots of work for the boost::asio::io_context object to do.
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime1/client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime1/client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime1/client.cpp:    boost::asio::connect(socket, endpoints);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime1/client.cpp:      size_t len = socket.read_some(boost::asio::buffer(buf), error);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime1/client.cpp:      if (error == boost::asio::error::eof)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime7/server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime7/server.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime7/server.cpp:  static pointer create(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime7/server.cpp:    boost::asio::async_write(socket_, boost::asio::buffer(message_),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime7/server.cpp:  tcp_connection(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime7/server.cpp:  tcp_server(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime7/server.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime7/server.cpp:  udp_server(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime7/server.cpp:        boost::asio::buffer(recv_buffer_), remote_endpoint_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime7/server.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime7/server.cpp:      socket_.async_send_to(boost::asio::buffer(*message), remote_endpoint_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime7/server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer4/timer.cpp:  printer(boost::asio::io_context& io)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer4/timer.cpp:    : timer_(io, boost::asio::chrono::seconds(1)),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer4/timer.cpp:      timer_.expires_at(timer_.expiry() + boost::asio::chrono::seconds(1));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer4/timer.cpp:  boost::asio::steady_timer timer_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer4/timer.cpp:  boost::asio::io_context io;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer2/timer.cpp:  boost::asio::io_context io;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/timer2/timer.cpp:  boost::asio::steady_timer t(io, boost::asio::chrono::seconds(5));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime2/server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime2/server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime2/server.cpp:      boost::asio::write(socket, boost::asio::buffer(message), ignored_error);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime5/server.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime5/server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime5/server.cpp:      socket.receive_from(boost::asio::buffer(recv_buf), remote_endpoint);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/tutorial/daytime5/server.cpp:      socket.send_to(boost::asio::buffer(message),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/multicast/receiver.cpp:  receiver(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/multicast/receiver.cpp:      const boost::asio::ip::address& listen_address,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/multicast/receiver.cpp:      const boost::asio::ip::address& multicast_address)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/multicast/receiver.cpp:    boost::asio::ip::udp::endpoint listen_endpoint(
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/multicast/receiver.cpp:    socket_.set_option(boost::asio::ip::udp::socket::reuse_address(true));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/multicast/receiver.cpp:        boost::asio::ip::multicast::join_group(multicast_address));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/multicast/receiver.cpp:        boost::asio::buffer(data_, max_length), sender_endpoint_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/multicast/receiver.cpp:          boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/multicast/receiver.cpp:          boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/multicast/receiver.cpp:          boost::asio::buffer(data_, max_length), sender_endpoint_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/multicast/receiver.cpp:            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/multicast/receiver.cpp:            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/multicast/receiver.cpp:  boost::asio::ip::udp::socket socket_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/multicast/receiver.cpp:  boost::asio::ip::udp::endpoint sender_endpoint_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/multicast/receiver.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/multicast/receiver.cpp:        boost::asio::ip::make_address(argv[1]),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/multicast/receiver.cpp:        boost::asio::ip::make_address(argv[2]));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/multicast/sender.cpp:  sender(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/multicast/sender.cpp:      const boost::asio::ip::address& multicast_address)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/multicast/sender.cpp:        boost::asio::buffer(message_), endpoint_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/multicast/sender.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/multicast/sender.cpp:      timer_.expires_after(boost::asio::chrono::seconds(1));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/multicast/sender.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/multicast/sender.cpp:          boost::asio::buffer(message_), endpoint_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/multicast/sender.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/multicast/sender.cpp:  boost::asio::ip::udp::endpoint endpoint_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/multicast/sender.cpp:  boost::asio::ip::udp::socket socket_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/multicast/sender.cpp:  boost::asio::steady_timer timer_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/multicast/sender.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/multicast/sender.cpp:    sender s(io_context, boost::asio::ip::make_address(argv[1]));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timers/time_t_timer.cpp:  typedef boost::asio::chrono::steady_clock::duration duration;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timers/time_t_timer.cpp:  typedef boost::asio::chrono::time_point<time_t_clock> time_point;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timers/time_t_timer.cpp:    return time_point() + boost::asio::chrono::seconds(std::time(0));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timers/time_t_timer.cpp:// The boost::asio::basic_waitable_timer template accepts an optional WaitTraits
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timers/time_t_timer.cpp:    if (d > boost::asio::chrono::seconds(1))
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timers/time_t_timer.cpp:      return d - boost::asio::chrono::seconds(1);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timers/time_t_timer.cpp:    else if (d > boost::asio::chrono::seconds(0))
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timers/time_t_timer.cpp:      return boost::asio::chrono::milliseconds(10);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timers/time_t_timer.cpp:      return boost::asio::chrono::seconds(0);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timers/time_t_timer.cpp:typedef boost::asio::basic_waitable_timer<
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timers/time_t_timer.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timers/time_t_timer.cpp:    timer.expires_after(boost::asio::chrono::seconds(5));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/timers/time_t_timer.cpp:    timer.expires_after(boost::asio::chrono::seconds(5));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/socks4/sync_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/socks4/sync_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/socks4/sync_client.cpp:    boost::asio::connect(socket, endpoints);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/socks4/sync_client.cpp:    boost::asio::write(socket, socks_request.buffers());
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/socks4/sync_client.cpp:    boost::asio::read(socket, socks_reply.buffers());
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/socks4/sync_client.cpp:    boost::asio::write(socket, boost::asio::buffer(request));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/socks4/sync_client.cpp:          boost::asio::buffer(response), error))
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/socks4/sync_client.cpp:    if (error != boost::asio::error::eof)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/socks4/socks4.hpp:  request(command_type cmd, const boost::asio::ip::tcp::endpoint& endpoint,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/socks4/socks4.hpp:    if (endpoint.protocol() != boost::asio::ip::tcp::v4())
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/socks4/socks4.hpp:          boost::asio::error::address_family_not_supported);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/socks4/socks4.hpp:  boost::array<boost::asio::const_buffer, 7> buffers() const
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/socks4/socks4.hpp:    boost::array<boost::asio::const_buffer, 7> bufs =
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/socks4/socks4.hpp:        boost::asio::buffer(&version_, 1),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/socks4/socks4.hpp:        boost::asio::buffer(&command_, 1),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/socks4/socks4.hpp:        boost::asio::buffer(&port_high_byte_, 1),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/socks4/socks4.hpp:        boost::asio::buffer(&port_low_byte_, 1),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/socks4/socks4.hpp:        boost::asio::buffer(address_),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/socks4/socks4.hpp:        boost::asio::buffer(user_id_),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/socks4/socks4.hpp:        boost::asio::buffer(&null_byte_, 1)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/socks4/socks4.hpp:  boost::asio::ip::address_v4::bytes_type address_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/socks4/socks4.hpp:  boost::array<boost::asio::mutable_buffer, 5> buffers()
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/socks4/socks4.hpp:    boost::array<boost::asio::mutable_buffer, 5> bufs =
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/socks4/socks4.hpp:        boost::asio::buffer(&null_byte_, 1),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/socks4/socks4.hpp:        boost::asio::buffer(&status_, 1),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/socks4/socks4.hpp:        boost::asio::buffer(&port_high_byte_, 1),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/socks4/socks4.hpp:        boost::asio::buffer(&port_low_byte_, 1),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/socks4/socks4.hpp:        boost::asio::buffer(address_)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/socks4/socks4.hpp:  boost::asio::ip::tcp::endpoint endpoint() const
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/socks4/socks4.hpp:    boost::asio::ip::address_v4 address(address_);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/socks4/socks4.hpp:    return boost::asio::ip::tcp::endpoint(address, port);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/socks4/socks4.hpp:  boost::asio::ip::address_v4::bytes_type address_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/porthopper/protocol.hpp:  boost::array<boost::asio::mutable_buffer, 1> to_buffers()
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/porthopper/protocol.hpp:    boost::array<boost::asio::mutable_buffer, 1> buffers
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/porthopper/protocol.hpp:      = { { boost::asio::buffer(data_) } };
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/porthopper/protocol.hpp:  boost::array<boost::asio::mutable_buffer, 1> to_buffers()
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/porthopper/protocol.hpp:    boost::array<boost::asio::mutable_buffer, 1> buffers
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/porthopper/protocol.hpp:      = { { boost::asio::buffer(data_) } };
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/porthopper/server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/porthopper/server.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/porthopper/server.cpp:typedef boost::shared_ptr<boost::asio::steady_timer> timer_ptr;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/porthopper/server.cpp:  server(boost::asio::io_context& io_context, unsigned short port)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/porthopper/server.cpp:          boost::asio::placeholders::error, new_socket));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/porthopper/server.cpp:    timer_.expires_after(boost::asio::chrono::milliseconds(100));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/porthopper/server.cpp:      boost::asio::async_read(*socket, request->to_buffers(),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/porthopper/server.cpp:            boost::asio::placeholders::error, socket, request));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/porthopper/server.cpp:          boost::asio::placeholders::error, new_socket));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/porthopper/server.cpp:          new boost::asio::steady_timer(acceptor_.get_executor().context()));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/porthopper/server.cpp:      delay_timer->expires_after(boost::asio::chrono::seconds(2));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/porthopper/server.cpp:    boost::asio::async_read(*socket, request->to_buffers(),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/porthopper/server.cpp:          boost::asio::placeholders::error, socket, request));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/porthopper/server.cpp:    timer_.expires_after(boost::asio::chrono::milliseconds(100));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/porthopper/server.cpp:  boost::asio::steady_timer timer_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/porthopper/server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/porthopper/client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/porthopper/client.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/porthopper/client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/porthopper/client.cpp:    boost::asio::write(control_socket, start.to_buffers());
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/porthopper/client.cpp:      boost::asio::async_write(control_socket, change.to_buffers(),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/porthopper/client.cpp:                  lambda::bind(&boost::asio::io_context::stop, &io_context),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/iostreams/daytime_server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/iostreams/daytime_server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/iostreams/http_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/iostreams/http_client.cpp:    boost::asio::ip::tcp::iostream s;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/iostreams/http_client.cpp:    s.expires_after(boost::asio::chrono::seconds(60));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/iostreams/daytime_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/client/async_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/client/async_client.cpp:  client(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/client/async_client.cpp:          boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/client/async_client.cpp:          boost::asio::placeholders::results));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/client/async_client.cpp:      boost::asio::async_connect(socket_, endpoints,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/client/async_client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/client/async_client.cpp:      boost::asio::async_write(socket_, request_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/client/async_client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/client/async_client.cpp:      boost::asio::async_read_until(socket_, response_, "\r\n",
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/client/async_client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/client/async_client.cpp:      boost::asio::async_read_until(socket_, response_, "\r\n\r\n",
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/client/async_client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/client/async_client.cpp:      boost::asio::async_read(socket_, response_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/client/async_client.cpp:          boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/client/async_client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/client/async_client.cpp:      boost::asio::async_read(socket_, response_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/client/async_client.cpp:          boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/client/async_client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/client/async_client.cpp:    else if (err != boost::asio::error::eof)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/client/async_client.cpp:  boost::asio::streambuf request_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/client/async_client.cpp:  boost::asio::streambuf response_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/client/async_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/client/sync_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/client/sync_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/client/sync_client.cpp:    boost::asio::connect(socket, endpoints);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/client/sync_client.cpp:    boost::asio::streambuf request;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/client/sync_client.cpp:    boost::asio::write(socket, request);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/client/sync_client.cpp:    boost::asio::streambuf response;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/client/sync_client.cpp:    boost::asio::read_until(socket, response, "\r\n");
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/client/sync_client.cpp:    boost::asio::read_until(socket, response, "\r\n\r\n");
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/client/sync_client.cpp:    while (boost::asio::read(socket, response,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/client/sync_client.cpp:          boost::asio::transfer_at_least(1), error))
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/client/sync_client.cpp:    if (error != boost::asio::error::eof)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/reply.hpp:  std::vector<boost::asio::const_buffer> to_buffers();
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/server.hpp:  boost::asio::io_context io_context_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/server.hpp:  boost::asio::signal_set signals_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/server.hpp:  boost::asio::ip::tcp::acceptor acceptor_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/server.cpp:  boost::asio::ip::tcp::resolver resolver(io_context_);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/server.cpp:  boost::asio::ip::tcp::endpoint endpoint =
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/server.cpp:  acceptor_.set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/server.cpp:          boost::bind(&boost::asio::io_context::run, &io_context_)));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/server.cpp:        boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/connection.hpp:  explicit connection(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/connection.hpp:  boost::asio::ip::tcp::socket& socket();
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/connection.hpp:  boost::asio::io_context::strand strand_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/connection.hpp:  boost::asio::ip::tcp::socket socket_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/connection.cpp:connection::connection(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/connection.cpp:boost::asio::ip::tcp::socket& connection::socket()
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/connection.cpp:  socket_.async_read_some(boost::asio::buffer(buffer_),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/connection.cpp:      boost::asio::bind_executor(strand_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/connection.cpp:          boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/connection.cpp:          boost::asio::placeholders::bytes_transferred)));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/connection.cpp:      boost::asio::async_write(socket_, reply_.to_buffers(),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/connection.cpp:          boost::asio::bind_executor(strand_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/connection.cpp:              boost::asio::placeholders::error)));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/connection.cpp:      boost::asio::async_write(socket_, reply_.to_buffers(),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/connection.cpp:          boost::asio::bind_executor(strand_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/connection.cpp:              boost::asio::placeholders::error)));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/connection.cpp:      socket_.async_read_some(boost::asio::buffer(buffer_),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/connection.cpp:          boost::asio::bind_executor(strand_,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/connection.cpp:              boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/connection.cpp:              boost::asio::placeholders::bytes_transferred)));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/connection.cpp:    socket_.shutdown(boost::asio::ip::tcp::socket::shutdown_both, ignored_ec);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/reply.cpp:boost::asio::const_buffer to_buffer(reply::status_type status)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/reply.cpp:    return boost::asio::buffer(ok);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/reply.cpp:    return boost::asio::buffer(created);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/reply.cpp:    return boost::asio::buffer(accepted);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/reply.cpp:    return boost::asio::buffer(no_content);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/reply.cpp:    return boost::asio::buffer(multiple_choices);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/reply.cpp:    return boost::asio::buffer(moved_permanently);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/reply.cpp:    return boost::asio::buffer(moved_temporarily);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/reply.cpp:    return boost::asio::buffer(not_modified);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/reply.cpp:    return boost::asio::buffer(bad_request);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/reply.cpp:    return boost::asio::buffer(unauthorized);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/reply.cpp:    return boost::asio::buffer(forbidden);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/reply.cpp:    return boost::asio::buffer(not_found);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/reply.cpp:    return boost::asio::buffer(internal_server_error);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/reply.cpp:    return boost::asio::buffer(not_implemented);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/reply.cpp:    return boost::asio::buffer(bad_gateway);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/reply.cpp:    return boost::asio::buffer(service_unavailable);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/reply.cpp:    return boost::asio::buffer(internal_server_error);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/reply.cpp:std::vector<boost::asio::const_buffer> reply::to_buffers()
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/reply.cpp:  std::vector<boost::asio::const_buffer> buffers;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/reply.cpp:    buffers.push_back(boost::asio::buffer(h.name));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/reply.cpp:    buffers.push_back(boost::asio::buffer(misc_strings::name_value_separator));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/reply.cpp:    buffers.push_back(boost::asio::buffer(h.value));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/reply.cpp:    buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/reply.cpp:  buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server3/reply.cpp:  buffers.push_back(boost::asio::buffer(content));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/io_context_pool.hpp:  boost::asio::io_context& get_io_context();
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/io_context_pool.hpp:  typedef boost::shared_ptr<boost::asio::io_context> io_context_ptr;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/io_context_pool.hpp:  typedef boost::asio::executor_work_guard<
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/io_context_pool.hpp:    boost::asio::io_context::executor_type> io_context_work;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/reply.hpp:  std::vector<boost::asio::const_buffer> to_buffers();
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/server.hpp:  boost::asio::signal_set signals_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/server.hpp:  boost::asio::ip::tcp::acceptor acceptor_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/server.cpp:  boost::asio::ip::tcp::resolver resolver(acceptor_.get_executor().context());
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/server.cpp:  boost::asio::ip::tcp::endpoint endpoint =
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/server.cpp:  acceptor_.set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/server.cpp:        boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/connection.hpp:  explicit connection(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/connection.hpp:  boost::asio::ip::tcp::socket& socket();
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/connection.hpp:  boost::asio::ip::tcp::socket socket_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/io_context_pool.cpp:    io_context_ptr io_context(new boost::asio::io_context);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/io_context_pool.cpp:    work_.push_back(boost::asio::make_work_guard(*io_context));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/io_context_pool.cpp:          boost::bind(&boost::asio::io_context::run, io_contexts_[i])));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/io_context_pool.cpp:boost::asio::io_context& io_context_pool::get_io_context()
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/io_context_pool.cpp:  boost::asio::io_context& io_context = *io_contexts_[next_io_context_];
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/connection.cpp:connection::connection(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/connection.cpp:boost::asio::ip::tcp::socket& connection::socket()
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/connection.cpp:  socket_.async_read_some(boost::asio::buffer(buffer_),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/connection.cpp:        boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/connection.cpp:        boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/connection.cpp:      boost::asio::async_write(socket_, reply_.to_buffers(),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/connection.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/connection.cpp:      boost::asio::async_write(socket_, reply_.to_buffers(),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/connection.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/connection.cpp:      socket_.async_read_some(boost::asio::buffer(buffer_),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/connection.cpp:            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/connection.cpp:            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/connection.cpp:    socket_.shutdown(boost::asio::ip::tcp::socket::shutdown_both, ignored_ec);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/reply.cpp:boost::asio::const_buffer to_buffer(reply::status_type status)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/reply.cpp:    return boost::asio::buffer(ok);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/reply.cpp:    return boost::asio::buffer(created);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/reply.cpp:    return boost::asio::buffer(accepted);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/reply.cpp:    return boost::asio::buffer(no_content);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/reply.cpp:    return boost::asio::buffer(multiple_choices);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/reply.cpp:    return boost::asio::buffer(moved_permanently);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/reply.cpp:    return boost::asio::buffer(moved_temporarily);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/reply.cpp:    return boost::asio::buffer(not_modified);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/reply.cpp:    return boost::asio::buffer(bad_request);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/reply.cpp:    return boost::asio::buffer(unauthorized);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/reply.cpp:    return boost::asio::buffer(forbidden);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/reply.cpp:    return boost::asio::buffer(not_found);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/reply.cpp:    return boost::asio::buffer(internal_server_error);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/reply.cpp:    return boost::asio::buffer(not_implemented);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/reply.cpp:    return boost::asio::buffer(bad_gateway);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/reply.cpp:    return boost::asio::buffer(service_unavailable);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/reply.cpp:    return boost::asio::buffer(internal_server_error);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/reply.cpp:std::vector<boost::asio::const_buffer> reply::to_buffers()
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/reply.cpp:  std::vector<boost::asio::const_buffer> buffers;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/reply.cpp:    buffers.push_back(boost::asio::buffer(h.name));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/reply.cpp:    buffers.push_back(boost::asio::buffer(misc_strings::name_value_separator));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/reply.cpp:    buffers.push_back(boost::asio::buffer(h.value));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/reply.cpp:    buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/reply.cpp:  buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server2/reply.cpp:  buffers.push_back(boost::asio::buffer(content));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/reply.hpp:  std::vector<boost::asio::const_buffer> to_buffers();
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/server.hpp:  boost::asio::io_context io_context_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/server.hpp:  boost::asio::signal_set signals_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/server.hpp:  boost::asio::ip::tcp::acceptor acceptor_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/server.cpp:  boost::asio::ip::tcp::resolver resolver(io_context_);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/server.cpp:  boost::asio::ip::tcp::endpoint endpoint =
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/server.cpp:  acceptor_.set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/server.cpp:        boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/connection.hpp:  explicit connection(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/connection.hpp:  boost::asio::ip::tcp::socket& socket();
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/connection.hpp:  boost::asio::ip::tcp::socket socket_;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/connection.cpp:connection::connection(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/connection.cpp:boost::asio::ip::tcp::socket& connection::socket()
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/connection.cpp:  socket_.async_read_some(boost::asio::buffer(buffer_),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/connection.cpp:        boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/connection.cpp:        boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/connection.cpp:      boost::asio::async_write(socket_, reply_.to_buffers(),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/connection.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/connection.cpp:      boost::asio::async_write(socket_, reply_.to_buffers(),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/connection.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/connection.cpp:      socket_.async_read_some(boost::asio::buffer(buffer_),
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/connection.cpp:            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/connection.cpp:            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/connection.cpp:  else if (e != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/connection.cpp:    socket_.shutdown(boost::asio::ip::tcp::socket::shutdown_both, ignored_ec);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/connection.cpp:  if (e != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/reply.cpp:boost::asio::const_buffer to_buffer(reply::status_type status)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/reply.cpp:    return boost::asio::buffer(ok);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/reply.cpp:    return boost::asio::buffer(created);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/reply.cpp:    return boost::asio::buffer(accepted);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/reply.cpp:    return boost::asio::buffer(no_content);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/reply.cpp:    return boost::asio::buffer(multiple_choices);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/reply.cpp:    return boost::asio::buffer(moved_permanently);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/reply.cpp:    return boost::asio::buffer(moved_temporarily);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/reply.cpp:    return boost::asio::buffer(not_modified);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/reply.cpp:    return boost::asio::buffer(bad_request);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/reply.cpp:    return boost::asio::buffer(unauthorized);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/reply.cpp:    return boost::asio::buffer(forbidden);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/reply.cpp:    return boost::asio::buffer(not_found);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/reply.cpp:    return boost::asio::buffer(internal_server_error);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/reply.cpp:    return boost::asio::buffer(not_implemented);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/reply.cpp:    return boost::asio::buffer(bad_gateway);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/reply.cpp:    return boost::asio::buffer(service_unavailable);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/reply.cpp:    return boost::asio::buffer(internal_server_error);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/reply.cpp:std::vector<boost::asio::const_buffer> reply::to_buffers()
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/reply.cpp:  std::vector<boost::asio::const_buffer> buffers;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/reply.cpp:    buffers.push_back(boost::asio::buffer(h.name));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/reply.cpp:    buffers.push_back(boost::asio::buffer(misc_strings::name_value_separator));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/reply.cpp:    buffers.push_back(boost::asio::buffer(h.value));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/reply.cpp:    buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/reply.cpp:  buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server/reply.cpp:  buffers.push_back(boost::asio::buffer(content));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/reply.hpp:  std::vector<boost::asio::const_buffer> to_buffers();
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/server.hpp:class server : boost::asio::coroutine
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/server.hpp:  explicit server(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/server.hpp:  typedef boost::asio::ip::tcp tcp;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/server.cpp:server::server(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/server.cpp:  boost::asio::ip::tcp::endpoint endpoint =
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/server.cpp:        yield socket_->async_read_some(boost::asio::buffer(*buffer_), *this);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/server.cpp:      yield boost::asio::async_write(*socket_, reply_->to_buffers(), *this);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/main.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/main.cpp:    boost::asio::signal_set signals(io_context);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/main.cpp:          &boost::asio::io_context::stop, &io_context));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/reply.cpp:boost::asio::const_buffer to_buffer(reply::status_type status)
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/reply.cpp:    return boost::asio::buffer(ok);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/reply.cpp:    return boost::asio::buffer(created);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/reply.cpp:    return boost::asio::buffer(accepted);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/reply.cpp:    return boost::asio::buffer(no_content);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/reply.cpp:    return boost::asio::buffer(multiple_choices);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/reply.cpp:    return boost::asio::buffer(moved_permanently);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/reply.cpp:    return boost::asio::buffer(moved_temporarily);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/reply.cpp:    return boost::asio::buffer(not_modified);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/reply.cpp:    return boost::asio::buffer(bad_request);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/reply.cpp:    return boost::asio::buffer(unauthorized);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/reply.cpp:    return boost::asio::buffer(forbidden);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/reply.cpp:    return boost::asio::buffer(not_found);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/reply.cpp:    return boost::asio::buffer(internal_server_error);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/reply.cpp:    return boost::asio::buffer(not_implemented);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/reply.cpp:    return boost::asio::buffer(bad_gateway);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/reply.cpp:    return boost::asio::buffer(service_unavailable);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/reply.cpp:    return boost::asio::buffer(internal_server_error);
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/reply.cpp:std::vector<boost::asio::const_buffer> reply::to_buffers()
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/reply.cpp:  std::vector<boost::asio::const_buffer> buffers;
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/reply.cpp:    buffers.push_back(boost::asio::buffer(h.name));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/reply.cpp:    buffers.push_back(boost::asio::buffer(misc_strings::name_value_separator));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/reply.cpp:    buffers.push_back(boost::asio::buffer(h.value));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/reply.cpp:    buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/reply.cpp:  buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/reply.cpp:  buffers.push_back(boost::asio::buffer(content));
/home/kaworu/boost_1_69_0/libs/asio/example/cpp03/http/server4/request_parser.hpp:class request_parser : boost::asio::coroutine
/home/kaworu/boost_1_69_0/libs/asio/doc/examples.qbk:Example of using the boost::asio::spawn() function, a wrapper around the
/home/kaworu/boost_1_69_0/libs/asio/doc/examples.qbk:Example of using the boost::asio::spawn() function, a wrapper around the
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  boost::asio::io_context io;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:Next we declare an object of type boost::asio::steady\_timer. The core asio classes that provide I/O functionality (or as in this case timer functionality) always take a reference to an io\_context as their first constructor argument. The second argument to the constructor sets the timer to expire 5 seconds from now.
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  boost::asio::steady_timer t(io, boost::asio::chrono::seconds(5));
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  boost::asio::io_context io;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  boost::asio::steady_timer t(io, boost::asio::chrono::seconds(5));
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  boost::asio::io_context io;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  boost::asio::steady_timer t(io, boost::asio::chrono::seconds(5));
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  boost::asio::io_context io;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  boost::asio::steady_timer t(io, boost::asio::chrono::seconds(5));
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``    boost::asio::steady_timer* t, int* count)
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``    t->expires_at(t->expiry() + boost::asio::chrono::seconds(1));
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:In this example, the boost::asio::placeholders::error argument to boost::bind() is a named placeholder for the error object passed to the handler. When initiating the asynchronous operation, and if using boost::bind(), you must specify only the arguments that match the handler's parameter list. In tutorial Timer.4 you will see that this placeholder may be elided if the parameter is not needed by the callback handler.
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``          boost::asio::placeholders::error, t, count));
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  boost::asio::io_context io;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  boost::asio::steady_timer t(io, boost::asio::chrono::seconds(1));
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``        boost::asio::placeholders::error, &t, &count));
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``    boost::asio::steady_timer* t, int* count)
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``    t->expires_at(t->expiry() + boost::asio::chrono::seconds(1));
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``          boost::asio::placeholders::error, t, count));
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  boost::asio::io_context io;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  boost::asio::steady_timer t(io, boost::asio::chrono::seconds(1));
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``        boost::asio::placeholders::error, &t, &count));
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  printer(boost::asio::io_context& io)
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``    : timer_(io, boost::asio::chrono::seconds(1)),
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:You will note that the boost::asio::placeholders::error placeholder is not specified here, as the `print` member function does not accept an error object as a parameter.
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``      timer_.expires_at(timer_.expiry() + boost::asio::chrono::seconds(1));
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  boost::asio::steady_timer timer_;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  boost::asio::io_context io;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  printer(boost::asio::io_context& io)
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``    : timer_(io, boost::asio::chrono::seconds(1)),
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``      timer_.expires_at(timer_.expiry() + boost::asio::chrono::seconds(1));
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  boost::asio::steady_timer timer_;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  boost::asio::io_context io;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:In addition to initialising a pair of boost::asio::steady\_timer members, the constructor initialises the `strand_` member, an object of type 
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  printer(boost::asio::io_context& io)
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``      timer1_(io, boost::asio::chrono::seconds(1)),
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``      timer2_(io, boost::asio::chrono::seconds(1)),
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:[link boost_asio.reference.io_context__strand io_context::strand] object. The boost::asio::io\_context::strand::bind\_executor() function returns a new handler that automatically dispatches its contained handler through the 
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``    timer1_.async_wait(boost::asio::bind_executor(strand_,
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``    timer2_.async_wait(boost::asio::bind_executor(strand_,
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``      timer1_.expires_at(timer1_.expiry() + boost::asio::chrono::seconds(1));
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``      timer1_.async_wait(boost::asio::bind_executor(strand_,
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``      timer2_.expires_at(timer2_.expiry() + boost::asio::chrono::seconds(1));
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``      timer2_.async_wait(boost::asio::bind_executor(strand_,
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  boost::asio::io_context::strand strand_;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  boost::asio::steady_timer timer1_;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  boost::asio::steady_timer timer2_;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  boost::asio::io_context io;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  boost::thread t(boost::bind(&boost::asio::io_context::run, &io));
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  printer(boost::asio::io_context& io)
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``      timer1_(io, boost::asio::chrono::seconds(1)),
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``      timer2_(io, boost::asio::chrono::seconds(1)),
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``    timer1_.async_wait(boost::asio::bind_executor(strand_,
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``    timer2_.async_wait(boost::asio::bind_executor(strand_,
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``      timer1_.expires_at(timer1_.expiry() + boost::asio::chrono::seconds(1));
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``      timer1_.async_wait(boost::asio::bind_executor(strand_,
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``      timer2_.expires_at(timer2_.expiry() + boost::asio::chrono::seconds(1));
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``      timer2_.async_wait(boost::asio::bind_executor(strand_,
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  boost::asio::io_context::strand strand_;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  boost::asio::steady_timer timer1_;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  boost::asio::steady_timer timer2_;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  boost::asio::io_context io;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  boost::thread t(boost::bind(&boost::asio::io_context::run, &io));
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:Now we create and connect the socket. The list of endpoints obtained above may contain both IPv4 and IPv6 endpoints, so we need to try each of them until we find one that works. This keeps the client program independent of a specific IP version. The boost::asio::connect() function does this for us automatically.
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:We use a `boost::array` to hold the received data. The boost::asio::buffer() function automatically determines the size of the array to help prevent buffer overruns. Instead of a `boost::array`, we could have used a `char []` or `std::vector`.
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:When the server closes the connection, the [link boost_asio.reference.basic_stream_socket.read_some ip::tcp::socket::read_some()] function will exit with the boost::asio::error::eof error, which is how we know to exit the loop.
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``    boost::asio::connect(socket, endpoints);
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``      size_t len = socket.read_some(boost::asio::buffer(buf), error);
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``      if (error == boost::asio::error::eof)
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``      boost::asio::write(socket, boost::asio::buffer(message), ignored_error);
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``      boost::asio::write(socket, boost::asio::buffer(message), ignored_error);
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  tcp_server(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  static pointer create(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:In the function `start()`, we call boost::asio::async\_write() to serve the data to the client. Note that we are using boost::asio::async\_write(), rather than [link boost_asio.reference.basic_stream_socket.async_write_some ip::tcp::socket::async_write_some()], to ensure that the entire block of data is sent.
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:When initiating the asynchronous operation, and if using boost::bind(), you must specify only the arguments that match the handler's parameter list. In this program, both of the argument placeholders (boost::asio::placeholders::error and boost::asio::placeholders::bytes\_transferred) could potentially have been removed, since they are not being used in `handle_write()`.
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``    boost::asio::async_write(socket_, boost::asio::buffer(message_),
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``          boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``          boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  tcp_connection(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:The boost::asio::async\_write() call used to initiate the call can then be changed to just:
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  boost::asio::async_write(socket_, boost::asio::buffer(message_),
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  static pointer create(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``    boost::asio::async_write(socket_, boost::asio::buffer(message_),
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``          boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``          boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  tcp_connection(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  tcp_server(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``    socket.send_to(boost::asio::buffer(send_buf), receiver_endpoint);
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``    socket.send_to(boost::asio::buffer(send_buf), receiver_endpoint);
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``        boost::asio::buffer(recv_buf), sender_endpoint);
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``      socket.receive_from(boost::asio::buffer(recv_buf), remote_endpoint);
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``      socket.send_to(boost::asio::buffer(message),
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  udp_server(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``        boost::asio::buffer(recv_buffer_), remote_endpoint_,
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``          boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``          boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``      socket_.async_send_to(boost::asio::buffer(*message), remote_endpoint_,
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:When initiating the asynchronous operation, and if using boost::bind(), you must specify only the arguments that match the handler's parameter list. In this program, both of the argument placeholders (boost::asio::placeholders::error and boost::asio::placeholders::bytes\_transferred) could potentially have been removed.
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  udp_server(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``        boost::asio::buffer(recv_buffer_), remote_endpoint_,
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``          boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``          boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``      socket_.async_send_to(boost::asio::buffer(*message), remote_endpoint_,
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  static pointer create(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``    boost::asio::async_write(socket_, boost::asio::buffer(message_),
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  tcp_connection(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  tcp_server(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  udp_server(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``        boost::asio::buffer(recv_buffer_), remote_endpoint_,
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``      socket_.async_send_to(boost::asio::buffer(*message), remote_endpoint_,
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  static pointer create(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``    boost::asio::async_write(socket_, boost::asio::buffer(message_),
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  tcp_connection(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  tcp_server(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``  udp_server(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``        boost::asio::buffer(recv_buffer_), remote_endpoint_,
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``      socket_.async_send_to(boost::asio::buffer(*message), remote_endpoint_,
/home/kaworu/boost_1_69_0/libs/asio/doc/tutorial.qbk:  ``''''''``    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/strands.qbk:  `boost::asio::bind_executor()` or otherwise posted/dispatched through the strand
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/strands.qbk:  boost::asio::associated_executor_t<Handler> a = boost::asio::get_associated_executor(h);
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/strands.qbk:  } } // namespace boost::asio
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/strands.qbk:The `boost::asio::bind_executor()` function is a helper to bind a specific executor
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/strands.qbk:      boost::asio::bind_executor(my_strand,
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/line_based.qbk:      boost::asio::async_read_until(socket_, data_, "\r\n",
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/line_based.qbk:    boost::asio::ip::tcp::socket socket_;
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/line_based.qbk:    boost::asio::streambuf data_;
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/line_based.qbk:  typedef boost::asio::buffers_iterator<
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/line_based.qbk:      boost::asio::streambuf::const_buffers_type> iterator;
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/line_based.qbk:  boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/line_based.qbk:  boost::asio::read_until(s, b, match_whitespace);
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/line_based.qbk:  } } // namespace boost::asio
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/line_based.qbk:  boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/line_based.qbk:  boost::asio::read_until(s, b, match_char('a'));
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/allocation.qbk:  boost::asio::associated_allocator_t<Handler> a = boost::asio::get_associated_allocator(h);
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/allocation.qbk:  } } // namespace boost::asio
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/coroutine.qbk:  struct session : boost::asio::coroutine
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/coroutine.qbk:          yield socket_->async_read_some(boost::asio::buffer(*buffer_), *this);
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/coroutine.qbk:          yield boost::asio::async_write(*socket_, boost::asio::buffer(*buffer_, n), *this);
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/basics.qbk:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/basics.qbk:  boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/buffers.qbk:The class `boost::asio::basic_streambuf` is derived from `std::basic_streambuf` to
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/buffers.qbk:  boost::asio::streambuf sb;
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/buffers.qbk:  std::size_t n = boost::asio::read_until(sock, sb, '\n');
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/buffers.qbk:  boost::asio::streambuf::const_buffers_type bufs = sb.data();
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/buffers.qbk:      boost::asio::buffers_begin(bufs),
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/buffers.qbk:      boost::asio::buffers_begin(bufs) + n);
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/buffers.qbk:   boost::asio::async_write(sock, boost::asio::buffer(msg), my_handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/protocols.qbk:  boost::asio::connect(socket, resolver.resolve(query));
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/protocols.qbk:  boost::asio::async_connect(socket_, iter,
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/protocols.qbk:        boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/cpp2011.qbk:      socket->async_read_some(boost::asio::buffer(*buffer), std::move(*this));
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/cpp2011.qbk:The `boost::asio::use_future` special value provides first-class support for returning a
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/cpp2011.qbk:To use `boost::asio::use_future`, pass it to an asynchronous operation instead of
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/cpp2011.qbk:    my_socket.async_read_some(my_buffer, boost::asio::use_future);
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/coroutines_ts.qbk:  boost::asio::experimental::co_spawn(executor,
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/coroutines_ts.qbk:      boost::asio::experimental::detached);
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/coroutines_ts.qbk:  boost::asio::experimental::awaitable<void> echo(tcp::socket socket)
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/coroutines_ts.qbk:    auto token = co_await boost::asio::experimental::this_coro::token();
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/coroutines_ts.qbk:        std::size_t n = co_await socket.async_read_some(boost::asio::buffer(data), token);
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/coroutines_ts.qbk:        co_await async_write(socket, boost::asio::buffer(data, n), token);
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/coroutines_ts.qbk:boost_asio.reference.experimental__awaitable `boost::asio::awaitable<R>`],
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/coroutines_ts.qbk:`boost::asio::experimental::detached`], which is used to explicitly ignore the
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/coroutines_ts.qbk:  auto token = co_await boost::asio::experimental::this_coro::token();
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/coroutines_ts.qbk:  std::size_t n = co_await socket.async_read_some(boost::asio::buffer(data), token);
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/posix.qbk:`boost::asio::null_buffers`, are not portably supported.
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/posix.qbk:  io_context_.notify_fork(boost::asio::io_context::fork_prepare);
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/posix.qbk:    io_context_.notify_fork(boost::asio::io_context::fork_child);
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/posix.qbk:    io_context_.notify_fork(boost::asio::io_context::fork_parent);
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/ssl.qbk:  using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/ssl.qbk:  namespace ssl = boost::asio::ssl;
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/ssl.qbk:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/ssl.qbk:  boost::asio::connect(sock.lowest_layer(), resolver.resolve(query));
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/signals.qbk:  boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/spawn.qbk:  boost::asio::spawn(my_strand, do_echo);
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/spawn.qbk:  void do_echo(boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/spawn.qbk:            boost::asio::buffer(data), yield);
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/spawn.qbk:        boost::asio::async_write(my_socket,
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/spawn.qbk:            boost::asio::buffer(data, length), yield);
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/spawn.qbk:  void coroutine(boost::asio::yield_context yield);
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/spawn.qbk:      boost::asio::buffer(data), yield);
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/spawn.qbk:      boost::asio::buffer(data), yield[ec]);
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/spawn.qbk:  void coroutine(boost::asio::basic_yield_context<Handler> yield);
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/other_protocols.qbk:  boost::asio::generic::stream_protocol::socket my_socket(my_io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/other_protocols.qbk:  my_socket.open(boost::asio::generic::stream_protocol(AF_INET, IPPROTO_TCP));
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/other_protocols.qbk:`boost::asio::generic::basic_endpoint`], is included to support these protocol
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/other_protocols.qbk:  boost::asio::ip::tcp::endpoint my_endpoint1 = ...;
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/other_protocols.qbk:  boost::asio::generic::stream_protocol::endpoint my_endpoint2(my_endpoint1);
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/other_protocols.qbk:  boost::asio::generic::stream_protocol::socket my_socket(my_io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/other_protocols.qbk:  boost::asio::ip::tcp::endpoint my_endpoint = ...;
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/other_protocols.qbk:  boost::asio::ip::tcp::socket my_socket1(my_io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/other_protocols.qbk:  boost::asio::generic::stream_protocol::socket my_socket2(std::move(my_socket1));
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/other_protocols.qbk:supported because the protocol `boost::asio::ip::tcp` is convertible to
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/other_protocols.qbk:`boost::asio::generic::stream_protocol`:
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/other_protocols.qbk:  boost::asio::ip::tcp::acceptor my_acceptor(my_io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/overview/other_protocols.qbk:  boost::asio::generic::stream_protocol::socket my_socket(my_io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/ResolveHandler.qbk:      boost::asio::ip::tcp::resolver::results_type results)
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/ResolveHandler.qbk:        boost::asio::ip::tcp::resolver::results_type results)
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/ResolveHandler.qbk:        boost::asio::ip::tcp::resolver::results_type results)
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/ResolveHandler.qbk:      boost::asio::ip::tcp::resolver::results_type results)
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/ResolveHandler.qbk:      boost::asio::ip::tcp::resolver::results_type results)
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/ResolveHandler.qbk:        this, boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/ResolveHandler.qbk:        boost::asio::placeholders::results));
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/ShutdownHandler.qbk:        this, boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/ConnectHandler.qbk:        this, boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/MoveAcceptHandler.qbk:      const boost::system::error_code& ec, boost::asio::ip::tcp::socket s)
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/MoveAcceptHandler.qbk:        const boost::system::error_code& ec, boost::asio::ip::tcp::socket s)
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/MoveAcceptHandler.qbk:      [](const boost::system::error_code& ec, boost::asio::ip::tcp::socket s)
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/MoveAcceptHandler.qbk:      const boost::system::error_code& ec, boost::asio::ip::tcp::socket socket)
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/MoveAcceptHandler.qbk:  boost::asio::async_accept(...,
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/ConstBufferSequence.qbk:    [`boost::asio::buffer_sequence_begin(x)`\n
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/ConstBufferSequence.qbk:     `boost::asio::buffer_sequence_end(x)`]
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/ConstBufferSequence.qbk:         boost::asio::buffer_sequence_begin(x),
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/ConstBufferSequence.qbk:         boost::asio::buffer_sequence_end(x),
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/ConstBufferSequence.qbk:         boost::asio::buffer_sequence_begin(u),
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/ConstBufferSequence.qbk:         boost::asio::buffer_sequence_end(u),
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/MutableBufferSequence.qbk:    [`boost::asio::buffer_sequence_begin(x)`\n
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/MutableBufferSequence.qbk:     `boost::asio::buffer_sequence_end(x)`]
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/MutableBufferSequence.qbk:         boost::asio::buffer_sequence_begin(x),
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/MutableBufferSequence.qbk:         boost::asio::buffer_sequence_end(x),
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/MutableBufferSequence.qbk:         boost::asio::buffer_sequence_begin(u),
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/MutableBufferSequence.qbk:         boost::asio::buffer_sequence_end(u),
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/HandshakeHandler.qbk:        this, boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/WaitHandler.qbk:        this, boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/BufferedHandshakeHandler.qbk:        this, boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/BufferedHandshakeHandler.qbk:        boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/WriteHandler.qbk:        this, boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/WriteHandler.qbk:        boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/RangeConnectHandler.qbk:      const boost::asio::ip::tcp::endpoint& endpoint)
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/RangeConnectHandler.qbk:        const boost::asio::ip::tcp::endpoint& endpoint)
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/RangeConnectHandler.qbk:  boost::asio::async_connect(...,
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/RangeConnectHandler.qbk:        const boost::asio::ip::tcp::endpoint& endpoint)
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/RangeConnectHandler.qbk:      const boost::asio::ip::tcp::endpoint& endpoint)
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/RangeConnectHandler.qbk:  boost::asio::async_connect(...,
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/RangeConnectHandler.qbk:      const boost::asio::ip::tcp::endpoint& endpoint)
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/RangeConnectHandler.qbk:  boost::asio::async_connect(...,
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/RangeConnectHandler.qbk:        this, boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/RangeConnectHandler.qbk:        boost::asio::placeholders::endpoint));
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/AcceptHandler.qbk:        this, boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/SignalHandler.qbk:        this, boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/SignalHandler.qbk:        boost::asio::placeholders::signal_number));
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/ReadHandler.qbk:        this, boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/ReadHandler.qbk:        boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/Handler.qbk:      using boost::asio::asio_handler_allocate;
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/Handler.qbk:      lookup. The function `boost::asio::asio_handler_allocate()` serves as a
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/Handler.qbk:      using boost::asio::asio_handler_deallocate;
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/Handler.qbk:      lookup. The function `boost::asio::asio_handler_deallocate()` serves as a
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/Handler.qbk:      using boost::asio::asio_handler_invoke;
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/Handler.qbk:      lookup. The function `boost::asio::asio_handler_invoke()` serves as a
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/IteratorConnectHandler.qbk:      boost::asio::ip::tcp::resolver::iterator iterator)
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/IteratorConnectHandler.qbk:  boost::asio::async_connect(...,
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/IteratorConnectHandler.qbk:        boost::asio::ip::tcp::resolver::iterator iterator)
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/IteratorConnectHandler.qbk:      boost::asio::ip::tcp::resolver::iterator iterator)
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/IteratorConnectHandler.qbk:  boost::asio::async_connect(...,
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/IteratorConnectHandler.qbk:      boost::asio::ip::tcp::resolver::iterator iterator)
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/IteratorConnectHandler.qbk:  boost::asio::async_connect(...,
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/IteratorConnectHandler.qbk:        this, boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/libs/asio/doc/requirements/IteratorConnectHandler.qbk:        boost::asio::placeholders::iterator));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::asio::service_already_exists][Thrown if a service of the given type is already present in the [link boost_asio.reference.execution_context `execution_context`].]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::asio::invalid_service_owner][Thrown if the service's owning [link boost_asio.reference.execution_context `execution_context`] is not the [link boost_asio.reference.execution_context `execution_context`] object specified by the `e` parameter. ]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  typedef boost::asio::async_result< typename decay< CompletionToken >::type, Signature >::completion_handler_type completion_handler_type;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:     // boost::asio::error::not_found. Otherwise, contains the
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::async_connect(s, results, connect_handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:     // boost::asio::error::not_found. Otherwise, contains the
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This overload assumes that a default constructed object of type `Iterator` represents the end of the sequence. This is a valid assumption for iterator types such as `boost::asio::ip::tcp::resolver::iterator`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:     // boost::asio::error::not_found. Otherwise, contains the
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::async_connect(s,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:     // boost::asio::error::not_found. Otherwise, contains the
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:It would be used with the `boost::asio::connect` function as follows: 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::async_connect(s, results,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:     // boost::asio::error::not_found. Otherwise, contains the
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This overload assumes that a default constructed object of type `Iterator` represents the end of the sequence. This is a valid assumption for iterator types such as `boost::asio::ip::tcp::resolver::iterator`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:     // boost::asio::error::not_found. Otherwise, contains the
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:It would be used with the `boost::asio::connect` function as follows: 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::async_connect(s, i, end,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::async_read(s, boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::async_read(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::async_read(s,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::buffer(data, size),
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_at_least(32),
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::async_read(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`. ]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::async_read(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`. ]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::async_read_at(d, 42, boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::async_read_at(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::async_read_at(d, 42,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::buffer(data, size),
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_at_least(32),
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::async_read_at(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`. ]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::basic_streambuf< Allocator > & b,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::basic_streambuf< Allocator > & b,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::basic_streambuf< Allocator > & b,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::basic_streambuf< Allocator > & b,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::async_read_until(s, data, '\n', handler); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::async_read_until(s, data, "\r\n", handler); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::async_read_until(s, data,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   typedef boost::asio::buffers_iterator<
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::const_buffers_1> iterator;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::async_read_until(s, data, match_whitespace, handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::async_read_until(s, data, match_char('a'), handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::basic_streambuf< Allocator > & b,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::async_read_until(s, b, '\n', handler); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::basic_streambuf< Allocator > & b,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::async_read_until(s, b, "\r\n", handler); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::basic_streambuf< Allocator > & b,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::async_read_until(s, b, boost::regex("\r\n"), handler); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::basic_streambuf< Allocator > & b,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   typedef boost::asio::buffers_iterator<
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::streambuf::const_buffers_type> iterator;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::async_read_until(s, b, match_whitespace, handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::async_read_until(s, b, match_char('a'), handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::async_write(s, boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::async_write(s,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::buffer(data, size),
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_at_least(32),
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`. ]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`. ]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`. ]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`. ]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::async_write_at(d, 42, boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::async_write_at(d, 42,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::buffer(data, size),
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_at_least(32),
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`. ]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`. ]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.async_receive(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::buffer(data, size), sender_endpoint, handler); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`. ]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.async_send(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::endpoint destination(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::buffer(data, size), destination, handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`. ]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.async_wait(boost::asio::ip::tcp::socket::wait_read, wait_handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.bind(boost::asio::ip::tcp::endpoint(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:         boost::asio::ip::tcp::v4(), 12345));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.bind(boost::asio::ip::tcp::endpoint(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:         boost::asio::ip::tcp::v4(), 12345), ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::broadcast option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::broadcast option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::bytes_readable command(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Calls to `cancel()` will always fail with `boost::asio::error::operation_not_supported` when run on Windows XP, Windows Server 2003, and earlier versions of Windows, unless BOOST\_ASIO\_ENABLE\_CANCELIO is defined. However, the CancelIo function has two issues that should be considered before enabling its use:
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Calls to `cancel()` will always fail with `boost::asio::error::operation_not_supported` when run on Windows XP, Windows Server 2003, and earlier versions of Windows, unless BOOST\_ASIO\_ENABLE\_CANCELIO is defined. However, the CancelIo function has two issues that should be considered before enabling its use:
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is used to close the socket. Any asynchronous send, receive or connect operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is used to close the socket. Any asynchronous send, receive or connect operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::debug option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::debug option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::do_not_route option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::do_not_route option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Implements a custom socket option that determines whether or not an accept operation is permitted to fail with `boost::asio::error::connection_aborted`. By default the option is false.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::enable_connection_aborted option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::enable_connection_aborted option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_context();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_service();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket::keep_alive option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket::keep_alive option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket::bytes_readable command;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket::bytes_readable command;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::keep_alive option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::keep_alive option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::linger option(true, 30);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::linger option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint = socket.local_endpoint();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint = socket.local_endpoint(ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:`true` if the underlying socket is in non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:               boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:           if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:           if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:               || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[mode][If `true`, the underlying socket is put into non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::system::system_error][Thrown on failure. If the `mode` is `false`, but the current value of `non_blocking()` is `true`, this function fails with `boost::asio::error::invalid_argument`, as the combination does not make sense.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:               boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:           if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:           if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:               || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[mode][If `true`, the underlying socket is put into non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[ec][Set to indicate what error occurred, if any. If the `mode` is `false`, but the current value of `non_blocking()` is `true`, this function fails with `boost::asio::error::invalid_argument`, as the combination does not make sense.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:               boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:           if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:           if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:               || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:`true` if the socket's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[mode][If `true`, the socket's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[mode][If `true`, the socket's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.open(boost::asio::ip::tcp::v4(), ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::out_of_band_inline option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::out_of_band_inline option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.receive(boost::asio::buffer(data, size)); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::receive_buffer_size option(8192);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::receive_buffer_size option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::endpoint sender_endpoint;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::buffer(data, size), sender_endpoint);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::receive_low_watermark option(1024);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::receive_low_watermark option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native socket is then transferred to the caller.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native socket is then transferred to the caller.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint = socket.remote_endpoint();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint = socket.remote_endpoint(ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::reuse_address option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::reuse_address option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.send(boost::asio::buffer(data, size)); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::send_buffer_size option(8192);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::send_buffer_size option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::send_low_watermark option(1024);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::send_low_watermark option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::endpoint destination(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.send_to(boost::asio::buffer(data, size), destination);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::no_delay option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::no_delay option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.shutdown(boost::asio::ip::tcp::socket::shutdown_send);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.shutdown(boost::asio::ip::tcp::socket::shutdown_send, ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.wait(boost::asio::ip::tcp::socket::wait_read);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.wait(boost::asio::ip::tcp::socket::wait_read, ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      typename ``[link boost_asio.reference.TimeTraits TimeTraits]`` = boost::asio::time_traits<Time>>
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::deadline_timer timer(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::deadline_timer timer(io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:     if (e != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:* The `boost::asio::basic_deadline_timer::expires_from_now()` function cancels any pending asynchronous waits, and returns the number of asynchronous waits that were cancelled. If it returns 0 then you were too late and the wait handler has already been executed, or will soon be executed. If it returns 1 then the wait handler was successfully cancelled.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:* If a wait handler is cancelled, the boost::system::error\_code passed to it contains the value `boost::asio::error::operation_aborted`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:* The timer was cancelled, in which case the handler is passed the error code `boost::asio::error::operation_aborted`.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`. ]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function forces the completion of any pending asynchronous wait operations against the timer. The handler for each cancelled operation will be invoked with the `boost::asio::error::operation_aborted` error code.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function forces the completion of any pending asynchronous wait operations against the timer. The handler for each cancelled operation will be invoked with the `boost::asio::error::operation_aborted` error code.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function forces the completion of one pending asynchronous wait operation against the timer. Handlers are cancelled in FIFO order. The handler for the cancelled operation will be invoked with the `boost::asio::error::operation_aborted` error code.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function forces the completion of one pending asynchronous wait operation against the timer. Handlers are cancelled in FIFO order. The handler for the cancelled operation will be invoked with the `boost::asio::error::operation_aborted` error code.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function sets the expiry time. Any pending asynchronous wait operations will be cancelled. The handler for each cancelled operation will be invoked with the `boost::asio::error::operation_aborted` error code.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function sets the expiry time. Any pending asynchronous wait operations will be cancelled. The handler for each cancelled operation will be invoked with the `boost::asio::error::operation_aborted` error code.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function sets the expiry time. Any pending asynchronous wait operations will be cancelled. The handler for each cancelled operation will be invoked with the `boost::asio::error::operation_aborted` error code.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function sets the expiry time. Any pending asynchronous wait operations will be cancelled. The handler for each cancelled operation will be invoked with the `boost::asio::error::operation_aborted` error code.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_context();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_service();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  typedef boost::asio::io_context::executor_type executor_type;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_context();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_service();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.async_receive(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::buffer(data, size), 0, sender_endpoint, handler); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`. ]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.async_send(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::endpoint destination(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::buffer(data, size), destination, handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`. ]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.async_wait(boost::asio::ip::tcp::socket::wait_read, wait_handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.bind(boost::asio::ip::tcp::endpoint(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:         boost::asio::ip::tcp::v4(), 12345));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.bind(boost::asio::ip::tcp::endpoint(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:         boost::asio::ip::tcp::v4(), 12345), ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::broadcast option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::broadcast option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::bytes_readable command(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Calls to `cancel()` will always fail with `boost::asio::error::operation_not_supported` when run on Windows XP, Windows Server 2003, and earlier versions of Windows, unless BOOST\_ASIO\_ENABLE\_CANCELIO is defined. However, the CancelIo function has two issues that should be considered before enabling its use:
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Calls to `cancel()` will always fail with `boost::asio::error::operation_not_supported` when run on Windows XP, Windows Server 2003, and earlier versions of Windows, unless BOOST\_ASIO\_ENABLE\_CANCELIO is defined. However, the CancelIo function has two issues that should be considered before enabling its use:
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is used to close the socket. Any asynchronous send, receive or connect operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is used to close the socket. Any asynchronous send, receive or connect operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::debug option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::debug option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::do_not_route option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::do_not_route option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Implements a custom socket option that determines whether or not an accept operation is permitted to fail with `boost::asio::error::connection_aborted`. By default the option is false.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::enable_connection_aborted option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::enable_connection_aborted option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_context();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_service();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket::keep_alive option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket::keep_alive option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket::bytes_readable command;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket::bytes_readable command;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::keep_alive option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::keep_alive option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::linger option(true, 30);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::linger option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint = socket.local_endpoint();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint = socket.local_endpoint(ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:`true` if the underlying socket is in non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:               boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:           if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:           if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:               || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[mode][If `true`, the underlying socket is put into non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::system::system_error][Thrown on failure. If the `mode` is `false`, but the current value of `non_blocking()` is `true`, this function fails with `boost::asio::error::invalid_argument`, as the combination does not make sense.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:               boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:           if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:           if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:               || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[mode][If `true`, the underlying socket is put into non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[ec][Set to indicate what error occurred, if any. If the `mode` is `false`, but the current value of `non_blocking()` is `true`, this function fails with `boost::asio::error::invalid_argument`, as the combination does not make sense.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:               boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:           if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:           if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:               || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:`true` if the socket's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[mode][If `true`, the socket's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[mode][If `true`, the socket's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.open(boost::asio::ip::tcp::v4(), ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::out_of_band_inline option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::out_of_band_inline option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.receive(boost::asio::buffer(data, size)); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::receive_buffer_size option(8192);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::receive_buffer_size option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::endpoint sender_endpoint;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::buffer(data, size), sender_endpoint);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::receive_low_watermark option(1024);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::receive_low_watermark option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native socket is then transferred to the caller.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native socket is then transferred to the caller.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint = socket.remote_endpoint();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint = socket.remote_endpoint(ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::reuse_address option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::reuse_address option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.send(boost::asio::buffer(data, size)); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::send_buffer_size option(8192);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::send_buffer_size option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::send_low_watermark option(1024);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::send_low_watermark option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::endpoint destination(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.send_to(boost::asio::buffer(data, size), destination);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::no_delay option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::no_delay option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.shutdown(boost::asio::ip::tcp::socket::shutdown_send);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.shutdown(boost::asio::ip::tcp::socket::shutdown_send, ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.wait(boost::asio::ip::tcp::socket::wait_read);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.wait(boost::asio::ip::tcp::socket::wait_read, ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.async_receive(boost::asio::buffer(data, size), out_flags, handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::buffer(data, size),
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.async_send(boost::asio::buffer(data, size), 0, handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.async_wait(boost::asio::ip::tcp::socket::wait_read, wait_handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.bind(boost::asio::ip::tcp::endpoint(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:         boost::asio::ip::tcp::v4(), 12345));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.bind(boost::asio::ip::tcp::endpoint(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:         boost::asio::ip::tcp::v4(), 12345), ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::broadcast option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::broadcast option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::bytes_readable command(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Calls to `cancel()` will always fail with `boost::asio::error::operation_not_supported` when run on Windows XP, Windows Server 2003, and earlier versions of Windows, unless BOOST\_ASIO\_ENABLE\_CANCELIO is defined. However, the CancelIo function has two issues that should be considered before enabling its use:
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Calls to `cancel()` will always fail with `boost::asio::error::operation_not_supported` when run on Windows XP, Windows Server 2003, and earlier versions of Windows, unless BOOST\_ASIO\_ENABLE\_CANCELIO is defined. However, the CancelIo function has two issues that should be considered before enabling its use:
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is used to close the socket. Any asynchronous send, receive or connect operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is used to close the socket. Any asynchronous send, receive or connect operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::debug option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::debug option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::do_not_route option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::do_not_route option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Implements a custom socket option that determines whether or not an accept operation is permitted to fail with `boost::asio::error::connection_aborted`. By default the option is false.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::enable_connection_aborted option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::enable_connection_aborted option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_context();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_service();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket::keep_alive option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket::keep_alive option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket::bytes_readable command;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket::bytes_readable command;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::keep_alive option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::keep_alive option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::linger option(true, 30);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::linger option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint = socket.local_endpoint();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint = socket.local_endpoint(ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:`true` if the underlying socket is in non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:               boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:           if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:           if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:               || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[mode][If `true`, the underlying socket is put into non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::system::system_error][Thrown on failure. If the `mode` is `false`, but the current value of `non_blocking()` is `true`, this function fails with `boost::asio::error::invalid_argument`, as the combination does not make sense.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:               boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:           if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:           if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:               || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[mode][If `true`, the underlying socket is put into non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[ec][Set to indicate what error occurred, if any. If the `mode` is `false`, but the current value of `non_blocking()` is `true`, this function fails with `boost::asio::error::invalid_argument`, as the combination does not make sense.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:               boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:           if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:           if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:               || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:`true` if the socket's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[mode][If `true`, the socket's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[mode][If `true`, the socket's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.open(boost::asio::ip::tcp::v4(), ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::out_of_band_inline option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::out_of_band_inline option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::system::system_error][Thrown on failure. An error code of `boost::asio::error::eof` indicates that the connection was closed by the peer.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.receive(boost::asio::buffer(data, size), out_flags);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::system::system_error][Thrown on failure. An error code of `boost::asio::error::eof` indicates that the connection was closed by the peer.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.receive(boost::asio::buffer(data, size), 0, out_flags);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::receive_buffer_size option(8192);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::receive_buffer_size option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::receive_low_watermark option(1024);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::receive_low_watermark option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native socket is then transferred to the caller.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native socket is then transferred to the caller.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint = socket.remote_endpoint();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint = socket.remote_endpoint(ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::reuse_address option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::reuse_address option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.send(boost::asio::buffer(data, size), 0);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::send_buffer_size option(8192);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::send_buffer_size option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::send_low_watermark option(1024);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::send_low_watermark option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::no_delay option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::no_delay option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.shutdown(boost::asio::ip::tcp::socket::shutdown_send);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.shutdown(boost::asio::ip::tcp::socket::shutdown_send, ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.wait(boost::asio::ip::tcp::socket::wait_read);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.wait(boost::asio::ip::tcp::socket::wait_read, ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.async_wait(boost::asio::ip::tcp::socket::wait_read, wait_handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.bind(boost::asio::ip::tcp::endpoint(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:         boost::asio::ip::tcp::v4(), 12345));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.bind(boost::asio::ip::tcp::endpoint(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:         boost::asio::ip::tcp::v4(), 12345), ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::broadcast option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::broadcast option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::bytes_readable command(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Calls to `cancel()` will always fail with `boost::asio::error::operation_not_supported` when run on Windows XP, Windows Server 2003, and earlier versions of Windows, unless BOOST\_ASIO\_ENABLE\_CANCELIO is defined. However, the CancelIo function has two issues that should be considered before enabling its use:
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Calls to `cancel()` will always fail with `boost::asio::error::operation_not_supported` when run on Windows XP, Windows Server 2003, and earlier versions of Windows, unless BOOST\_ASIO\_ENABLE\_CANCELIO is defined. However, the CancelIo function has two issues that should be considered before enabling its use:
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is used to close the socket. Any asynchronous send, receive or connect operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is used to close the socket. Any asynchronous send, receive or connect operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::debug option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::debug option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::do_not_route option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::do_not_route option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Implements a custom socket option that determines whether or not an accept operation is permitted to fail with `boost::asio::error::connection_aborted`. By default the option is false.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::enable_connection_aborted option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::enable_connection_aborted option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_context();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_service();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket::keep_alive option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket::keep_alive option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket::bytes_readable command;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket::bytes_readable command;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::keep_alive option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::keep_alive option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::linger option(true, 30);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::linger option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint = socket.local_endpoint();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint = socket.local_endpoint(ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:`true` if the underlying socket is in non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:               boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:           if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:           if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:               || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[mode][If `true`, the underlying socket is put into non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::system::system_error][Thrown on failure. If the `mode` is `false`, but the current value of `non_blocking()` is `true`, this function fails with `boost::asio::error::invalid_argument`, as the combination does not make sense.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:               boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:           if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:           if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:               || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[mode][If `true`, the underlying socket is put into non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[ec][Set to indicate what error occurred, if any. If the `mode` is `false`, but the current value of `non_blocking()` is `true`, this function fails with `boost::asio::error::invalid_argument`, as the combination does not make sense.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:               boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:           if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:           if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:               || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:`true` if the socket's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[mode][If `true`, the socket's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[mode][If `true`, the socket's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.open(boost::asio::ip::tcp::v4(), ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::out_of_band_inline option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::out_of_band_inline option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::receive_buffer_size option(8192);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::receive_buffer_size option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::receive_low_watermark option(1024);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::receive_low_watermark option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native socket is then transferred to the caller.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native socket is then transferred to the caller.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint = socket.remote_endpoint();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint = socket.remote_endpoint(ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::reuse_address option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::reuse_address option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::send_buffer_size option(8192);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::send_buffer_size option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::send_low_watermark option(1024);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::send_low_watermark option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::no_delay option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::no_delay option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.shutdown(boost::asio::ip::tcp::socket::shutdown_send);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.shutdown(boost::asio::ip::tcp::socket::shutdown_send, ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.wait(boost::asio::ip::tcp::socket::wait_read);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.wait(boost::asio::ip::tcp::socket::wait_read, ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint(boost::asio::ip::tcp::v4(), port);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   acceptor.set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(acceptor.accept());
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(acceptor.accept(ec));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(acceptor.accept());
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(acceptor.accept(io_context2, ec));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(acceptor.accept(endpoint));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(acceptor.accept(endpoint, ec));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`. ]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::ip::tcp::socket peer)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::ip::tcp::socket peer)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::ip::tcp::socket peer)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::ip::tcp::socket peer)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::ip::tcp::acceptor::wait_read,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint(boost::asio::ip::tcp::v4(), 12345);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint(boost::asio::ip::tcp::v4(), 12345);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::broadcast option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::broadcast option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::bytes_readable command(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::debug option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::debug option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::do_not_route option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::do_not_route option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Implements a custom socket option that determines whether or not an accept operation is permitted to fail with `boost::asio::error::connection_aborted`. By default the option is false.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::enable_connection_aborted option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::enable_connection_aborted option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_context();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_service();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor::reuse_address option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor::reuse_address option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor::non_blocking_io command(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor::non_blocking_io command(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::keep_alive option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::keep_alive option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::linger option(true, 30);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::linger option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   acceptor.listen(boost::asio::socket_base::max_listen_connections, ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint = acceptor.local_endpoint();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint = acceptor.local_endpoint(ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:`true` if the underlying acceptor is in non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[mode][If `true`, the underlying acceptor is put into non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::system::system_error][Thrown on failure. If the `mode` is `false`, but the current value of `non_blocking()` is `true`, this function fails with `boost::asio::error::invalid_argument`, as the combination does not make sense. ]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[mode][If `true`, the underlying acceptor is put into non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[ec][Set to indicate what error occurred, if any. If the `mode` is `false`, but the current value of `non_blocking()` is `true`, this function fails with `boost::asio::error::invalid_argument`, as the combination does not make sense. ]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:`true` if the acceptor's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[mode][If `true`, the acceptor's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[mode][If `true`, the acceptor's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   acceptor.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   acceptor.open(boost::asio::ip::tcp::v4(), ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::out_of_band_inline option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::out_of_band_inline option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::receive_buffer_size option(8192);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::receive_buffer_size option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::receive_low_watermark option(1024);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::receive_low_watermark option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous accept operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native acceptor is then transferred to the caller.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous accept operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native acceptor is then transferred to the caller.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::reuse_address option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::reuse_address option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::send_buffer_size option(8192);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::send_buffer_size option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::send_low_watermark option(1024);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::send_low_watermark option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor::reuse_address option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor::reuse_address option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   acceptor.wait(boost::asio::ip::tcp::acceptor::wait_read);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   acceptor.wait(boost::asio::ip::tcp::acceptor::wait_read, ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function sets the expiry time associated with the stream. Stream operations performed after this time (where the operations cannot be completed using the internal buffers) will fail with the error `boost::asio::error::operation_aborted`.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function sets the expiry time associated with the stream. Stream operations performed after this time (where the operations cannot be completed using the internal buffers) will fail with the error `boost::asio::error::operation_aborted`.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function sets the expiry time associated with the stream. Stream operations performed after this time (where the operations cannot be completed using the internal buffers) will fail with the error `boost::asio::error::operation_aborted`.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function sets the expiry time associated with the stream. Stream operations performed after this time (where the operations cannot be completed using the internal buffers) will fail with the error `boost::asio::error::operation_aborted`.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function sets the expiry time associated with the stream. Stream operations performed after this time (where the operations cannot be completed using the internal buffers) will fail with the error `boost::asio::error::operation_aborted`.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function sets the expiry time associated with the stream. Stream operations performed after this time (where the operations cannot be completed using the internal buffers) will fail with the error `boost::asio::error::operation_aborted`.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.async_read_some(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.async_receive(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.async_receive(boost::asio::buffer(data, size), 0, handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.async_send(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.async_send(boost::asio::buffer(data, size), 0, handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.async_wait(boost::asio::ip::tcp::socket::wait_read, wait_handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.async_write_some(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.bind(boost::asio::ip::tcp::endpoint(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:         boost::asio::ip::tcp::v4(), 12345));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.bind(boost::asio::ip::tcp::endpoint(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:         boost::asio::ip::tcp::v4(), 12345), ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::broadcast option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::broadcast option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::bytes_readable command(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Calls to `cancel()` will always fail with `boost::asio::error::operation_not_supported` when run on Windows XP, Windows Server 2003, and earlier versions of Windows, unless BOOST\_ASIO\_ENABLE\_CANCELIO is defined. However, the CancelIo function has two issues that should be considered before enabling its use:
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Calls to `cancel()` will always fail with `boost::asio::error::operation_not_supported` when run on Windows XP, Windows Server 2003, and earlier versions of Windows, unless BOOST\_ASIO\_ENABLE\_CANCELIO is defined. However, the CancelIo function has two issues that should be considered before enabling its use:
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is used to close the socket. Any asynchronous send, receive or connect operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is used to close the socket. Any asynchronous send, receive or connect operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::debug option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::debug option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::do_not_route option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::do_not_route option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Implements a custom socket option that determines whether or not an accept operation is permitted to fail with `boost::asio::error::connection_aborted`. By default the option is false.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::enable_connection_aborted option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::enable_connection_aborted option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_context();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_service();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket::keep_alive option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket::keep_alive option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket::bytes_readable command;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket::bytes_readable command;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::keep_alive option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::keep_alive option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::linger option(true, 30);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::linger option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint = socket.local_endpoint();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint = socket.local_endpoint(ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:`true` if the underlying socket is in non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:               boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:           if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:           if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:               || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[mode][If `true`, the underlying socket is put into non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::system::system_error][Thrown on failure. If the `mode` is `false`, but the current value of `non_blocking()` is `true`, this function fails with `boost::asio::error::invalid_argument`, as the combination does not make sense.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:               boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:           if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:           if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:               || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[mode][If `true`, the underlying socket is put into non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[ec][Set to indicate what error occurred, if any. If the `mode` is `false`, but the current value of `non_blocking()` is `true`, this function fails with `boost::asio::error::invalid_argument`, as the combination does not make sense.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:               boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:           if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:           if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:               || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:`true` if the socket's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[mode][If `true`, the socket's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[mode][If `true`, the socket's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.open(boost::asio::ip::tcp::v4(), ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::out_of_band_inline option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::out_of_band_inline option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::system::system_error][Thrown on failure. An error code of `boost::asio::error::eof` indicates that the connection was closed by the peer.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.read_some(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::system::system_error][Thrown on failure. An error code of `boost::asio::error::eof` indicates that the connection was closed by the peer.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.receive(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::system::system_error][Thrown on failure. An error code of `boost::asio::error::eof` indicates that the connection was closed by the peer.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.receive(boost::asio::buffer(data, size), 0);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::receive_buffer_size option(8192);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::receive_buffer_size option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::receive_low_watermark option(1024);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::receive_low_watermark option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native socket is then transferred to the caller.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous connect, send and receive operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. Ownership of the native socket is then transferred to the caller.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is unsupported on Windows versions prior to Windows 8.1, and will fail with `boost::asio::error::operation_not_supported` on these platforms. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint = socket.remote_endpoint();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint = socket.remote_endpoint(ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::reuse_address option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::reuse_address option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.send(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.send(boost::asio::buffer(data, size), 0);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::send_buffer_size option(8192);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::send_buffer_size option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::send_low_watermark option(1024);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::send_low_watermark option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::no_delay option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::no_delay option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.shutdown(boost::asio::ip::tcp::socket::shutdown_send);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.shutdown(boost::asio::ip::tcp::socket::shutdown_send, ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.wait(boost::asio::ip::tcp::socket::wait_read);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.wait(boost::asio::ip::tcp::socket::wait_read, ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::system::system_error][Thrown on failure. An error code of `boost::asio::error::eof` indicates that the connection was closed by the peer.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   socket.write_some(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::streambuf::mutable_buffers_type bufs = b.prepare(512);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::streambuf::mutable_buffers_type bufs = b.prepare(512);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::streambuf::mutable_buffers_type bufs = b.prepare(512);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::steady_timer timer(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::steady_timer timer(io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:     if (e != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:* The `boost::asio::basic_waitable_timer::expires_after()` function cancels any pending asynchronous waits, and returns the number of asynchronous waits that were cancelled. If it returns 0 then you were too late and the wait handler has already been executed, or will soon be executed. If it returns 1 then the wait handler was successfully cancelled.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:* If a wait handler is cancelled, the boost::system::error\_code passed to it contains the value `boost::asio::error::operation_aborted`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:* The timer was cancelled, in which case the handler is passed the error code `boost::asio::error::operation_aborted`.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`. ]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function forces the completion of any pending asynchronous wait operations against the timer. The handler for each cancelled operation will be invoked with the `boost::asio::error::operation_aborted` error code.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function forces the completion of any pending asynchronous wait operations against the timer. The handler for each cancelled operation will be invoked with the `boost::asio::error::operation_aborted` error code.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function forces the completion of one pending asynchronous wait operation against the timer. Handlers are cancelled in FIFO order. The handler for the cancelled operation will be invoked with the `boost::asio::error::operation_aborted` error code.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function forces the completion of one pending asynchronous wait operation against the timer. Handlers are cancelled in FIFO order. The handler for the cancelled operation will be invoked with the `boost::asio::error::operation_aborted` error code.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function sets the expiry time. Any pending asynchronous wait operations will be cancelled. The handler for each cancelled operation will be invoked with the `boost::asio::error::operation_aborted` error code.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function sets the expiry time. Any pending asynchronous wait operations will be cancelled. The handler for each cancelled operation will be invoked with the `boost::asio::error::operation_aborted` error code.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function sets the expiry time. Any pending asynchronous wait operations will be cancelled. The handler for each cancelled operation will be invoked with the `boost::asio::error::operation_aborted` error code.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function sets the expiry time. Any pending asynchronous wait operations will be cancelled. The handler for each cancelled operation will be invoked with the `boost::asio::error::operation_aborted` error code.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function sets the expiry time. Any pending asynchronous wait operations will be cancelled. The handler for each cancelled operation will be invoked with the `boost::asio::error::operation_aborted` error code.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_context();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_service();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:The `boost::asio::buffer` function is used to create a buffer object to represent raw memory, an array of POD elements, a vector of POD elements, or a std::string. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   sock.send(boost::asio::buffer(data, size)); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:In the above example, the return value of `boost::asio::buffer` meets the requirements of the ConstBufferSequence concept so that it may be directly passed to the socket's write function. A buffer created for modifiable memory also meets the requirements of the MutableBufferSequence concept.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   size_t bytes_transferred = sock.receive(boost::asio::buffer(d1));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   bytes_transferred = sock.receive(boost::asio::buffer(d2));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   bytes_transferred = sock.receive(boost::asio::buffer(d3));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   bytes_transferred = sock.receive(boost::asio::buffer(d4)); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::mutable_buffer b1 = ...;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::const_buffer b2 = ...;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   vector<unsigned char> data(boost::asio::buffer_size(buffers));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::buffer_copy(boost::asio::buffer(data), buffers); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:For the `boost::asio::buffer` overloads that accept an argument of type std::vector, the buffer objects returned are invalidated by any vector operation that also invalidates all references, pointers and iterators referring to the elements in the sequence (C++ Std, 23.2.4)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:For the `boost::asio::buffer` overloads that accept an argument of type std::basic\_string, the buffer objects returned are invalidated according to the rules defined for invalidation of references, pointers and iterators referring to elements of the sequence (C++ Std, 21.3).
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   b1 = boost::asio::buffer(a); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:represents the entire array, `{ 'a', 'b', 'c', 'd', 'e' }`. An optional second argument to the `boost::asio::buffer` function may be used to limit the size, in bytes, of the buffer:
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   b2 = boost::asio::buffer(a, 3); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   b4 = boost::asio::buffer(b1 + 1, 3); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:     boost::asio::buffer(d1),
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:     boost::asio::buffer(d2),
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:     boost::asio::buffer(d3) };
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   bufs2.push_back(boost::asio::buffer(d1));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   bufs2.push_back(boost::asio::buffer(d2));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   bufs2.push_back(boost::asio::buffer(d3));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:(Deprecated: Use the `data()` member function.) The `boost::asio::buffer_cast` function is used to obtain a pointer to the underlying memory region associated with a buffer. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::const_buffer b1 = ...;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   const unsigned char* p1 = boost::asio::buffer_cast<const unsigned char*>(b1);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::mutable_buffer b2 = ...;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   unsigned char* p2 = boost::asio::buffer_cast<unsigned char*>(b2);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:The `boost::asio::buffer_cast` function permits violations of type safety, so uses of it in application code should be carefully considered. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:The `boost::asio::buffer_copy` function is used to copy bytes from a source buffer (or buffer sequence) to a target buffer (or buffer sequence). 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:The `boost::asio::buffer_sequence_begin` function returns an iterator pointing to the first element in a buffer sequence. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:The `boost::asio::buffer_sequence_end` function returns an iterator pointing to one past the end element in a buffer sequence. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   auto i = boost::asio::buffer_sequence_begin(buffers);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   auto end = boost::asio::buffer_sequence_end(buffers);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_context();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_service();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_context();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_service();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_context();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_service();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::system::system_error][Thrown on failure. If the sequence is empty, the associated `error_code` is `boost::asio::error::not_found`. Otherwise, contains the error from the last connection attempt.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::connect(s, r.resolve(q)); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[ec][Set to indicate what error occurred, if any. If the sequence is empty, set to `boost::asio::error::not_found`. Otherwise, contains the error from the last connection attempt.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::connect(s, r.resolve(q), ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::system::system_error][Thrown on failure. If the sequence is empty, the associated `error_code` is `boost::asio::error::not_found`. Otherwise, contains the error from the last connection attempt.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This overload assumes that a default constructed object of type `Iterator` represents the end of the sequence. This is a valid assumption for iterator types such as `boost::asio::ip::tcp::resolver::iterator`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[ec][Set to indicate what error occurred, if any. If the sequence is empty, set to `boost::asio::error::not_found`. Otherwise, contains the error from the last connection attempt.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This overload assumes that a default constructed object of type `Iterator` represents the end of the sequence. This is a valid assumption for iterator types such as `boost::asio::ip::tcp::resolver::iterator`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::system::system_error][Thrown on failure. If the sequence is empty, the associated `error_code` is `boost::asio::error::not_found`. Otherwise, contains the error from the last connection attempt.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::connect(s, e.begin(), e.end()); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[ec][Set to indicate what error occurred, if any. If the sequence is empty, set to `boost::asio::error::not_found`. Otherwise, contains the error from the last connection attempt.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::connect(s, e.begin(), e.end(), ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::system::system_error][Thrown on failure. If the sequence is empty, the associated `error_code` is `boost::asio::error::not_found`. Otherwise, contains the error from the last connection attempt.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:It would be used with the `boost::asio::connect` function as follows: 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   tcp::endpoint e = boost::asio::connect(s,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[ec][Set to indicate what error occurred, if any. If the sequence is empty, set to `boost::asio::error::not_found`. Otherwise, contains the error from the last connection attempt.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:It would be used with the `boost::asio::connect` function as follows: 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   tcp::endpoint e = boost::asio::connect(s,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::system::system_error][Thrown on failure. If the sequence is empty, the associated `error_code` is `boost::asio::error::not_found`. Otherwise, contains the error from the last connection attempt.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This overload assumes that a default constructed object of type `Iterator` represents the end of the sequence. This is a valid assumption for iterator types such as `boost::asio::ip::tcp::resolver::iterator`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[ec][Set to indicate what error occurred, if any. If the sequence is empty, set to `boost::asio::error::not_found`. Otherwise, contains the error from the last connection attempt.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This overload assumes that a default constructed object of type `Iterator` represents the end of the sequence. This is a valid assumption for iterator types such as `boost::asio::ip::tcp::resolver::iterator`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::system::system_error][Thrown on failure. If the sequence is empty, the associated `error_code` is `boost::asio::error::not_found`. Otherwise, contains the error from the last connection attempt.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:It would be used with the `boost::asio::connect` function as follows: 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   tcp::resolver::results_type::iterator i = boost::asio::connect(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[ec][Set to indicate what error occurred, if any. If the sequence is empty, set to `boost::asio::error::not_found`. Otherwise, contains the error from the last connection attempt.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:It would be used with the `boost::asio::connect` function as follows: 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   tcp::resolver::results_type::iterator i = boost::asio::connect(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::const_buffer b1 = ...;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::const_buffer b1 = ...;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::deadline_timer timer(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::deadline_timer timer(io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:     if (e != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:* The `boost::asio::basic_deadline_timer::expires_from_now()` function cancels any pending asynchronous waits, and returns the number of asynchronous waits that were cancelled. If it returns 0 then you were too late and the wait handler has already been executed, or will soon be executed. If it returns 1 then the wait handler was successfully cancelled.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:* If a wait handler is cancelled, the boost::system::error\_code passed to it contains the value `boost::asio::error::operation_aborted`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:The `boost::asio::dynamic_buffer` function is used to create a dynamically resized buffer from a `std::basic_string` or `std::vector`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::const_buffer b1 = ...;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::mutable_buffer b1 = ...;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::const_buffer b1 = ...;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::mutable_buffer b1 = ...;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  static const boost::system::error_category & addrinfo_category = boost::asio::error::get_addrinfo_category();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  static const boost::system::error_category & misc_category = boost::asio::error::get_misc_category();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  static const boost::system::error_category & netdb_category = boost::asio::error::get_netdb_category();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  static const boost::system::error_category & ssl_category = boost::asio::error::get_ssl_category();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  static const boost::system::error_category & system_category = boost::asio::error::get_system_category();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::asio::service_already_exists][Thrown if a service of the given type is already present in the [link boost_asio.reference.execution_context `execution_context`].]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::asio::invalid_service_owner][Thrown if the service's owning [link boost_asio.reference.execution_context `execution_context`] is not the [link boost_asio.reference.execution_context `execution_context`] object specified by the `e` parameter. ]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::asio::service_already_exists][Thrown if a service of the given type is already present in the [link boost_asio.reference.execution_context `execution_context`]. ]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:The [link boost_asio.reference.experimental__detached_t `experimental::detached_t`] class is used to indicate that an asynchronous operation is detached. That is, there is no completion handler waiting for the operation's result. A [link boost_asio.reference.experimental__detached_t `experimental::detached_t`] object may be passed as a handler to an asynchronous operation, typically using the special value `boost::asio::experimental::detached`. For example:
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   my_socket.async_send(my_buffer, boost::asio::experimental::detached);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   datagram_protocol p(boost::asio::ip::udp::v4()); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   raw_protocol p(boost::asio::ip::icmp::v4()); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   stream_protocol p(boost::asio::ip::tcp::v4()); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::steady_timer timer(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::steady_timer timer(io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:     if (e != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:* The `boost::asio::basic_waitable_timer::expires_after()` function cancels any pending asynchronous waits, and returns the number of asynchronous waits that were cancelled. If it returns 0 then you were too late and the wait handler has already been executed, or will soon be executed. If it returns 1 then the wait handler was successfully cancelled.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:* If a wait handler is cancelled, the boost::system::error\_code passed to it contains the value `boost::asio::error::operation_aborted`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:    [(Deprecated: Use boost::asio::dispatch().) Request the io_context to invoke the given handler. ]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:    [(Deprecated: Use boost::asio::post().) Request the io_context to invoke the given handler and return immediately. ]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:    [(Deprecated: Use boost::asio::bind_executor().) Create a new handler that automatically dispatches the wrapped handler on the io_context. ]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:* `boost::asio::ip::tcp::socket` 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:* `boost::asio::ip::tcp::acceptor` 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:* `boost::asio::ip::udp::socket` 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::post(io_context, my_task);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::post(io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Some applications may need to prevent an [link boost_asio.reference.io_context `io_context`] object's `run()` call from returning when there is no more work to do. For example, the [link boost_asio.reference.io_context `io_context`] may be being run in a background thread that is launched prior to the application's asynchronous operations. The `run()` call may be kept running by creating an object of type boost::asio::executor\_work\_guard<io\_context::executor\_type>:
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::executor_work_guard<boost::asio::io_context::executor_type>
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:     = boost::asio::make_work_guard(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::executor_work_guard<boost::asio::io_context::executor_type>
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:     = boost::asio::make_work_guard(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::asio::service_already_exists][Thrown if a service of the given type is already present in the [link boost_asio.reference.execution_context `execution_context`].]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::asio::invalid_service_owner][Thrown if the service's owning [link boost_asio.reference.execution_context `execution_context`] is not the [link boost_asio.reference.execution_context `execution_context`] object specified by the `e` parameter. ]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::asio::service_already_exists][Thrown if a service of the given type is already present in the [link boost_asio.reference.execution_context `execution_context`]. ]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_context();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_service();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & owner);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:     (Deprecated: Use boost::asio::dispatch().) Request the strand to invoke the given handler. ]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:     (Deprecated: Use boost::asio::post().) Request the strand to invoke the given handler and return immediately. ]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:    [(Deprecated: Use boost::asio::bind_executor().) Create a new handler that automatically dispatches the wrapped handler on the strand. ]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & context() const;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_context();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_service();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_context();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_service();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:    [(Deprecated: Use boost::asio::dispatch().) Request the io_context to invoke the given handler. ]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:    [(Deprecated: Use boost::asio::post().) Request the io_context to invoke the given handler and return immediately. ]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:    [(Deprecated: Use boost::asio::bind_executor().) Create a new handler that automatically dispatches the wrapped handler on the io_context. ]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:* `boost::asio::ip::tcp::socket` 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:* `boost::asio::ip::tcp::acceptor` 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:* `boost::asio::ip::udp::socket` 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::post(io_context, my_task);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::post(io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Some applications may need to prevent an [link boost_asio.reference.io_context `io_context`] object's `run()` call from returning when there is no more work to do. For example, the [link boost_asio.reference.io_context `io_context`] may be being run in a background thread that is launched prior to the application's asynchronous operations. The `run()` call may be kept running by creating an object of type boost::asio::executor\_work\_guard<io\_context::executor\_type>:
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::executor_work_guard<boost::asio::io_context::executor_type>
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:     = boost::asio::make_work_guard(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::executor_work_guard<boost::asio::io_context::executor_type>
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:     = boost::asio::make_work_guard(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      const boost::asio::ip::address_v4 & ipv4_address);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      const boost::asio::ip::address_v6 & ipv6_address);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      const boost::asio::ip::address_v4 & ipv4_address);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      const boost::asio::ip::address_v6 & ipv6_address);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      const boost::asio::ip::address_v4 & ipv4_address);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      const boost::asio::ip::address_v6 & ipv6_address);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      const boost::asio::ip::address_v4 & ipv4_address);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      const boost::asio::ip::address_v6 & ipv6_address);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::ip::address_v4 to_v4() const;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::ip::address_v6 to_v6() const;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::ip::address ``[link boost_asio.reference.ip__basic_endpoint.address.overload1 address]``() const;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      const boost::asio::ip::address & addr);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::ip::address address() const;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      const boost::asio::ip::address & addr);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      const boost::asio::ip::address & addr,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint ep(boost::asio::ip::tcp::v4(), 1234);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::endpoint ep(boost::asio::ip::udp::v6(), 9876);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      const boost::asio::ip::address & addr,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function forces the completion of any pending asynchronous operations on the host resolver. The handler for each cancelled operation will be invoked with the `boost::asio::error::operation_aborted` error code. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_context();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_service();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  const boost::asio::detail::addrinfo_type & hints() const;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::multicast::enable_loopback option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::multicast::enable_loopback option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::multicast::hops option(4);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::multicast::hops option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::address multicast_address =
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:     boost::asio::ip::address::from_string("225.0.0.1");
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::multicast::join_group option(multicast_address);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::address multicast_address =
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:     boost::asio::ip::address::from_string("225.0.0.1");
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::multicast::leave_group option(multicast_address);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::address_v4 local_interface =
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:     boost::asio::ip::address_v4::from_string("1.2.3.4");
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::multicast::outbound_interface option(local_interface);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint(boost::asio::ip::tcp::v4(), port);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   acceptor.set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::no_delay option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::no_delay option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::unicast::hops option(4);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::unicast::hops option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::v6_only option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::v6_only option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::endpoint endpoint(boost::asio::ip::tcp::v4(), port);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   acceptor.set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::mutable_buffer b1 = ...;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::mutable_buffer b1 = ...;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::mutable_buffer b1 = ...;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:An argument placeholder, for use with boost::bind(), that corresponds to the bytes\_transferred argument of a handler for asynchronous functions such as `boost::asio::basic_stream_socket::async_write_some` or `boost::asio::async_write`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:An argument placeholder, for use with boost::bind(), that corresponds to the results argument of a handler for asynchronous functions such as `boost::asio::async_connect`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:An argument placeholder, for use with boost::bind(), that corresponds to the iterator argument of a handler for asynchronous functions such as `boost::asio::async_connect`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:An argument placeholder, for use with boost::bind(), that corresponds to the results argument of a handler for asynchronous functions such as boost::asio::basic\_resolver::async\_resolve. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:An argument placeholder, for use with boost::bind(), that corresponds to the signal\_number argument of a handler for asynchronous functions such as `boost::asio::signal_set::async_wait`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::posix::stream_descriptor descriptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::posix::stream_descriptor::wait_read,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::posix::stream_descriptor descriptor(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::descriptor_base::bytes_readable command(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous read or write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous read or write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is used to close the descriptor. Any asynchronous read or write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is used to close the descriptor. Any asynchronous read or write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_context();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_service();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::posix::stream_descriptor descriptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::posix::stream_descriptor::bytes_readable command;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::posix::stream_descriptor descriptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::posix::stream_descriptor::bytes_readable command;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:`true` if the underlying descriptor is in non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[mode][If `true`, the underlying descriptor is put into non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::system::system_error][Thrown on failure. If the `mode` is `false`, but the current value of `non_blocking()` is `true`, this function fails with `boost::asio::error::invalid_argument`, as the combination does not make sense. ]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[mode][If `true`, the underlying descriptor is put into non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[ec][Set to indicate what error occurred, if any. If the `mode` is `false`, but the current value of `non_blocking()` is `true`, this function fails with `boost::asio::error::invalid_argument`, as the combination does not make sense. ]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:`true` if the descriptor's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[mode][If `true`, the descriptor's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[mode][If `true`, the descriptor's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:All outstanding asynchronous read or write operations will finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::posix::stream_descriptor descriptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   descriptor.wait(boost::asio::posix::stream_descriptor::wait_read);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::posix::stream_descriptor descriptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   descriptor.wait(boost::asio::posix::stream_descriptor::wait_read, ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::posix::stream_descriptor descriptor(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::descriptor_base::bytes_readable command(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   descriptor.async_read_some(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::posix::stream_descriptor descriptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::posix::stream_descriptor::wait_read,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   descriptor.async_write_some(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::posix::stream_descriptor descriptor(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::descriptor_base::bytes_readable command(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous read or write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous read or write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is used to close the descriptor. Any asynchronous read or write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is used to close the descriptor. Any asynchronous read or write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_context();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_service();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::posix::stream_descriptor descriptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::posix::stream_descriptor::bytes_readable command;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::posix::stream_descriptor descriptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::posix::stream_descriptor::bytes_readable command;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:`true` if the underlying descriptor is in non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[mode][If `true`, the underlying descriptor is put into non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::system::system_error][Thrown on failure. If the `mode` is `false`, but the current value of `non_blocking()` is `true`, this function fails with `boost::asio::error::invalid_argument`, as the combination does not make sense. ]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[mode][If `true`, the underlying descriptor is put into non-blocking mode and direct system calls may fail with `boost::asio::error::would_block` (or the equivalent system error).]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[ec][Set to indicate what error occurred, if any. If the `mode` is `false`, but the current value of `non_blocking()` is `true`, this function fails with `boost::asio::error::invalid_argument`, as the combination does not make sense. ]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:`true` if the descriptor's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[mode][If `true`, the descriptor's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[mode][If `true`, the descriptor's synchronous operations will fail with `boost::asio::error::would_block` if they are unable to perform the requested operation immediately. If `false`, synchronous operations will block until complete.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:The non-blocking mode has no effect on the behaviour of asynchronous operations. Asynchronous operations will never fail with the error `boost::asio::error::would_block`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::system::system_error][Thrown on failure. An error code of `boost::asio::error::eof` indicates that the connection was closed by the peer.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   descriptor.read_some(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:All outstanding asynchronous read or write operations will finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::posix::stream_descriptor descriptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   descriptor.wait(boost::asio::posix::stream_descriptor::wait_read);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::posix::stream_descriptor descriptor(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   descriptor.wait(boost::asio::posix::stream_descriptor::wait_read, ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::system::system_error][Thrown on failure. An error code of `boost::asio::error::eof` indicates that the connection was closed by the peer.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   descriptor.write_some(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::read(s, boost::asio::buffer(data, size)); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::read(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_all()); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::read(s, boost::asio::buffer(data, size), ec); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::read(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_all(), ec); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::read(s, boost::asio::buffer(data, size),
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_at_least(32)); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::read(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_all()); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::read(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_all(), ec); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::read(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_all()); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::read(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_all(), ec); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::read_at(d, 42, boost::asio::buffer(data, size)); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::read_at(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_all()); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::read_at(d, 42,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::buffer(data, size), ec); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::read_at(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_all(), ec); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::read_at(d, 42, boost::asio::buffer(data, size),
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_at_least(32)); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::read_at(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_all()); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::read_at(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_all(), ec); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::basic_streambuf< Allocator > & b,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::basic_streambuf< Allocator > & b,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::basic_streambuf< Allocator > & b,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::basic_streambuf< Allocator > & b,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::basic_streambuf< Allocator > & b,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::basic_streambuf< Allocator > & b,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::basic_streambuf< Allocator > & b,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::basic_streambuf< Allocator > & b,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   std::string n = boost::asio::read_until(s,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::dynamic_buffer(data), '\n');
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   std::string n = boost::asio::read_until(s,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::dynamic_buffer(data), "\r\n");
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   std::string n = boost::asio::read_until(s,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::dynamic_buffer(data), boost::regex("\r\n"));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   typedef boost::asio::buffers_iterator<
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::const_buffers_1> iterator;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::read_until(s, data, match_whitespace);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::read_until(s, data, match_char('a'));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::basic_streambuf< Allocator > & b,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::read_until(s, b, '\n');
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::basic_streambuf< Allocator > & b,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::basic_streambuf< Allocator > & b,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::read_until(s, b, "\r\n");
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::basic_streambuf< Allocator > & b,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::basic_streambuf< Allocator > & b,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::read_until(s, b, boost::regex("\r\n"));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::basic_streambuf< Allocator > & b,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::basic_streambuf< Allocator > & b,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   typedef boost::asio::buffers_iterator<
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::streambuf::const_buffers_type> iterator;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::read_until(s, b, match_whitespace);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::read_until(s, b, match_char('a'));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::basic_streambuf< Allocator > & b,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   serial_port.async_read_some(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   serial_port.async_write_some(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous read or write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous read or write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is used to close the serial port. Any asynchronous read or write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is used to close the serial port. Any asynchronous read or write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_context();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_service();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::system::system_error][Thrown on failure. An error code of `boost::asio::error::eof` indicates that the connection was closed by the peer.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   serial_port.read_some(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::system::system_error][Thrown on failure. An error code of `boost::asio::error::eof` indicates that the connection was closed by the peer.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   serial_port.write_some(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:* The signal set was cancelled, in which case the handler is passed the error code `boost::asio::error::operation_aborted`.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`. ]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function forces the completion of any pending asynchronous wait operations against the signal set. The handler for each cancelled operation will be invoked with the `boost::asio::error::operation_aborted` error code.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function forces the completion of any pending asynchronous wait operations against the signal set. The handler for each cancelled operation will be invoked with the `boost::asio::error::operation_aborted` error code.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_context();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_service();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::signal_set signals(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::signal_set signals(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::signal_set signals(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::broadcast option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::broadcast option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::bytes_readable command(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::debug option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::debug option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::do_not_route option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::udp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::do_not_route option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Implements a custom socket option that determines whether or not an accept operation is permitted to fail with `boost::asio::error::connection_aborted`. By default the option is false.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::enable_connection_aborted option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::enable_connection_aborted option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::keep_alive option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::keep_alive option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::linger option(true, 30);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::linger option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::out_of_band_inline option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::out_of_band_inline option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::receive_buffer_size option(8192);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::receive_buffer_size option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::receive_low_watermark option(1024);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::receive_low_watermark option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::reuse_address option(true);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::acceptor acceptor(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::reuse_address option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::send_buffer_size option(8192);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::send_buffer_size option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::send_low_watermark option(1024);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ip::tcp::socket socket(io_context); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::socket_base::send_low_watermark option;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      const boost::asio::io_context::strand & s,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::spawn(my_strand, do_echo);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   void do_echo(boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:             boost::asio::buffer(data), yield);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:         boost::asio::async_write(my_socket,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:             boost::asio::buffer(data, length), yield);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      const boost::asio::io_context::strand & s,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  static const boost::system::error_category & stream_category = boost::asio::ssl::error::get_stream_category();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   namespace ssl = boost::asio::ssl;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::connect(sock.lowest_layer(), resolver.resolve(query));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ssl::context ctx(boost::asio::ssl::context::sslv23);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ssl::stream<asio:ip::tcp::socket> sock(io_context, ctx);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_context();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_service();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::ssl::stream<asio:ip::tcp::socket> sock(io_context, ctx);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::steady_timer timer(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::steady_timer timer(io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:     if (e != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:* The `boost::asio::basic_waitable_timer::expires_after()` function cancels any pending asynchronous waits, and returns the number of asynchronous waits that were cancelled. If it returns 0 then you were too late and the wait handler has already been executed, or will soon be executed. If it returns 1 then the wait handler was successfully cancelled.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:* If a wait handler is cancelled, the boost::system::error\_code passed to it contains the value `boost::asio::error::operation_aborted`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::streambuf::mutable_buffers_type bufs = b.prepare(512);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::asio::service_already_exists][Thrown if a service of the given type is already present in the [link boost_asio.reference.execution_context `execution_context`].]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::asio::invalid_service_owner][Thrown if the service's owning [link boost_asio.reference.execution_context `execution_context`] is not the [link boost_asio.reference.execution_context `execution_context`] object specified by the `e` parameter. ]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::asio::service_already_exists][Thrown if a service of the given type is already present in the [link boost_asio.reference.execution_context `execution_context`]. ]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::steady_timer timer(io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::steady_timer timer(io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:     if (e != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:* The `boost::asio::basic_waitable_timer::expires_after()` function cancels any pending asynchronous waits, and returns the number of asynchronous waits that were cancelled. If it returns 0 then you were too late and the wait handler has already been executed, or will soon be executed. If it returns 1 then the wait handler was successfully cancelled.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:* If a wait handler is cancelled, the boost::system::error\_code passed to it contains the value `boost::asio::error::operation_aborted`. 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::thread_pool pool(4);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::post(pool, my_task);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::post(pool,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::asio::service_already_exists][Thrown if a service of the given type is already present in the [link boost_asio.reference.execution_context `execution_context`].]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::asio::invalid_service_owner][Thrown if the service's owning [link boost_asio.reference.execution_context `execution_context`] is not the [link boost_asio.reference.execution_context `execution_context`] object specified by the `e` parameter. ]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::asio::service_already_exists][Thrown if a service of the given type is already present in the [link boost_asio.reference.execution_context `execution_context`]. ]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   std::size_t n = boost::asio::read(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       sock, boost::asio::buffer(buf),
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_all(), ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   std::size_t n = boost::asio::read(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       sock, boost::asio::buffer(buf),
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_at_least(64), ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   std::size_t n = boost::asio::read(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       sock, boost::asio::buffer(buf),
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_exactly(64), ec);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:The [link boost_asio.reference.use_future_t `use_future_t`] class is used to indicate that an asynchronous operation should return a std::future object. A [link boost_asio.reference.use_future_t `use_future_t`] object may be passed as a handler to an asynchronous operation, typically using the special value `boost::asio::use_future`. For example:
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:     = my_socket.async_read_some(my_buffer, boost::asio::use_future); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`. ]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous read or write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous read or write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is used to close the handle. Any asynchronous read or write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is used to close the handle. Any asynchronous read or write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_context();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_service();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous read or write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous read or write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is used to close the handle. Any asynchronous read or write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is used to close the handle. Any asynchronous read or write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_context();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_service();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   handle.async_read_some_at(42, boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   handle.async_write_some_at(42, boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous read or write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous read or write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is used to close the handle. Any asynchronous read or write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is used to close the handle. Any asynchronous read or write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_context();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_service();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::system::system_error][Thrown on failure. An error code of `boost::asio::error::eof` indicates that the connection was closed by the peer.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   handle.read_some_at(42, boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::system::system_error][Thrown on failure. An error code of `boost::asio::error::eof` indicates that the connection was closed by the peer.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   handle.write_some_at(42, boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   handle.async_read_some(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:Regardless of whether the asynchronous operation completes immediately or not, the handler will not be invoked from within this function. Invocation of the handler will be performed in a manner equivalent to using `boost::asio::io_context::post()`.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   handle.async_write_some(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous read or write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function causes all outstanding asynchronous read or write operations to finish immediately, and the handlers for cancelled operations will be passed the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is used to close the handle. Any asynchronous read or write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:This function is used to close the handle. Any asynchronous read or write operations will be cancelled immediately, and will complete with the `boost::asio::error::operation_aborted` error.
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_context();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  boost::asio::io_context & get_io_service();
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::system::system_error][Thrown on failure. An error code of `boost::asio::error::eof` indicates that the connection was closed by the peer.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   handle.read_some(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context);
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:      boost::asio::io_context & io_context,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[[boost::system::system_error][Thrown on failure. An error code of `boost::asio::error::eof` indicates that the connection was closed by the peer.]]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   handle.write_some(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::write(s, boost::asio::buffer(data, size)); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::write(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_all()); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::write(s, boost::asio::buffer(data, size), ec); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::write(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_all(), ec); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::write(s, boost::asio::buffer(data, size),
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_at_least(32)); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::write(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_all()); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::write(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_all(), ec); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::write(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_all()); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::write(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_all(), ec); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::write_at(d, 42, boost::asio::buffer(data, size)); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::write_at(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_all()); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::write_at(d, 42,
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::buffer(data, size), ec); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::write_at(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_all(), ec); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::write_at(d, 42, boost::asio::buffer(data, size),
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_at_least(32)); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::write_at(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_all()); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:   boost::asio::write_at(
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:       boost::asio::transfer_all(), ec); 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[section:is_error_code_enum_lt__addrinfo_errors__gt_ boost::system::is_error_code_enum< boost::asio::error::addrinfo_errors >]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  struct boost::system::is_error_code_enum< boost::asio::error::addrinfo_errors >
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[section:value boost::system::is_error_code_enum< boost::asio::error::addrinfo_errors >::value]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[indexterm2 boost_asio.indexterm.is_error_code_enum_lt__addrinfo_errors__gt_.value..value..boost::system::is_error_code_enum< boost::asio::error::addrinfo_errors >] 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[section:is_error_code_enum_lt__basic_errors__gt_ boost::system::is_error_code_enum< boost::asio::error::basic_errors >]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  struct boost::system::is_error_code_enum< boost::asio::error::basic_errors >
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[section:value boost::system::is_error_code_enum< boost::asio::error::basic_errors >::value]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[indexterm2 boost_asio.indexterm.is_error_code_enum_lt__basic_errors__gt_.value..value..boost::system::is_error_code_enum< boost::asio::error::basic_errors >] 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[section:is_error_code_enum_lt__misc_errors__gt_ boost::system::is_error_code_enum< boost::asio::error::misc_errors >]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  struct boost::system::is_error_code_enum< boost::asio::error::misc_errors >
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[section:value boost::system::is_error_code_enum< boost::asio::error::misc_errors >::value]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[indexterm2 boost_asio.indexterm.is_error_code_enum_lt__misc_errors__gt_.value..value..boost::system::is_error_code_enum< boost::asio::error::misc_errors >] 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[section:is_error_code_enum_lt__netdb_errors__gt_ boost::system::is_error_code_enum< boost::asio::error::netdb_errors >]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  struct boost::system::is_error_code_enum< boost::asio::error::netdb_errors >
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[section:value boost::system::is_error_code_enum< boost::asio::error::netdb_errors >::value]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[indexterm2 boost_asio.indexterm.is_error_code_enum_lt__netdb_errors__gt_.value..value..boost::system::is_error_code_enum< boost::asio::error::netdb_errors >] 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[section:is_error_code_enum_lt__ssl_errors__gt_ boost::system::is_error_code_enum< boost::asio::error::ssl_errors >]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  struct boost::system::is_error_code_enum< boost::asio::error::ssl_errors >
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[section:value boost::system::is_error_code_enum< boost::asio::error::ssl_errors >::value]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[indexterm2 boost_asio.indexterm.is_error_code_enum_lt__ssl_errors__gt_.value..value..boost::system::is_error_code_enum< boost::asio::error::ssl_errors >] 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[section:is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_ boost::system::is_error_code_enum< boost::asio::ssl::error::stream_errors >]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:  struct boost::system::is_error_code_enum< boost::asio::ssl::error::stream_errors >
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[section:value boost::system::is_error_code_enum< boost::asio::ssl::error::stream_errors >::value]
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.qbk:[indexterm2 boost_asio.indexterm.is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_.value..value..boost::system::is_error_code_enum< boost::asio::ssl::error::stream_errors >] 
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.xsl:    <xsl:when test="contains($name, 'boost::asio::error::')">
/home/kaworu/boost_1_69_0/libs/asio/doc/reference.xsl:         select="concat(substring-before($name, 'boost::asio::error::'), substring-after($name, 'boost::asio::error::'))"/>
/home/kaworu/boost_1_69_0/libs/asio/doc/using.qbk:    boost::asio::ip::tcp::iostream s("www.boost.org", "http");
/home/kaworu/boost_1_69_0/libs/process/test/async_system_stackful_error.cpp:    boost::asio::io_context ios;
/home/kaworu/boost_1_69_0/libs/process/test/async_system_stackful_error.cpp:            [&](boost::asio::yield_context yield_)
/home/kaworu/boost_1_69_0/libs/process/test/async_system_stackful_error.cpp:    boost::asio::spawn(ios, stackful);
/home/kaworu/boost_1_69_0/libs/process/test/async_system_stackful_error.cpp:    boost::asio::io_context ios;
/home/kaworu/boost_1_69_0/libs/process/test/async_system_stackful_error.cpp:            [&](boost::asio::yield_context yield_)
/home/kaworu/boost_1_69_0/libs/process/test/async_system_stackful_error.cpp:    boost::asio::spawn(ios, stackful);
/home/kaworu/boost_1_69_0/libs/process/test/async_system_stackful_error.cpp:    boost::asio::io_context ios;
/home/kaworu/boost_1_69_0/libs/process/test/async_system_stackful_error.cpp:            [&](boost::asio::yield_context yield_)
/home/kaworu/boost_1_69_0/libs/process/test/async_system_stackful_error.cpp:    boost::asio::spawn(ios, stackful);
/home/kaworu/boost_1_69_0/libs/process/test/async_pipe.cpp:namespace asio = boost::asio;
/home/kaworu/boost_1_69_0/libs/process/test/bind_stdout.cpp:typedef boost::asio::windows::stream_handle pipe_end;
/home/kaworu/boost_1_69_0/libs/process/test/bind_stdout.cpp:typedef boost::asio::posix::stream_descriptor pipe_end;
/home/kaworu/boost_1_69_0/libs/process/test/bind_stdout.cpp:    boost::asio::streambuf &buffer_;
/home/kaworu/boost_1_69_0/libs/process/test/bind_stdout.cpp:    read_handler(boost::asio::streambuf &buffer) : buffer_(buffer) {}
/home/kaworu/boost_1_69_0/libs/process/test/bind_stdout.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/process/test/bind_stdout.cpp:    boost::asio::streambuf buffer;
/home/kaworu/boost_1_69_0/libs/process/test/bind_stdout.cpp:    boost::asio::async_read_until(p, buffer, '\n',
/home/kaworu/boost_1_69_0/libs/process/test/wait.cpp:    using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/process/test/wait.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/process/test/system_test1.cpp:typedef boost::asio::windows::stream_handle pipe_end;
/home/kaworu/boost_1_69_0/libs/process/test/system_test1.cpp:typedef boost::asio::posix::stream_descriptor pipe_end;
/home/kaworu/boost_1_69_0/libs/process/test/spawn_fail.cpp:typedef boost::asio::windows::stream_handle pipe_end;
/home/kaworu/boost_1_69_0/libs/process/test/spawn_fail.cpp:typedef boost::asio::posix::stream_descriptor pipe_end;
/home/kaworu/boost_1_69_0/libs/process/test/spawn_fail.cpp:    boost::asio::io_context ios;
/home/kaworu/boost_1_69_0/libs/process/test/async_system_fail.cpp:    boost::asio::io_context ios;
/home/kaworu/boost_1_69_0/libs/process/test/async_system_fail.cpp:    bp::async_system(ios, boost::asio::use_future, "foo", bp::ignore_error);
/home/kaworu/boost_1_69_0/libs/process/test/spawn.cpp:typedef boost::asio::windows::stream_handle pipe_end;
/home/kaworu/boost_1_69_0/libs/process/test/spawn.cpp:typedef boost::asio::posix::stream_descriptor pipe_end;
/home/kaworu/boost_1_69_0/libs/process/test/spawn.cpp:    boost::asio::streambuf &buffer_;
/home/kaworu/boost_1_69_0/libs/process/test/spawn.cpp:    read_handler(boost::asio::streambuf &buffer) : buffer_(buffer) {}
/home/kaworu/boost_1_69_0/libs/process/test/spawn.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/process/test/spawn.cpp:    boost::asio::streambuf buffer;
/home/kaworu/boost_1_69_0/libs/process/test/spawn.cpp:    boost::asio::async_read_until(p, buffer, '\n',
/home/kaworu/boost_1_69_0/libs/process/test/on_exit.cpp:    boost::asio::io_context ios;
/home/kaworu/boost_1_69_0/libs/process/test/async_system_stackful.cpp:    boost::asio::io_context ios;
/home/kaworu/boost_1_69_0/libs/process/test/async_system_stackful.cpp:            [&](boost::asio::yield_context yield_)
/home/kaworu/boost_1_69_0/libs/process/test/async_system_stackful.cpp:    boost::asio::spawn(ios, stackful);
/home/kaworu/boost_1_69_0/libs/process/test/bind_stderr.cpp:typedef boost::asio::windows::stream_handle pipe_end;
/home/kaworu/boost_1_69_0/libs/process/test/bind_stderr.cpp:typedef boost::asio::posix::stream_descriptor pipe_end;
/home/kaworu/boost_1_69_0/libs/process/test/bind_stderr.cpp:    boost::asio::streambuf &buffer_;
/home/kaworu/boost_1_69_0/libs/process/test/bind_stderr.cpp:    read_handler(boost::asio::streambuf &buffer) : buffer_(buffer) {}
/home/kaworu/boost_1_69_0/libs/process/test/bind_stderr.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/process/test/bind_stderr.cpp:    boost::asio::streambuf buffer;
/home/kaworu/boost_1_69_0/libs/process/test/bind_stderr.cpp:    boost::asio::async_read_until(p, buffer, '\n', read_handler(buffer));
/home/kaworu/boost_1_69_0/libs/process/test/async_fut.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/process/test/async_fut.cpp:    boost::asio::streambuf in_buf;
/home/kaworu/boost_1_69_0/libs/process/test/async_fut.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/process/test/bind_stdin.cpp:typedef boost::asio::windows::stream_handle pipe_end;
/home/kaworu/boost_1_69_0/libs/process/test/bind_stdin.cpp:typedef boost::asio::posix::stream_descriptor pipe_end;
/home/kaworu/boost_1_69_0/libs/process/test/bind_stdin.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/process/test/bind_stdin.cpp:    boost::asio::streambuf sb;
/home/kaworu/boost_1_69_0/libs/process/test/bind_stdin.cpp:    boost::asio::async_write(p1, sb,
/home/kaworu/boost_1_69_0/libs/process/test/exit_code.cpp:typedef boost::asio::windows::stream_handle pipe_end;
/home/kaworu/boost_1_69_0/libs/process/test/exit_code.cpp:typedef boost::asio::posix::stream_descriptor pipe_end;
/home/kaworu/boost_1_69_0/libs/process/test/exit_code.cpp:    using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/process/test/exit_code.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/process/test/async_system_stackless.cpp:    boost::asio::io_context ios;
/home/kaworu/boost_1_69_0/libs/process/test/async_system_stackless.cpp:    struct stackless_t : boost::asio::coroutine
/home/kaworu/boost_1_69_0/libs/process/test/async_system_stackless.cpp:        boost::asio::io_context & ios;
/home/kaworu/boost_1_69_0/libs/process/test/async_system_stackless.cpp:        stackless_t(boost::asio::io_context & ios_,
/home/kaworu/boost_1_69_0/libs/process/test/bind_stdout_stderr.cpp:typedef boost::asio::windows::stream_handle pipe_end;
/home/kaworu/boost_1_69_0/libs/process/test/bind_stdout_stderr.cpp:typedef boost::asio::posix::stream_descriptor pipe_end;
/home/kaworu/boost_1_69_0/libs/process/test/bind_stdout_stderr.cpp:    boost::asio::streambuf &buffer_;
/home/kaworu/boost_1_69_0/libs/process/test/bind_stdout_stderr.cpp:    read_handler(boost::asio::streambuf &buffer) : buffer_(buffer) {}
/home/kaworu/boost_1_69_0/libs/process/test/bind_stdout_stderr.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/process/test/bind_stdout_stderr.cpp:    boost::asio::streambuf buffer1;
/home/kaworu/boost_1_69_0/libs/process/test/bind_stdout_stderr.cpp:    boost::asio::async_read_until(p1, buffer1, '\n',
/home/kaworu/boost_1_69_0/libs/process/test/bind_stdout_stderr.cpp:    boost::asio::streambuf buffer2;
/home/kaworu/boost_1_69_0/libs/process/test/bind_stdout_stderr.cpp:    boost::asio::async_read_until(p2, buffer2, '\n',
/home/kaworu/boost_1_69_0/libs/process/test/async_system_stackful_except.cpp:    boost::asio::io_context ios;
/home/kaworu/boost_1_69_0/libs/process/test/async_system_stackful_except.cpp:            [&](boost::asio::yield_context yield_)
/home/kaworu/boost_1_69_0/libs/process/test/async_system_stackful_except.cpp:    boost::asio::spawn(ios, stackful);
/home/kaworu/boost_1_69_0/libs/process/test/on_exit2.cpp:    boost::asio::io_context ios;
/home/kaworu/boost_1_69_0/libs/process/test/system_test2.cpp:    boost::asio::io_context ios;
/home/kaworu/boost_1_69_0/libs/process/test/system_test2.cpp:    boost::asio::io_context ios;
/home/kaworu/boost_1_69_0/libs/process/test/async_system_future.cpp:    boost::asio::io_context ios;
/home/kaworu/boost_1_69_0/libs/process/test/async_system_future.cpp:                              ios, boost::asio::use_future,
/home/kaworu/boost_1_69_0/libs/process/test/async_system_future.cpp:    boost::asio::io_context ios;
/home/kaworu/boost_1_69_0/libs/process/test/async_system_future.cpp:                              ios, boost::asio::use_future,
/home/kaworu/boost_1_69_0/libs/process/test/async.cpp:    using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/process/test/async.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/process/test/async.cpp:    using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/process/test/async.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/process/test/async.cpp:    using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/process/test/async.cpp:    boost::asio::io_context io_context1;
/home/kaworu/boost_1_69_0/libs/process/test/async.cpp:    boost::asio::io_context io_context2;
/home/kaworu/boost_1_69_0/libs/process/test/async.cpp:    using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/process/test/async.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/process/test/async.cpp:    using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/process/test/async.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/process/test/async.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/process/test/async.cpp:    boost::asio::streambuf buf;
/home/kaworu/boost_1_69_0/libs/process/test/async.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/process/test/async.cpp:    boost::asio::streambuf buf;
/home/kaworu/boost_1_69_0/libs/process/test/async.cpp:    boost::asio::streambuf in_buf;
/home/kaworu/boost_1_69_0/libs/process/test/async.cpp:    using namespace boost::asio;
/home/kaworu/boost_1_69_0/libs/process/test/async.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/process/test/on_exit3.cpp:    boost::asio::io_context ios;
/home/kaworu/boost_1_69_0/libs/process/example/wait.cpp:        boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/process/example/io.cpp:        boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/process/example/io.cpp:        boost::asio::async_write(p1, boost::asio::buffer(value),  []( const boost::system::error_code&, std::size_t){});
/home/kaworu/boost_1_69_0/libs/process/example/io.cpp:        boost::asio::async_read (p2, boost::asio::buffer(in_buf), []( const boost::system::error_code&, std::size_t){});
/home/kaworu/boost_1_69_0/libs/process/example/io.cpp:        boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/process/example/io.cpp:        boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/libs/process/example/async_io.cpp:    boost::asio::io_context ios;
/home/kaworu/boost_1_69_0/libs/process/example/async_io.cpp:    boost::asio::streambuf buffer;
/home/kaworu/boost_1_69_0/libs/process/doc/tutorial.qbk:[def io_service  [@http://www.boost.org/doc/libs/release/doc/html/boost_asio/reference/io_service.html boost::asio::io_service]]
/home/kaworu/boost_1_69_0/libs/process/doc/tutorial.qbk:[def asio_buffer [@http://www.boost.org/doc/libs/release/doc/html/boost_asio/reference/buffer.html boost::asio::buffer]]
/home/kaworu/boost_1_69_0/libs/process/doc/tutorial.qbk:[def asio_async_read [@http://www.boost.org/doc/libs/release/doc/html/boost_asio/reference/async_read.html boost::asio::async_read]]
/home/kaworu/boost_1_69_0/libs/process/doc/tutorial.qbk:[def boost::asio::yield_context [@http://www.boost.org/doc/libs/release/doc/html/boost_asio/reference/yield_context.html boost::asio::yield_context]]
/home/kaworu/boost_1_69_0/libs/process/doc/tutorial.qbk:[def boost::asio::coroutine [@http://www.boost.org/doc/libs/release/doc/html/boost_asio/reference/coroutine.html boost::asio::coroutine]]
/home/kaworu/boost_1_69_0/libs/process/doc/tutorial.qbk:boost::asio::io_service ios;
/home/kaworu/boost_1_69_0/libs/process/doc/extend.qbk:[def io_service  [@http://www.boost.org/doc/libs/release/doc/html/boost_asio/reference/io_service.html boost::asio::io_service]]
/home/kaworu/boost_1_69_0/libs/process/doc/extend.qbk:[caution `on_exit_handler` uses `boost::asio::signal_set` to listen for SIGCHLD on posix. The application must not also register a signal handler for SIGCHLD using functions such as `signal()` or `sigaction()` (but using `boost::asio::signal_set` is fine). ]
/home/kaworu/boost_1_69_0/libs/process/doc/autodoc.xml:<para>The header which provides the basic asynchrounous features. It provides the on_exit property, which allows callbacks when the process exits. It also implements the necessary traits for passing an boost::asio::io_context, which is needed for asynchronous communication.</para><para>It also pulls the <ulink url="http://www.boost.org/doc/libs/release/doc/html/boost_asio/reference/buffer.html">boost::asio::buffer</ulink> into the boost::process namespace for convenience.</para><para> 
/home/kaworu/boost_1_69_0/libs/process/doc/autodoc.xml:<warning><para>When used ignore_error it might get invoked on error. </para><para><computeroutput>on_exit</computeroutput> uses <computeroutput>boost::asio::signal_set</computeroutput> to listen for <computeroutput>SIGCHLD</computeroutput> on posix, and so has the same restrictions as that class (do not register a handler for <computeroutput>SIGCHLD</computeroutput> except by using <computeroutput>boost::asio::signal_set</computeroutput>). </para></warning>
/home/kaworu/boost_1_69_0/libs/process/doc/autodoc.xml:<class name="async_pipe"><description><para>Class implementing and asnychronous I/O-Object for use with boost.asio. It is based on the corresponding I/O Object, that is either boost::asio::windows::stream_handle or boost::asio::posix::stream_descriptor.</para><para>It can be used directly with boost::asio::async_read or async_write.</para><para><note><para>The object is copyable, but that does invoke a handle duplicate. </para></note>
/home/kaworu/boost_1_69_0/libs/process/doc/autodoc.xml:<method name="source"><type>handle_type</type><parameter name="ios"><paramtype>::boost::asio::io_context &amp;</paramtype></parameter><purpose>Move the source out of this class and change the io_context. Qualified as rvalue. </purpose><description><para><note><para>Will always move. </para></note>
/home/kaworu/boost_1_69_0/libs/process/doc/autodoc.xml:<method name="sink"><type>handle_type</type><parameter name="ios"><paramtype>::boost::asio::io_context &amp;</paramtype></parameter><purpose>Move the sink out of this class and change the io_context. Qualified as rvalue. </purpose><description><para><note><para>Will always move </para></note>
/home/kaworu/boost_1_69_0/libs/process/doc/autodoc.xml:<method name="source" cv="const"><type>handle_type</type><parameter name="ios"><paramtype>::boost::asio::io_context &amp;</paramtype></parameter><purpose>Copy the source out of this class and change the io_context. </purpose><description><para><note><para>Will always copy. </para></note>
/home/kaworu/boost_1_69_0/libs/process/doc/autodoc.xml:<method name="sink" cv="const"><type>handle_type</type><parameter name="ios"><paramtype>::boost::asio::io_context &amp;</paramtype></parameter><purpose>Copy the sink out of this class and change the io_context. </purpose><description><para><note><para>Will always copy </para></note>
/home/kaworu/boost_1_69_0/libs/process/doc/autodoc.xml:<constructor><parameter name="ios"><paramtype>boost::asio::io_context &amp;</paramtype></parameter><description><para>Construct a new <classname alt="boost::process::async_pipe">async_pipe</classname>, does automatically open the pipe. Initializes source and sink with the same io_context. <note><para>Windows creates a named pipe here, where the name is automatically generated. </para></note>
/home/kaworu/boost_1_69_0/libs/process/doc/autodoc.xml:<constructor><parameter name="ios_source"><paramtype>boost::asio::io_context &amp;</paramtype></parameter><parameter name="ios_sink"><paramtype>boost::asio::io_context &amp;</paramtype></parameter><description><para>Construct a new <classname alt="boost::process::async_pipe">async_pipe</classname>, does automatically open the pipe. <note><para>Windows creates a named pipe here, where the name is automatically generated. </para></note>
/home/kaworu/boost_1_69_0/libs/process/doc/autodoc.xml:<constructor><parameter name="ios"><paramtype>boost::asio::io_context &amp;</paramtype></parameter><parameter name="name"><paramtype>const std::string &amp;</paramtype></parameter><description><para>Construct a new <classname alt="boost::process::async_pipe">async_pipe</classname>, does automatically open. Initializes source and sink with the same io_context.</para><para><note><para>Windows restricts possible names. </para></note>
/home/kaworu/boost_1_69_0/libs/process/doc/autodoc.xml:<constructor><parameter name="ios_source"><paramtype>boost::asio::io_context &amp;</paramtype></parameter><parameter name="ios_sink"><paramtype>boost::asio::io_context &amp;</paramtype></parameter><parameter name="name"><paramtype>const std::string &amp;</paramtype></parameter><description><para>Construct a new <classname alt="boost::process::async_pipe">async_pipe</classname>, does automatically open.</para><para><note><para>Windows restricts possible names. </para></note>
/home/kaworu/boost_1_69_0/libs/process/doc/autodoc.xml:        </template><parameter name="ios"><paramtype>boost::asio::io_context &amp;</paramtype></parameter><parameter name="p"><paramtype>const <classname>basic_pipe</classname>&lt; CharT, Traits &gt; &amp;</paramtype></parameter><description><para>Construct the async-pipe from a pipe. <note><para>Windows requires a named pipe for this, if a the wrong type is used an exception is thrown. </para></note>
/home/kaworu/boost_1_69_0/libs/process/doc/autodoc.xml:        </template><parameter name="ios_source"><paramtype>boost::asio::io_context &amp;</paramtype></parameter><parameter name="ios_sink"><paramtype>boost::asio::io_context &amp;</paramtype></parameter><parameter name="p"><paramtype>const <classname>basic_pipe</classname>&lt; CharT, Traits &gt; &amp;</paramtype></parameter><description><para>Construct the async-pipe from a pipe, with two different io_context objects. <note><para>Windows requires a named pipe for this, if a the wrong type is used an exception is thrown. </para></note>
/home/kaworu/boost_1_69_0/libs/process/doc/autodoc.xml:        </template><parameter name="ios"><paramtype>boost::asio::io_context &amp;</paramtype><description><para>A reference to an <ulink url="http://www.boost.org/doc/libs/release/doc/html/boost_asio/reference.html">io_context</ulink> </para></description></parameter><parameter name="exit_handler"><paramtype>ExitHandler &amp;&amp;</paramtype><description><para>The exit-handler for the signature <computeroutput>void(boost::system::error_code, int)</computeroutput></para></description></parameter><parameter name="args"><paramtype>Args &amp;&amp;...</paramtype></parameter><description><para>This function provides an asynchronous interface to process launching.</para><para>It uses the same properties and parameters as the other launching function, but is similar to the asynchronous functions in <ulink url="http://www.boost.org/doc/libs/release/doc/html/boost_asio.html">boost.asio</ulink></para><para>It uses <ulink url="http://www.boost.org/doc/libs/release/doc/html/boost_asio/reference/async_result.html">asio::async_result</ulink> to determine the return value (from the second parameter, <computeroutput>exit_handler</computeroutput>).</para><para>
/home/kaworu/boost_1_69_0/libs/process/doc/autodoc.xml:Utilizing <computeroutput>boost.asio</computeroutput> asynchronous I/O is provided.</para><para><programlisting language="c++">boost::asio::io_context ios;
/home/kaworu/boost_1_69_0/libs/process/doc/autodoc.xml:<listitem><para><computeroutput>boost::asio::const_buffer</computeroutput> <footnote><para> Constructed with <code>boost::asio::buffer</code></para></footnote> </para></listitem><listitem><para><computeroutput>boost::asio::mutable_buffer</computeroutput> <footnote><para> Constructed with <code>boost::asio::buffer</code></para></footnote> </para></listitem><listitem><para><computeroutput>boost::asio::streambuf</computeroutput></para></listitem></itemizedlist>
/home/kaworu/boost_1_69_0/libs/process/doc/autodoc.xml:boost::asio::io_context ios;
/home/kaworu/boost_1_69_0/libs/process/doc/autodoc.xml:</programlisting></para><para><computeroutput>boost::asio::buffer</computeroutput> is also available in the <computeroutput>boost::process</computeroutput> namespace.</para></note>
/home/kaworu/boost_1_69_0/libs/process/doc/autodoc.xml:<warning><para>This feature requires <computeroutput>boost/process/async.hpp</computeroutput> to be included and a reference to <computeroutput>boost::asio::io_context</computeroutput> to be passed to the launching function.</para></warning>
/home/kaworu/boost_1_69_0/libs/process/doc/autodoc.xml:<listitem><para><computeroutput>boost::asio::mutable_buffer</computeroutput> <footnote><para> Constructed with <code>boost::asio::buffer</code></para></footnote> </para></listitem><listitem><para><computeroutput>boost::asio::streambuf</computeroutput></para></listitem><listitem><para><computeroutput>std::future&lt;std::vector&lt;char&gt;&gt;</computeroutput></para></listitem><listitem><para><computeroutput>std::future&lt;std::string&gt;</computeroutput></para></listitem></itemizedlist>
/home/kaworu/boost_1_69_0/libs/process/doc/autodoc.xml:</programlisting></para><para><note><para><computeroutput>boost::asio::buffer</computeroutput> is also available in the <computeroutput>boost::process</computeroutput> namespace.</para></note>
/home/kaworu/boost_1_69_0/libs/process/doc/autodoc.xml:<warning><para>This feature requires <computeroutput>boost/process/async.hpp</computeroutput> to be included and a reference to <computeroutput>boost::asio::io_context</computeroutput> to be passed to the launching function.</para></warning>
/home/kaworu/boost_1_69_0/libs/process/doc/autodoc.xml:<warning><para>This function does not allow asynchronous operations, since it cannot wait for the end of the process. It will fail to compile if a reference to <computeroutput>boost::asio::io_context</computeroutput> is passed. </para></warning>
/home/kaworu/boost_1_69_0/libs/thread/test/test_9303.cpp:            boost::asio::io_service io_service;
/home/kaworu/boost_1_69_0/libs/thread/test/test_9303.cpp:            boost::asio::io_service::work work(io_service);
/home/kaworu/boost_1_69_0/libs/thread/test/test_9303.cpp:                threads.create_thread(boost::bind(&boost::asio::io_service::run,
/home/kaworu/boost_1_69_0/doc/html/boost_process/tutorial.html:<pre class="programlisting"><a href="http://www.boost.org/doc/libs/release/doc/html/boost_asio/reference/io_service.html" target="_top">boost::asio::io_service</a> <span class="identifier">ios</span><span class="special">;</span>
/home/kaworu/boost_1_69_0/doc/html/boost_process/tutorial.html:<a href="http://www.boost.org/doc/libs/release/doc/html/boost_asio/reference/async_read.html" target="_top">boost::asio::async_read</a><span class="special">(</span><span class="identifier">ap</span><span class="special">,</span> <a href="http://www.boost.org/doc/libs/release/doc/html/boost_asio/reference/buffer.html" target="_top">boost::asio::buffer</a><span class="special">(</span><span class="identifier">buf</span><span class="special">),</span>
/home/kaworu/boost_1_69_0/doc/html/boost_process/tutorial.html:        to an <a href="http://www.boost.org/doc/libs/release/doc/html/boost_asio/reference/io_service.html" target="_top">boost::asio::io_service</a>.
/home/kaworu/boost_1_69_0/doc/html/boost_process/tutorial.html:<pre class="programlisting"><a href="http://www.boost.org/doc/libs/release/doc/html/boost_asio/reference/io_service.html" target="_top">boost::asio::io_service</a> <span class="identifier">ios</span><span class="special">;</span>
/home/kaworu/boost_1_69_0/doc/html/boost_process/tutorial.html:<code class="computeroutput"><a class="link" href="../boost/process/child.html" title="Class child">bp::child</a></code> <span class="identifier">c</span><span class="special">(</span><code class="computeroutput"><a class="link" href="../boost/process/search_path.html" title="Function search_path">bp::search_path</a></code><span class="special">(</span><span class="string">"g++"</span><span class="special">),</span> <span class="string">"main.cpp"</span><span class="special">,</span> <code class="computeroutput"><a class="link" href="../boost/process/std_out.html" title="Global std_out">bp::std_out</a></code> <span class="special">&gt;</span> <a href="http://www.boost.org/doc/libs/release/doc/html/boost_asio/reference/buffer.html" target="_top">boost::asio::buffer</a><span class="special">(</span><span class="identifier">buf</span><span class="special">),</span> <span class="identifier">ios</span><span class="special">);</span>
/home/kaworu/boost_1_69_0/doc/html/boost_process/tutorial.html:          Passing an instance of <a href="http://www.boost.org/doc/libs/release/doc/html/boost_asio/reference/io_service.html" target="_top">boost::asio::io_service</a>
/home/kaworu/boost_1_69_0/doc/html/boost_process/tutorial.html:        <a href="http://www.boost.org/doc/libs/release/doc/html/boost_asio/reference/io_service.html" target="_top">boost::asio::io_service</a>)
/home/kaworu/boost_1_69_0/doc/html/boost_process/tutorial.html:<pre class="programlisting"><span class="identifier">boost</span><span class="special">::</span><span class="identifier">asio</span><span class="special">::</span><a href="http://www.boost.org/doc/libs/release/doc/html/boost_asio/reference/io_service.html" target="_top">boost::asio::io_service</a> <span class="identifier">ios</span><span class="special">;</span>
/home/kaworu/boost_1_69_0/doc/html/boost_process/extend.html:        <a href="http://www.boost.org/doc/libs/release/doc/html/boost_asio/reference/io_service.html" target="_top">boost::asio::io_service</a>
/home/kaworu/boost_1_69_0/doc/html/boost_process/extend.html:<pre class="programlisting"><span class="keyword">struct</span> <span class="identifier">async_foo</span> <span class="special">:</span> <code class="computeroutput"><a class="link" href="../boost/process/extend/handler.html" title="Struct handler">handler</a></code><span class="special">,</span> <code class="computeroutput">ex::require_boost::asio::io_service</code>
/home/kaworu/boost_1_69_0/doc/html/boost_process/extend.html:        <a href="http://www.boost.org/doc/libs/release/doc/html/boost_asio/reference/io_service.html" target="_top">boost::asio::io_service</a> <span class="special">&amp;</span> <span class="identifier">ios</span> <span class="special">=</span> <code class="computeroutput">ex::get_boost::asio::io_service</code><span class="special">(</span><span class="identifier">exec</span><span class="special">.</span><span class="identifier">seq</span><span class="special">);</span> <span class="comment">//gives us a reference and a compiler error if not present.</span>
/home/kaworu/boost_1_69_0/doc/html/boost_process/extend.html:          Inheriting <code class="computeroutput">require_boost::asio::io_service</code>
/home/kaworu/boost_1_69_0/doc/html/boost_process/extend.html:          implies <code class="computeroutput">require_boost::asio::io_service</code>
/home/kaworu/boost_1_69_0/doc/html/boost/process/std_out.html:<li class="listitem"><p><code class="computeroutput">boost::asio::mutable_buffer</code> <a href="#ftn.id-1.3.31.9.15.19.4.4.4.4.1.1.1.2" class="footnote" name="id-1.3.31.9.15.19.4.4.4.4.1.1.1.2"><sup class="footnote">[30]</sup></a> </p></li>
/home/kaworu/boost_1_69_0/doc/html/boost/process/std_out.html:<li class="listitem"><p><code class="computeroutput">boost::asio::streambuf</code></p></li>
/home/kaworu/boost_1_69_0/doc/html/boost/process/std_out.html:<tr><td align="left" valign="top"><p><code class="computeroutput">boost::asio::buffer</code> is also available in the <code class="computeroutput">boost::process</code> namespace.</p></td></tr>
/home/kaworu/boost_1_69_0/doc/html/boost/process/std_out.html:<tr><td align="left" valign="top"><p>This feature requires <code class="computeroutput">boost/process/async.hpp</code> to be included and a reference to <code class="computeroutput">boost::asio::io_context</code> to be passed to the launching function.</p></td></tr>
/home/kaworu/boost_1_69_0/doc/html/boost/process/std_out.html:<div id="ftn.id-1.3.31.9.15.19.4.4.4.4.1.1.1.2" class="footnote"><p><a href="#id-1.3.31.9.15.19.4.4.4.4.1.1.1.2" class="para"><sup class="para">[30] </sup></a> Constructed with <code class="computeroutput">boost::asio::buffer</code></p></div>
/home/kaworu/boost_1_69_0/doc/html/boost/process/spawn.html:<tr><td align="left" valign="top"><p>This function does not allow asynchronous operations, since it cannot wait for the end of the process. It will fail to compile if a reference to <code class="computeroutput">boost::asio::io_context</code> is passed. </p></td></tr>
/home/kaworu/boost_1_69_0/doc/html/boost/process/std_in.html:<li class="listitem"><p><code class="computeroutput">boost::asio::const_buffer</code> <a href="#ftn.id-1.3.31.9.15.18.4.3.4.4.1.1.1.2" class="footnote" name="id-1.3.31.9.15.18.4.3.4.4.1.1.1.2"><sup class="footnote">[28]</sup></a> </p></li>
/home/kaworu/boost_1_69_0/doc/html/boost/process/std_in.html:<li class="listitem"><p><code class="computeroutput">boost::asio::mutable_buffer</code> <a href="#ftn.id-1.3.31.9.15.18.4.3.4.4.1.2.1.2" class="footnote" name="id-1.3.31.9.15.18.4.3.4.4.1.2.1.2"><sup class="footnote">[29]</sup></a> </p></li>
/home/kaworu/boost_1_69_0/doc/html/boost/process/std_in.html:<li class="listitem"><p><code class="computeroutput">boost::asio::streambuf</code></p></li>
/home/kaworu/boost_1_69_0/doc/html/boost/process/std_in.html:<p><code class="computeroutput">boost::asio::buffer</code> is also available in the <code class="computeroutput">boost::process</code> namespace.</p>
/home/kaworu/boost_1_69_0/doc/html/boost/process/std_in.html:<tr><td align="left" valign="top"><p>This feature requires <code class="computeroutput">boost/process/async.hpp</code> to be included and a reference to <code class="computeroutput">boost::asio::io_context</code> to be passed to the launching function.</p></td></tr>
/home/kaworu/boost_1_69_0/doc/html/boost/process/std_in.html:<div id="ftn.id-1.3.31.9.15.18.4.3.4.4.1.1.1.2" class="footnote"><p><a href="#id-1.3.31.9.15.18.4.3.4.4.1.1.1.2" class="para"><sup class="para">[28] </sup></a> Constructed with <code class="computeroutput">boost::asio::buffer</code></p></div>
/home/kaworu/boost_1_69_0/doc/html/boost/process/std_in.html:<div id="ftn.id-1.3.31.9.15.18.4.3.4.4.1.2.1.2" class="footnote"><p><a href="#id-1.3.31.9.15.18.4.3.4.4.1.2.1.2" class="para"><sup class="para">[29] </sup></a> Constructed with <code class="computeroutput">boost::asio::buffer</code></p></div>
/home/kaworu/boost_1_69_0/doc/html/boost/process/async_pipe.html:<p>Class implementing and asnychronous I/O-Object for use with boost.asio. It is based on the corresponding I/O Object, that is either boost::asio::windows::stream_handle or boost::asio::posix::stream_descriptor.</p>
/home/kaworu/boost_1_69_0/doc/html/boost/process/async_pipe.html:<p>It can be used directly with boost::asio::async_read or async_write.</p>
/home/kaworu/boost_1_69_0/doc/html/boost/process/on_exit.html:<p><code class="computeroutput">on_exit</code> uses <code class="computeroutput">boost::asio::signal_set</code> to listen for <code class="computeroutput">SIGCHLD</code> on posix, and so has the same restrictions as that class (do not register a handler for <code class="computeroutput">SIGCHLD</code> except by using <code class="computeroutput">boost::asio::signal_set</code>). </p>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/networking/other_protocols.html:<pre class="programlisting">boost::asio::generic::stream_protocol::socket my_socket(my_io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/networking/other_protocols.html:my_socket.open(boost::asio::generic::stream_protocol(AF_INET, IPPROTO_TCP));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/networking/other_protocols.html:          An endpoint class template, <a class="link" href="../../reference/generic__basic_endpoint.html" title="generic::basic_endpoint"><code class="computeroutput">boost::asio::generic::basic_endpoint</code></a>,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/networking/other_protocols.html:<pre class="programlisting">boost::asio::ip::tcp::endpoint my_endpoint1 = ...;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/networking/other_protocols.html:boost::asio::generic::stream_protocol::endpoint my_endpoint2(my_endpoint1);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/networking/other_protocols.html:<pre class="programlisting">boost::asio::generic::stream_protocol::socket my_socket(my_io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/networking/other_protocols.html:boost::asio::ip::tcp::endpoint my_endpoint = ...;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/networking/other_protocols.html:<pre class="programlisting">boost::asio::ip::tcp::socket my_socket1(my_io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/networking/other_protocols.html:boost::asio::generic::stream_protocol::socket my_socket2(std::move(my_socket1));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/networking/other_protocols.html:          following is supported because the protocol <code class="computeroutput">boost::asio::ip::tcp</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/networking/other_protocols.html:          is convertible to <code class="computeroutput">boost::asio::generic::stream_protocol</code>:
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/networking/other_protocols.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor my_acceptor(my_io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/networking/other_protocols.html:boost::asio::generic::stream_protocol::socket my_socket(my_io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/networking/protocols.html:boost::asio::connect(socket, resolver.resolve(query));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/networking/protocols.html:<pre class="programlisting">boost::asio::async_connect(socket_, iter,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/networking/protocols.html:      boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/posix/stream_descriptor.html:          operations involving <code class="computeroutput">boost::asio::null_buffers</code>, are not portably
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/posix/fork.html:<pre class="programlisting">io_context_.notify_fork(boost::asio::io_context::fork_prepare);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/posix/fork.html:  io_context_.notify_fork(boost::asio::io_context::fork_child);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/posix/fork.html:  io_context_.notify_fork(boost::asio::io_context::fork_parent);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/core/strands.html:<span class="special">}</span> <span class="special">}</span> <span class="comment">// namespace boost::asio</span>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/core/spawn.html:<pre class="programlisting">boost::asio::spawn(my_strand, do_echo);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/core/spawn.html:void do_echo(boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/core/spawn.html:          boost::asio::buffer(data), yield);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/core/spawn.html:      boost::asio::async_write(my_socket,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/core/spawn.html:          boost::asio::buffer(data, length), yield);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/core/spawn.html:<pre class="programlisting">void coroutine(boost::asio::yield_context yield);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/core/spawn.html:    boost::asio::buffer(data), yield);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/core/spawn.html:    boost::asio::buffer(data), yield[ec]);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/core/spawn.html:<pre class="programlisting">void coroutine(boost::asio::basic_yield_context&lt;Handler&gt; yield);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/core/line_based.html:<span class="special">}</span> <span class="special">}</span> <span class="comment">// namespace boost::asio</span>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/core/coroutines_ts.html:<pre class="programlisting">boost::asio::experimental::co_spawn(executor,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/core/coroutines_ts.html:    boost::asio::experimental::detached);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/core/coroutines_ts.html:boost::asio::experimental::awaitable&lt;void&gt; echo(tcp::socket socket)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/core/coroutines_ts.html:  auto token = co_await boost::asio::experimental::this_coro::token();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/core/coroutines_ts.html:      std::size_t n = co_await socket.async_read_some(boost::asio::buffer(data), token);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/core/coroutines_ts.html:      co_await async_write(socket, boost::asio::buffer(data, n), token);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/core/coroutines_ts.html:          The second argument is a nullary function object that returns a <a class="link" href="../../reference/experimental__awaitable.html" title="experimental::awaitable"><code class="computeroutput">boost::asio::awaitable&lt;R&gt;</code></a>,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/core/coroutines_ts.html:          <a class="link" href="../../reference/experimental__detached.html" title="experimental::detached"><code class="computeroutput">boost::asio::experimental::detached</code></a>,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/core/coroutines_ts.html:<pre class="programlisting">auto token = co_await boost::asio::experimental::this_coro::token();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/core/coroutines_ts.html:<pre class="programlisting">std::size_t n = co_await socket.async_read_some(boost::asio::buffer(data), token);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/core/coroutine.html:<pre class="programlisting">struct session : boost::asio::coroutine
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/core/coroutine.html:        yield socket_-&gt;async_read_some(boost::asio::buffer(*buffer_), *this);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/core/coroutine.html:        yield boost::asio::async_write(*socket_, boost::asio::buffer(*buffer_, n), *this);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/core/allocation.html:<span class="special">}</span> <span class="special">}</span> <span class="comment">// namespace boost::asio</span>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/ssl.html:<pre class="programlisting">using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/ssl.html:namespace ssl = boost::asio::ssl;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/ssl.html:boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/ssl.html:boost::asio::connect(sock.lowest_layer(), resolver.resolve(query));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/signals.html:boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/cpp2011/move_handlers.html:    socket-&gt;async_read_some(boost::asio::buffer(*buffer), std::move(*this));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/cpp2011/futures.html:          The <code class="computeroutput">boost::asio::use_future</code> special value provides first-class
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/cpp2011/futures.html:          To use <code class="computeroutput">boost::asio::use_future</code>, pass it to an asynchronous
/home/kaworu/boost_1_69_0/doc/html/boost_asio/overview/cpp2011/futures.html:  my_socket.async_read_some(my_buffer, boost::asio::use_future);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/examples/cpp11_examples.html:        Example of using the boost::asio::spawn() function, a wrapper around the
/home/kaworu/boost_1_69_0/doc/html/boost_asio/examples/cpp03_examples.html:        Example of using the boost::asio::spawn() function, a wrapper around the
/home/kaworu/boost_1_69_0/doc/html/boost_asio/net_ts.html:<link rel="prev" href="reference/is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::ssl::error::stream_errors &gt;::value">
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer4/src.html:  printer(boost::asio::io_context&amp; io)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer4/src.html:    : timer_(io, boost::asio::chrono::seconds(1)),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer4/src.html:      timer_.expires_at(timer_.expiry() + boost::asio::chrono::seconds(1));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer4/src.html:  boost::asio::steady_timer timer_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer4/src.html:  boost::asio::io_context io;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime2/src.html:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime2/src.html:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime2/src.html:      boost::asio::write(socket, boost::asio::buffer(message), ignored_error);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer5.html:        In addition to initialising a pair of boost::asio::steady_timer members,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer5.html:<pre class="programlisting">  printer(boost::asio::io_context&amp; io)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer5.html:      timer1_(io, boost::asio::chrono::seconds(1)),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer5.html:      timer2_(io, boost::asio::chrono::seconds(1)),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer5.html:        object. The boost::asio::io_context::strand::bind_executor() function returns
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer5.html:<pre class="programlisting">    timer1_.async_wait(boost::asio::bind_executor(strand_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer5.html:    timer2_.async_wait(boost::asio::bind_executor(strand_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer5.html:      timer1_.expires_at(timer1_.expiry() + boost::asio::chrono::seconds(1));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer5.html:      timer1_.async_wait(boost::asio::bind_executor(strand_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer5.html:      timer2_.expires_at(timer2_.expiry() + boost::asio::chrono::seconds(1));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer5.html:      timer2_.async_wait(boost::asio::bind_executor(strand_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer5.html:  boost::asio::io_context::strand strand_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer5.html:  boost::asio::steady_timer timer1_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer5.html:  boost::asio::steady_timer timer2_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer5.html:  boost::asio::io_context io;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer5.html:  boost::thread t(boost::bind(&amp;boost::asio::io_context::run, &amp;io));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime3.html:<pre class="programlisting">    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime3.html:<pre class="programlisting">  tcp_server(boost::asio::io_context&amp; io_context)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime3.html:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime3.html:  static pointer create(boost::asio::io_context&amp; io_context)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime3.html:        In the function <code class="computeroutput">start()</code>, we call boost::asio::async_write()
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime3.html:        to serve the data to the client. Note that we are using boost::asio::async_write(),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime3.html:        In this program, both of the argument placeholders (boost::asio::placeholders::error
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime3.html:        and boost::asio::placeholders::bytes_transferred) could potentially have
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime3.html:<pre class="programlisting">    boost::asio::async_write(socket_, boost::asio::buffer(message_),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime3.html:          boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime3.html:          boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime3.html:  tcp_connection(boost::asio::io_context&amp; io_context)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime3.html:        The boost::asio::async_write() call used to initiate the call can then be
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime3.html:<pre class="programlisting">  boost::asio::async_write(socket_, boost::asio::buffer(message_),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer1.html:  boost::asio::io_context io;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer1.html:        Next we declare an object of type boost::asio::steady_timer. The core asio
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer1.html:<pre class="programlisting">  boost::asio::steady_timer t(io, boost::asio::chrono::seconds(5));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime6/src.html:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime6/src.html:  udp_server(boost::asio::io_context&amp; io_context)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime6/src.html:        boost::asio::buffer(recv_buffer_), remote_endpoint_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime6/src.html:          boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime6/src.html:          boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime6/src.html:      socket_.async_send_to(boost::asio::buffer(*message), remote_endpoint_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime6/src.html:            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime6/src.html:            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime6/src.html:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer3.html:    boost::asio::steady_timer* t, int* count)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer3.html:<pre class="programlisting">    t-&gt;expires_at(t-&gt;expiry() + boost::asio::chrono::seconds(1));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer3.html:        In this example, the boost::asio::placeholders::error argument to boost::bind()
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer3.html:          boost::asio::placeholders::error, t, count));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer3.html:  boost::asio::io_context io;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer3.html:  boost::asio::steady_timer t(io, boost::asio::chrono::seconds(1));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer3.html:        boost::asio::placeholders::error, &amp;t, &amp;count));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime1.html:<pre class="programlisting">using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime1.html:<pre class="programlisting">    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime1.html:        a specific IP version. The boost::asio::connect() function does this for
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime1.html:        We use a <code class="computeroutput">boost::array</code> to hold the received data. The boost::asio::buffer()
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime1.html:        function will exit with the boost::asio::error::eof error, which is how we
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer2.html:  boost::asio::io_context io;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer2.html:  boost::asio::steady_timer t(io, boost::asio::chrono::seconds(5));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer1/src.html:  boost::asio::io_context io;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer1/src.html:  boost::asio::steady_timer t(io, boost::asio::chrono::seconds(5));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime2.html:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime2.html:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime2.html:      boost::asio::write(socket, boost::asio::buffer(message), ignored_error);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime5/src.html:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime5/src.html:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime5/src.html:      socket.receive_from(boost::asio::buffer(recv_buf), remote_endpoint);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime5/src.html:      socket.send_to(boost::asio::buffer(message),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer4.html:<pre class="programlisting">  printer(boost::asio::io_context&amp; io)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer4.html:    : timer_(io, boost::asio::chrono::seconds(1)),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer4.html:        You will note that the boost::asio::placeholders::error placeholder is not
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer4.html:      timer_.expires_at(timer_.expiry() + boost::asio::chrono::seconds(1));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer4.html:  boost::asio::steady_timer timer_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer4.html:  boost::asio::io_context io;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime1/src.html:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime1/src.html:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime1/src.html:    boost::asio::connect(socket, endpoints);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime1/src.html:      size_t len = socket.read_some(boost::asio::buffer(buf), error);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime1/src.html:      if (error == boost::asio::error::eof)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime3/src.html:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime3/src.html:  static pointer create(boost::asio::io_context&amp; io_context)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime3/src.html:    boost::asio::async_write(socket_, boost::asio::buffer(message_),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime3/src.html:          boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime3/src.html:          boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime3/src.html:  tcp_connection(boost::asio::io_context&amp; io_context)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime3/src.html:  tcp_server(boost::asio::io_context&amp; io_context)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime3/src.html:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime3/src.html:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime5.html:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime4.html:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime4.html:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime4.html:    socket.send_to(boost::asio::buffer(send_buf), receiver_endpoint);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer3/src.html:    boost::asio::steady_timer* t, int* count)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer3/src.html:    t-&gt;expires_at(t-&gt;expiry() + boost::asio::chrono::seconds(1));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer3/src.html:          boost::asio::placeholders::error, t, count));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer3/src.html:  boost::asio::io_context io;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer3/src.html:  boost::asio::steady_timer t(io, boost::asio::chrono::seconds(1));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer3/src.html:        boost::asio::placeholders::error, &amp;t, &amp;count));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer2/src.html:  boost::asio::io_context io;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer2/src.html:  boost::asio::steady_timer t(io, boost::asio::chrono::seconds(5));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime7/src.html:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime7/src.html:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime7/src.html:  static pointer create(boost::asio::io_context&amp; io_context)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime7/src.html:    boost::asio::async_write(socket_, boost::asio::buffer(message_),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime7/src.html:  tcp_connection(boost::asio::io_context&amp; io_context)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime7/src.html:  tcp_server(boost::asio::io_context&amp; io_context)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime7/src.html:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime7/src.html:  udp_server(boost::asio::io_context&amp; io_context)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime7/src.html:        boost::asio::buffer(recv_buffer_), remote_endpoint_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime7/src.html:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime7/src.html:      socket_.async_send_to(boost::asio::buffer(*message), remote_endpoint_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime7/src.html:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime6.html:<pre class="programlisting">    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime6.html:<pre class="programlisting">  udp_server(boost::asio::io_context&amp; io_context)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime6.html:        boost::asio::buffer(recv_buffer_), remote_endpoint_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime6.html:          boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime6.html:          boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime6.html:<pre class="programlisting">      socket_.async_send_to(boost::asio::buffer(*message), remote_endpoint_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime6.html:            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime6.html:            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime6.html:        In this program, both of the argument placeholders (boost::asio::placeholders::error
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime6.html:        and boost::asio::placeholders::bytes_transferred) could potentially have
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime7.html:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime7.html:  static pointer create(boost::asio::io_context&amp; io_context)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime7.html:    boost::asio::async_write(socket_, boost::asio::buffer(message_),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime7.html:  tcp_connection(boost::asio::io_context&amp; io_context)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime7.html:  tcp_server(boost::asio::io_context&amp; io_context)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime7.html:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime7.html:  udp_server(boost::asio::io_context&amp; io_context)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime7.html:        boost::asio::buffer(recv_buffer_), remote_endpoint_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime7.html:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime7.html:      socket_.async_send_to(boost::asio::buffer(*message), remote_endpoint_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime4/src.html:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime4/src.html:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime4/src.html:    socket.send_to(boost::asio::buffer(send_buf), receiver_endpoint);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tutdaytime4/src.html:        boost::asio::buffer(recv_buf), sender_endpoint);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer5/src.html:  printer(boost::asio::io_context&amp; io)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer5/src.html:      timer1_(io, boost::asio::chrono::seconds(1)),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer5/src.html:      timer2_(io, boost::asio::chrono::seconds(1)),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer5/src.html:    timer1_.async_wait(boost::asio::bind_executor(strand_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer5/src.html:    timer2_.async_wait(boost::asio::bind_executor(strand_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer5/src.html:      timer1_.expires_at(timer1_.expiry() + boost::asio::chrono::seconds(1));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer5/src.html:      timer1_.async_wait(boost::asio::bind_executor(strand_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer5/src.html:      timer2_.expires_at(timer2_.expiry() + boost::asio::chrono::seconds(1));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer5/src.html:      timer2_.async_wait(boost::asio::bind_executor(strand_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer5/src.html:  boost::asio::io_context::strand strand_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer5/src.html:  boost::asio::steady_timer timer1_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer5/src.html:  boost::asio::steady_timer timer2_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer5/src.html:  boost::asio::io_context io;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/tutorial/tuttimer5/src.html:  boost::thread t(boost::bind(&amp;boost::asio::io_context::run, &amp;io));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/fork/daemon.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/fork/daemon.cpp:  udp_daytime_server(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/fork/daemon.cpp:        boost::asio::buffer(recv_buffer_), remote_endpoint_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/fork/daemon.cpp:            socket_.send_to(boost::asio::buffer(message),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/fork/daemon.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/fork/daemon.cpp:    boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/fork/daemon.cpp:    io_context.notify_fork(boost::asio::io_context::fork_prepare);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/fork/daemon.cpp:        //   io_context.notify_fork(boost::asio::io_context::fork_parent);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/fork/daemon.cpp:        //   io_context.notify_fork(boost::asio::io_context::fork_prepare);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/fork/daemon.cpp:    io_context.notify_fork(boost::asio::io_context::fork_child);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/fork/process_per_connection.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/fork/process_per_connection.cpp:  server(boost::asio::io_context& io_context, unsigned short port)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/fork/process_per_connection.cpp:            io_context_.notify_fork(boost::asio::io_context::fork_prepare);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/fork/process_per_connection.cpp:              io_context_.notify_fork(boost::asio::io_context::fork_child);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/fork/process_per_connection.cpp:              io_context_.notify_fork(boost::asio::io_context::fork_parent);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/fork/process_per_connection.cpp:    socket_.async_read_some(boost::asio::buffer(data_),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/fork/process_per_connection.cpp:    boost::asio::async_write(socket_, boost::asio::buffer(data_, length),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/fork/process_per_connection.cpp:  boost::asio::io_context& io_context_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/fork/process_per_connection.cpp:  boost::asio::signal_set signal_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/fork/process_per_connection.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/buffers/reference_counted.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/buffers/reference_counted.cpp:      buffer_(boost::asio::buffer(*data_))
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/buffers/reference_counted.cpp:  typedef boost::asio::const_buffer value_type;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/buffers/reference_counted.cpp:  typedef const boost::asio::const_buffer* const_iterator;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/buffers/reference_counted.cpp:  const boost::asio::const_buffer* begin() const { return &buffer_; }
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/buffers/reference_counted.cpp:  const boost::asio::const_buffer* end() const { return &buffer_ + 1; }
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/buffers/reference_counted.cpp:  boost::asio::const_buffer buffer_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/buffers/reference_counted.cpp:    boost::asio::async_write(socket_, buffer,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/buffers/reference_counted.cpp:  server(boost::asio::io_context& io_context, short port)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/buffers/reference_counted.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_udp_client.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_udp_client.cpp:  std::size_t receive(const boost::asio::mutable_buffer& buffer,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_udp_client.cpp:    socket_.async_receive(boost::asio::buffer(buffer),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_udp_client.cpp:  boost::asio::io_context io_context_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_udp_client.cpp:        boost::asio::ip::make_address(argv[1]),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_udp_client.cpp:      std::size_t n = c.receive(boost::asio::buffer(data),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/async_tcp_client.cpp:using boost::asio::steady_timer;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/async_tcp_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/async_tcp_client.cpp:  client(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/async_tcp_client.cpp:    boost::asio::async_read_until(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/async_tcp_client.cpp:        boost::asio::dynamic_buffer(input_buffer_), '\n',
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/async_tcp_client.cpp:    boost::asio::async_write(socket_, boost::asio::buffer("\n", 1),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/async_tcp_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_tcp_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_tcp_client.cpp:    boost::asio::async_connect(socket_, endpoints,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_tcp_client.cpp:    boost::asio::async_read_until(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_tcp_client.cpp:        boost::asio::dynamic_buffer(input_buffer_), '\n',
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_tcp_client.cpp:    boost::asio::async_write(socket_, boost::asio::buffer(data),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_tcp_client.cpp:  boost::asio::io_context io_context_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:    boost::asio::io_context& io_context = socket_.get_executor().context();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:    boost::asio::async_connect(socket, endpoints,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:    boost::asio::async_write(socket, boost::asio::buffer(msg),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:      std::size_t n = boost::asio::async_read_until(socket,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/blocking_token_tcp_client.cpp:          boost::asio::dynamic_buffer(input_buffer), '\n',
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/server.cpp:using boost::asio::steady_timer;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/server.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/server.cpp:    boost::asio::async_read_until(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/server.cpp:        boost::asio::dynamic_buffer(input_buffer_), '\n',
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/server.cpp:    boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/server.cpp:        boost::asio::buffer(output_queue_.front()),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/server.cpp:  udp_broadcaster(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/server.cpp:    socket_.send(boost::asio::buffer(msg), 0, ignored_error);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/server.cpp:  server(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/server.cpp:  boost::asio::io_context& io_context_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timeouts/server.cpp:        boost::asio::ip::make_address(argv[2]), atoi(argv[3]));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/futures/daytime_client.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/futures/daytime_client.cpp:void get_daytime(boost::asio::io_context& io_context, const char* hostname)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/futures/daytime_client.cpp:          boost::asio::use_future);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/futures/daytime_client.cpp:      socket.async_send_to(boost::asio::buffer(send_buf),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/futures/daytime_client.cpp:          boost::asio::use_future);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/futures/daytime_client.cpp:          boost::asio::buffer(recv_buf),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/futures/daytime_client.cpp:          boost::asio::use_future);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/futures/daytime_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/futures/daytime_client.cpp:    auto work = boost::asio::make_work_guard(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/allocation/server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/allocation/server.cpp:    socket_.async_read_some(boost::asio::buffer(data_),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/allocation/server.cpp:    boost::asio::async_write(socket_, boost::asio::buffer(data_, length),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/allocation/server.cpp:  server(boost::asio::io_context& io_context, short port)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/allocation/server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:  // In this example, when the completion token is boost::asio::yield_context
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:  // completion token is boost::asio::use_future it would be std::future<void>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:  -> typename boost::asio::async_result<
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:  // The boost::asio::async_completion object takes the completion token and
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:  boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:  // boost::asio::post operation. The async_write operation is used only for
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:  auto executor = boost::asio::get_associated_executor(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:  // boost::asio::bind_executor function.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:    boost::asio::post(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:        boost::asio::bind_executor(executor,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:            boost::asio::error::invalid_argument)));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:    boost::asio::async_write(socket,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:        boost::asio::buffer(message, length),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:        boost::asio::bind_executor(executor,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_3.cpp:      socket, "", boost::asio::use_future);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:  // In this example, when the completion token is boost::asio::yield_context
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:  // completion token is boost::asio::use_future it would be std::future<void>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:  -> typename boost::asio::async_result<
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:    typename boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:    std::unique_ptr<boost::asio::steady_timer> delay_timer_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:    boost::asio::executor_work_guard<tcp::socket::executor_type> io_work_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:          boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:              boost::asio::buffer(*encoded_message_), std::move(*this));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:    using executor_type = boost::asio::associated_executor_t<
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:      return boost::asio::get_associated_executor(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:    using allocator_type = boost::asio::associated_allocator_t<
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:      return boost::asio::get_associated_allocator(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:  // The boost::asio::async_completion object takes the completion token and
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:  boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:  std::unique_ptr<boost::asio::steady_timer> delay_timer(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:      new boost::asio::steady_timer(socket.get_executor().context()));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:      boost::asio::make_work_guard(socket.get_executor()),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_5.cpp:      socket, "Testing future\r\n", 5, boost::asio::use_future);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_1.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_1.cpp:  // when the completion token is boost::asio::yield_context (used for stackful
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_1.cpp:  // token is boost::asio::use_future it would be std::future<std::size_t>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_1.cpp:  -> typename boost::asio::async_result<
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_1.cpp:  return boost::asio::async_write(socket,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_1.cpp:      boost::asio::buffer(message, std::strlen(message)),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_1.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_1.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_1.cpp:      socket, "Testing future\r\n", boost::asio::use_future);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:  // In this example, when the completion token is boost::asio::yield_context
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:  // completion token is boost::asio::use_future it would be std::future<void>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:  -> typename boost::asio::async_result<
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:    typename boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:    using executor_type = boost::asio::associated_executor_t<
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:      return boost::asio::get_associated_executor(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:    using allocator_type = boost::asio::associated_allocator_t<
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:      return boost::asio::get_associated_allocator(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:  // The boost::asio::async_completion object takes the completion token and
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:  boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:  boost::asio::async_write(socket, boost::asio::buffer(*encoded_message),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_4.cpp:      socket, "Testing future\r\n", boost::asio::use_future);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_2.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_2.cpp:  // In this example, when the completion token is boost::asio::yield_context
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_2.cpp:  // completion token is boost::asio::use_future it would be std::future<void>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_2.cpp:  -> typename boost::asio::async_result<
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_2.cpp:  // The boost::asio::async_completion object takes the completion token and
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_2.cpp:  boost::asio::async_completion<CompletionToken,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_2.cpp:  auto executor = boost::asio::get_associated_executor(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_2.cpp:  // the boost::asio::bind_executor function.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_2.cpp:  boost::asio::async_write(socket,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_2.cpp:      boost::asio::buffer(message, std::strlen(message)),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_2.cpp:      boost::asio::bind_executor(executor,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_2.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_2.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/operations/composed_2.cpp:      socket, "Testing future\r\n", boost::asio::use_future);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/chat/chat_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/chat/chat_client.cpp:  chat_client(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/chat/chat_client.cpp:    boost::asio::post(io_context_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/chat/chat_client.cpp:    boost::asio::post(io_context_, [this]() { socket_.close(); });
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/chat/chat_client.cpp:    boost::asio::async_connect(socket_, endpoints,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/chat/chat_client.cpp:    boost::asio::async_read(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/chat/chat_client.cpp:        boost::asio::buffer(read_msg_.data(), chat_message::header_length),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/chat/chat_client.cpp:    boost::asio::async_read(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/chat/chat_client.cpp:        boost::asio::buffer(read_msg_.body(), read_msg_.body_length()),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/chat/chat_client.cpp:    boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/chat/chat_client.cpp:        boost::asio::buffer(write_msgs_.front().data(),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/chat/chat_client.cpp:  boost::asio::io_context& io_context_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/chat/chat_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/chat/chat_server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/chat/chat_server.cpp:    boost::asio::async_read(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/chat/chat_server.cpp:        boost::asio::buffer(read_msg_.data(), chat_message::header_length),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/chat/chat_server.cpp:    boost::asio::async_read(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/chat/chat_server.cpp:        boost::asio::buffer(read_msg_.body(), read_msg_.body_length()),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/chat/chat_server.cpp:    boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/chat/chat_server.cpp:        boost::asio::buffer(write_msgs_.front().data(),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/chat/chat_server.cpp:  chat_server(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/chat/chat_server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/spawn/parallel_grep.cpp:using boost::asio::dispatch;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/spawn/parallel_grep.cpp:using boost::asio::spawn;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/spawn/parallel_grep.cpp:using boost::asio::strand;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/spawn/parallel_grep.cpp:using boost::asio::thread_pool;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/spawn/parallel_grep.cpp:using boost::asio::yield_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/spawn/echo_server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/spawn/echo_server.cpp:    boost::asio::spawn(strand_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/spawn/echo_server.cpp:        [this, self](boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/spawn/echo_server.cpp:              std::size_t n = socket_.async_read_some(boost::asio::buffer(data), yield);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/spawn/echo_server.cpp:              boost::asio::async_write(socket_, boost::asio::buffer(data, n), yield);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/spawn/echo_server.cpp:    boost::asio::spawn(strand_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/spawn/echo_server.cpp:        [this, self](boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/spawn/echo_server.cpp:  boost::asio::steady_timer timer_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/spawn/echo_server.cpp:  boost::asio::io_context::strand strand_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/spawn/echo_server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/spawn/echo_server.cpp:    boost::asio::spawn(io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/spawn/echo_server.cpp:        [&](boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/ssl/server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/ssl/server.cpp:  session(tcp::socket socket, boost::asio::ssl::context& context)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/ssl/server.cpp:    socket_.async_handshake(boost::asio::ssl::stream_base::server, 
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/ssl/server.cpp:    socket_.async_read_some(boost::asio::buffer(data_),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/ssl/server.cpp:    boost::asio::async_write(socket_, boost::asio::buffer(data_, length),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/ssl/server.cpp:  boost::asio::ssl::stream<tcp::socket> socket_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/ssl/server.cpp:  server(boost::asio::io_context& io_context, unsigned short port)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/ssl/server.cpp:      context_(boost::asio::ssl::context::sslv23)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/ssl/server.cpp:        boost::asio::ssl::context::default_workarounds
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/ssl/server.cpp:        | boost::asio::ssl::context::no_sslv2
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/ssl/server.cpp:        | boost::asio::ssl::context::single_dh_use);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/ssl/server.cpp:    context_.use_private_key_file("server.pem", boost::asio::ssl::context::pem);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/ssl/server.cpp:  boost::asio::ssl::context context_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/ssl/server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/ssl/client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/ssl/client.cpp:  client(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/ssl/client.cpp:      boost::asio::ssl::context& context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/ssl/client.cpp:    socket_.set_verify_mode(boost::asio::ssl::verify_peer);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/ssl/client.cpp:      boost::asio::ssl::verify_context& ctx)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/ssl/client.cpp:    boost::asio::async_connect(socket_.lowest_layer(), endpoints,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/ssl/client.cpp:    socket_.async_handshake(boost::asio::ssl::stream_base::client,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/ssl/client.cpp:    boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/ssl/client.cpp:        boost::asio::buffer(request_, request_length),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/ssl/client.cpp:    boost::asio::async_read(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/ssl/client.cpp:        boost::asio::buffer(reply_, length),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/ssl/client.cpp:  boost::asio::ssl::stream<tcp::socket> socket_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/ssl/client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/ssl/client.cpp:    boost::asio::ssl::context ctx(boost::asio::ssl::context::sslv23);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/echo/async_tcp_echo_server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/echo/async_tcp_echo_server.cpp:    socket_.async_read_some(boost::asio::buffer(data_, max_length),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/echo/async_tcp_echo_server.cpp:    boost::asio::async_write(socket_, boost::asio::buffer(data_, length),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/echo/async_tcp_echo_server.cpp:  server(boost::asio::io_context& io_context, short port)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/echo/async_tcp_echo_server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/echo/blocking_udp_echo_server.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/echo/blocking_udp_echo_server.cpp:void server(boost::asio::io_context& io_context, unsigned short port)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/echo/blocking_udp_echo_server.cpp:        boost::asio::buffer(data, max_length), sender_endpoint);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/echo/blocking_udp_echo_server.cpp:    sock.send_to(boost::asio::buffer(data, length), sender_endpoint);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/echo/blocking_udp_echo_server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/echo/blocking_udp_echo_client.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/echo/blocking_udp_echo_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/echo/blocking_udp_echo_client.cpp:    s.send_to(boost::asio::buffer(request, request_length), *endpoints.begin());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/echo/blocking_udp_echo_client.cpp:        boost::asio::buffer(reply, max_length), sender_endpoint);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/echo/blocking_tcp_echo_server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/echo/blocking_tcp_echo_server.cpp:      size_t length = sock.read_some(boost::asio::buffer(data), error);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/echo/blocking_tcp_echo_server.cpp:      if (error == boost::asio::error::eof)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/echo/blocking_tcp_echo_server.cpp:      boost::asio::write(sock, boost::asio::buffer(data, length));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/echo/blocking_tcp_echo_server.cpp:void server(boost::asio::io_context& io_context, unsigned short port)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/echo/blocking_tcp_echo_server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/echo/async_udp_echo_server.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/echo/async_udp_echo_server.cpp:  server(boost::asio::io_context& io_context, short port)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/echo/async_udp_echo_server.cpp:        boost::asio::buffer(data_, max_length), sender_endpoint_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/echo/async_udp_echo_server.cpp:        boost::asio::buffer(data_, length), sender_endpoint_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/echo/async_udp_echo_server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/echo/blocking_tcp_echo_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/echo/blocking_tcp_echo_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/echo/blocking_tcp_echo_client.cpp:    boost::asio::connect(s, resolver.resolve(argv[1], argv[2]));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/echo/blocking_tcp_echo_client.cpp:    boost::asio::write(s, boost::asio::buffer(request, request_length));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/echo/blocking_tcp_echo_client.cpp:    size_t reply_length = boost::asio::read(s,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/echo/blocking_tcp_echo_client.cpp:        boost::asio::buffer(reply, request_length));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/local/stream_server.cpp:using boost::asio::local::stream_protocol;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/local/stream_server.cpp:    socket_.async_read_some(boost::asio::buffer(data_),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/local/stream_server.cpp:    boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/local/stream_server.cpp:        boost::asio::buffer(data_, length),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/local/stream_server.cpp:  server(boost::asio::io_context& io_context, const std::string& file)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/local/stream_server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/local/stream_client.cpp:using boost::asio::local::stream_protocol;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/local/stream_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/local/stream_client.cpp:    boost::asio::write(s, boost::asio::buffer(request, request_length));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/local/stream_client.cpp:    size_t reply_length = boost::asio::read(s,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/local/stream_client.cpp:        boost::asio::buffer(reply, request_length));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/local/iostream_client.cpp:using boost::asio::local::stream_protocol;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/local/connect_pair.cpp:using boost::asio::local::stream_protocol;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/local/connect_pair.cpp:    socket_.async_read_some(boost::asio::buffer(data_),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/local/connect_pair.cpp:    boost::asio::async_write(socket_, boost::asio::buffer(data_, size),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/local/connect_pair.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/local/connect_pair.cpp:    boost::asio::local::connect_pair(socket, filter_socket);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/local/connect_pair.cpp:      boost::asio::write(socket, boost::asio::buffer(request));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/local/connect_pair.cpp:      boost::asio::read(socket, boost::asio::buffer(reply));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/invocation/prioritised_handlers.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/invocation/prioritised_handlers.cpp:class handler_priority_queue : boost::asio::execution_context
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/invocation/prioritised_handlers.cpp:  boost::asio::executor_binder<Handler, executor>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/invocation/prioritised_handlers.cpp:    return boost::asio::bind_executor(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/invocation/prioritised_handlers.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/invocation/prioritised_handlers.cpp:  boost::asio::post(io_context, pri_queue.wrap(0, low_priority_handler()));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/invocation/prioritised_handlers.cpp:  tcp::endpoint endpoint(boost::asio::ip::address_v4::loopback(), 0);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/invocation/prioritised_handlers.cpp:  boost::asio::steady_timer timer(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/invocation/prioritised_handlers.cpp:  timer.expires_at(boost::asio::steady_timer::clock_type::time_point::min());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/multicast/receiver.cpp:  receiver(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/multicast/receiver.cpp:      const boost::asio::ip::address& listen_address,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/multicast/receiver.cpp:      const boost::asio::ip::address& multicast_address)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/multicast/receiver.cpp:    boost::asio::ip::udp::endpoint listen_endpoint(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/multicast/receiver.cpp:    socket_.set_option(boost::asio::ip::udp::socket::reuse_address(true));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/multicast/receiver.cpp:        boost::asio::ip::multicast::join_group(multicast_address));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/multicast/receiver.cpp:        boost::asio::buffer(data_), sender_endpoint_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/multicast/receiver.cpp:  boost::asio::ip::udp::socket socket_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/multicast/receiver.cpp:  boost::asio::ip::udp::endpoint sender_endpoint_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/multicast/receiver.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/multicast/receiver.cpp:        boost::asio::ip::make_address(argv[1]),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/multicast/receiver.cpp:        boost::asio::ip::make_address(argv[2]));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/multicast/sender.cpp:  sender(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/multicast/sender.cpp:      const boost::asio::ip::address& multicast_address)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/multicast/sender.cpp:        boost::asio::buffer(message_), endpoint_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/multicast/sender.cpp:  boost::asio::ip::udp::endpoint endpoint_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/multicast/sender.cpp:  boost::asio::ip::udp::socket socket_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/multicast/sender.cpp:  boost::asio::steady_timer timer_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/multicast/sender.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/multicast/sender.cpp:    sender s(io_context, boost::asio::ip::make_address(argv[1]));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timers/time_t_timer.cpp:// The boost::asio::basic_waitable_timer template accepts an optional WaitTraits
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timers/time_t_timer.cpp:typedef boost::asio::basic_waitable_timer<
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/timers/time_t_timer.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/executors/fork_join.cpp:using boost::asio::dispatch;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/executors/fork_join.cpp:using boost::asio::execution_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/executors/fork_join.cpp:using boost::asio::thread_pool;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/executors/bank_account_1.cpp:using boost::asio::post;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/executors/bank_account_1.cpp:using boost::asio::thread_pool;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/executors/actor.cpp:using boost::asio::defer;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/executors/actor.cpp:using boost::asio::executor;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/executors/actor.cpp:using boost::asio::post;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/executors/actor.cpp:using boost::asio::strand;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/executors/actor.cpp:using boost::asio::system_executor;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/executors/actor.cpp:using boost::asio::thread_pool;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/executors/priority_scheduler.cpp:using boost::asio::dispatch;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/executors/priority_scheduler.cpp:using boost::asio::execution_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/executors/pipeline.cpp:using boost::asio::execution_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/executors/pipeline.cpp:using boost::asio::executor_binder;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/executors/pipeline.cpp:using boost::asio::get_associated_executor;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/executors/pipeline.cpp:using boost::asio::post;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/executors/pipeline.cpp:using boost::asio::system_executor;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/executors/pipeline.cpp:using boost::asio::use_future;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/executors/pipeline.cpp:using boost::asio::use_service;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/executors/pipeline.cpp:using boost::asio::bind_executor;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/executors/pipeline.cpp:using boost::asio::thread_pool;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/executors/bank_account_2.cpp:using boost::asio::post;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/executors/bank_account_2.cpp:using boost::asio::thread_pool;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/executors/bank_account_2.cpp:using boost::asio::use_future;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/socks4/sync_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/socks4/sync_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/socks4/sync_client.cpp:    boost::asio::connect(socket, endpoints);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/socks4/sync_client.cpp:    boost::asio::write(socket, socks_request.buffers());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/socks4/sync_client.cpp:    boost::asio::read(socket, socks_reply.buffers());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/socks4/sync_client.cpp:    boost::asio::write(socket, boost::asio::buffer(request));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/socks4/sync_client.cpp:          boost::asio::buffer(response), error))
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/socks4/sync_client.cpp:    if (error != boost::asio::error::eof)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:  request(command_type cmd, const boost::asio::ip::tcp::endpoint& endpoint,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:    if (endpoint.protocol() != boost::asio::ip::tcp::v4())
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:          boost::asio::error::address_family_not_supported);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:  std::array<boost::asio::const_buffer, 7> buffers() const
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:        boost::asio::buffer(&version_, 1),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:        boost::asio::buffer(&command_, 1),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:        boost::asio::buffer(&port_high_byte_, 1),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:        boost::asio::buffer(&port_low_byte_, 1),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:        boost::asio::buffer(address_),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:        boost::asio::buffer(user_id_),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:        boost::asio::buffer(&null_byte_, 1)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:  boost::asio::ip::address_v4::bytes_type address_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:  std::array<boost::asio::mutable_buffer, 5> buffers()
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:        boost::asio::buffer(&null_byte_, 1),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:        boost::asio::buffer(&status_, 1),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:        boost::asio::buffer(&port_high_byte_, 1),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:        boost::asio::buffer(&port_low_byte_, 1),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:        boost::asio::buffer(address_)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:  boost::asio::ip::tcp::endpoint endpoint() const
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:    boost::asio::ip::address_v4 address(address_);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:    return boost::asio::ip::tcp::endpoint(address, port);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/socks4/socks4.hpp:  boost::asio::ip::address_v4::bytes_type address_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/handler_tracking/async_tcp_echo_server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/handler_tracking/async_tcp_echo_server.cpp:    socket_.async_read_some(boost::asio::buffer(data_, max_length),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/handler_tracking/async_tcp_echo_server.cpp:    boost::asio::async_write(socket_, boost::asio::buffer(data_, length),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/handler_tracking/async_tcp_echo_server.cpp:  server(boost::asio::io_context& io_context, short port)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/handler_tracking/async_tcp_echo_server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/handler_tracking/custom_tracking.hpp:  static void creation(boost::asio::execution_context& /*ctx*/,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/handler_tracking/custom_tracking.hpp:  static void operation(boost::asio::execution_context& /*ctx*/,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/handler_tracking/custom_tracking.hpp:  static void reactor_registration(boost::asio::execution_context& context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/handler_tracking/custom_tracking.hpp:  static void reactor_deregistration(boost::asio::execution_context& context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/handler_tracking/custom_tracking.hpp:  static void reactor_events(boost::asio::execution_context& context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/reply.hpp:  std::vector<boost::asio::const_buffer> to_buffers();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/server.hpp:  boost::asio::io_context io_context_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/server.hpp:  boost::asio::signal_set signals_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/server.hpp:  boost::asio::ip::tcp::acceptor acceptor_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/server.cpp:  boost::asio::ip::tcp::resolver resolver(io_context_);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/server.cpp:  boost::asio::ip::tcp::endpoint endpoint =
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/server.cpp:  acceptor_.set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/server.cpp:      [this](boost::system::error_code ec, boost::asio::ip::tcp::socket socket)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/connection.hpp:  explicit connection(boost::asio::ip::tcp::socket socket,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/connection.hpp:  boost::asio::ip::tcp::socket socket_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/connection.cpp:connection::connection(boost::asio::ip::tcp::socket socket,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/connection.cpp:  socket_.async_read_some(boost::asio::buffer(buffer_),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/connection.cpp:        else if (ec != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/connection.cpp:  boost::asio::async_write(socket_, reply_.to_buffers(),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/connection.cpp:          socket_.shutdown(boost::asio::ip::tcp::socket::shutdown_both,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/connection.cpp:        if (ec != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:boost::asio::const_buffer to_buffer(reply::status_type status)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:    return boost::asio::buffer(ok);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:    return boost::asio::buffer(created);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:    return boost::asio::buffer(accepted);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:    return boost::asio::buffer(no_content);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:    return boost::asio::buffer(multiple_choices);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:    return boost::asio::buffer(moved_permanently);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:    return boost::asio::buffer(moved_temporarily);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:    return boost::asio::buffer(not_modified);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:    return boost::asio::buffer(bad_request);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:    return boost::asio::buffer(unauthorized);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:    return boost::asio::buffer(forbidden);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:    return boost::asio::buffer(not_found);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:    return boost::asio::buffer(internal_server_error);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:    return boost::asio::buffer(not_implemented);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:    return boost::asio::buffer(bad_gateway);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:    return boost::asio::buffer(service_unavailable);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:    return boost::asio::buffer(internal_server_error);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:std::vector<boost::asio::const_buffer> reply::to_buffers()
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:  std::vector<boost::asio::const_buffer> buffers;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:    buffers.push_back(boost::asio::buffer(h.name));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:    buffers.push_back(boost::asio::buffer(misc_strings::name_value_separator));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:    buffers.push_back(boost::asio::buffer(h.value));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:    buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:  buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp11/http/server/reply.cpp:  buffers.push_back(boost::asio::buffer(content));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/refactored_echo_server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/refactored_echo_server.cpp:using boost::asio::experimental::co_spawn;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/refactored_echo_server.cpp:using boost::asio::experimental::detached;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/refactored_echo_server.cpp:namespace this_coro = boost::asio::experimental::this_coro;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/refactored_echo_server.cpp:  using awaitable = boost::asio::experimental::awaitable<
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/refactored_echo_server.cpp:    T, boost::asio::io_context::executor_type>;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/refactored_echo_server.cpp:  std::size_t n = co_await socket.async_read_some(boost::asio::buffer(data), token);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/refactored_echo_server.cpp:  co_await async_write(socket, boost::asio::buffer(data, n), token);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/refactored_echo_server.cpp:    boost::asio::io_context io_context(1);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/refactored_echo_server.cpp:    boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/chat_server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/chat_server.cpp:using boost::asio::experimental::awaitable;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/chat_server.cpp:using boost::asio::experimental::co_spawn;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/chat_server.cpp:using boost::asio::experimental::detached;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/chat_server.cpp:using boost::asio::experimental::redirect_error;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/chat_server.cpp:namespace this_coro = boost::asio::experimental::this_coro;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/chat_server.cpp:        std::size_t n = co_await boost::asio::async_read_until(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/chat_server.cpp:            boost::asio::dynamic_buffer(read_msg, 1024), "\n", token);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/chat_server.cpp:          co_await boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/chat_server.cpp:              boost::asio::buffer(write_msgs_.front()), token);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/chat_server.cpp:  boost::asio::steady_timer timer_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/chat_server.cpp:    boost::asio::io_context io_context(1);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/chat_server.cpp:    boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server.cpp:using boost::asio::experimental::co_spawn;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server.cpp:using boost::asio::experimental::detached;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server.cpp:namespace this_coro = boost::asio::experimental::this_coro;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server.cpp:  using awaitable = boost::asio::experimental::awaitable<
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server.cpp:    T, boost::asio::io_context::executor_type>;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server.cpp:      std::size_t n = co_await socket.async_read_some(boost::asio::buffer(data), token);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server.cpp:      co_await async_write(socket, boost::asio::buffer(data, n), token);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server.cpp:    boost::asio::io_context io_context(1);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/echo_server.cpp:    boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/double_buffered_echo_server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/double_buffered_echo_server.cpp:using boost::asio::experimental::co_spawn;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/double_buffered_echo_server.cpp:using boost::asio::experimental::detached;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/double_buffered_echo_server.cpp:namespace this_coro = boost::asio::experimental::this_coro;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/double_buffered_echo_server.cpp:  using awaitable = boost::asio::experimental::awaitable<
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/double_buffered_echo_server.cpp:    T, boost::asio::io_context::executor_type>;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/double_buffered_echo_server.cpp:   size_t n = co_await s.async_read_some(boost::asio::buffer(p1, 1024), token);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/double_buffered_echo_server.cpp:     auto write_result = boost::asio::async_write(s, boost::asio::buffer(p2, n), token);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/double_buffered_echo_server.cpp:     n = co_await s.async_read_some(boost::asio::buffer(p1, 1024), token);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/double_buffered_echo_server.cpp:    boost::asio::io_context io_context(1);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/double_buffered_echo_server.cpp:    boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/range_based_for.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/range_based_for.cpp:using boost::asio::experimental::awaitable;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/range_based_for.cpp:using boost::asio::experimental::co_spawn;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/range_based_for.cpp:using boost::asio::experimental::detached;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/range_based_for.cpp:namespace this_coro = boost::asio::experimental::this_coro;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/range_based_for.cpp:    co_await boost::asio::async_write(s, boost::asio::buffer("hello\r\n", 7), token);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/range_based_for.cpp:    boost::asio::io_context io_context(1);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp17/coroutines_ts/range_based_for.cpp:    boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/fork/daemon.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/fork/daemon.cpp:  udp_daytime_server(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/fork/daemon.cpp:        boost::asio::buffer(recv_buffer_), remote_endpoint_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/fork/daemon.cpp:      socket_.send_to(boost::asio::buffer(message),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/fork/daemon.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/fork/daemon.cpp:    boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/fork/daemon.cpp:        boost::bind(&boost::asio::io_context::stop, &io_context));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/fork/daemon.cpp:    io_context.notify_fork(boost::asio::io_context::fork_prepare);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/fork/daemon.cpp:        //   io_context.notify_fork(boost::asio::io_context::fork_parent);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/fork/daemon.cpp:        //   io_context.notify_fork(boost::asio::io_context::fork_prepare);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/fork/daemon.cpp:    io_context.notify_fork(boost::asio::io_context::fork_child);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/fork/process_per_connection.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/fork/process_per_connection.cpp:  server(boost::asio::io_context& io_context, unsigned short port)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/fork/process_per_connection.cpp:      io_context_.notify_fork(boost::asio::io_context::fork_prepare);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/fork/process_per_connection.cpp:        io_context_.notify_fork(boost::asio::io_context::fork_child);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/fork/process_per_connection.cpp:        io_context_.notify_fork(boost::asio::io_context::fork_parent);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/fork/process_per_connection.cpp:    socket_.async_read_some(boost::asio::buffer(data_),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/fork/process_per_connection.cpp:    boost::asio::async_write(socket_, boost::asio::buffer(data_, length),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/fork/process_per_connection.cpp:  boost::asio::io_context& io_context_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/fork/process_per_connection.cpp:  boost::asio::signal_set signal_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/fork/process_per_connection.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/buffers/reference_counted.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/buffers/reference_counted.cpp:      buffer_(boost::asio::buffer(*data_))
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/buffers/reference_counted.cpp:  typedef boost::asio::const_buffer value_type;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/buffers/reference_counted.cpp:  typedef const boost::asio::const_buffer* const_iterator;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/buffers/reference_counted.cpp:  const boost::asio::const_buffer* begin() const { return &buffer_; }
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/buffers/reference_counted.cpp:  const boost::asio::const_buffer* end() const { return &buffer_ + 1; }
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/buffers/reference_counted.cpp:  boost::asio::const_buffer buffer_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/buffers/reference_counted.cpp:  session(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/buffers/reference_counted.cpp:    boost::asio::async_write(socket_, buffer,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/buffers/reference_counted.cpp:  server(boost::asio::io_context& io_context, short port)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/buffers/reference_counted.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/buffers/reference_counted.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/buffers/reference_counted.cpp:  boost::asio::io_context& io_context_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/buffers/reference_counted.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/serialization/server.cpp:  server(boost::asio::io_context& io_context, unsigned short port)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/serialization/server.cpp:        boost::asio::ip::tcp::endpoint(boost::asio::ip::tcp::v4(), port))
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/serialization/server.cpp:          boost::asio::placeholders::error, new_conn));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/serialization/server.cpp:            boost::asio::placeholders::error, conn));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/serialization/server.cpp:          boost::asio::placeholders::error, new_conn));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/serialization/server.cpp:  boost::asio::ip::tcp::acceptor acceptor_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/serialization/server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/serialization/connection.hpp:  connection(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/serialization/connection.hpp:  boost::asio::ip::tcp::socket& socket()
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/serialization/connection.hpp:      boost::system::error_code error(boost::asio::error::invalid_argument);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/serialization/connection.hpp:      boost::asio::post(socket_.get_executor(), boost::bind(handler, error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/serialization/connection.hpp:    std::vector<boost::asio::const_buffer> buffers;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/serialization/connection.hpp:    buffers.push_back(boost::asio::buffer(outbound_header_));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/serialization/connection.hpp:    buffers.push_back(boost::asio::buffer(outbound_data_));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/serialization/connection.hpp:    boost::asio::async_write(socket_, buffers, handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/serialization/connection.hpp:    boost::asio::async_read(socket_, boost::asio::buffer(inbound_header_),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/serialization/connection.hpp:          this, boost::asio::placeholders::error, boost::ref(t),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/serialization/connection.hpp:        boost::system::error_code error(boost::asio::error::invalid_argument);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/serialization/connection.hpp:      boost::asio::async_read(socket_, boost::asio::buffer(inbound_data_),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/serialization/connection.hpp:          boost::asio::placeholders::error, boost::ref(t), handler));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/serialization/connection.hpp:        boost::system::error_code error(boost::asio::error::invalid_argument);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/serialization/connection.hpp:  boost::asio::ip::tcp::socket socket_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/serialization/client.cpp:  client(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/serialization/client.cpp:    boost::asio::ip::tcp::resolver resolver(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/serialization/client.cpp:    boost::asio::ip::tcp::resolver::query query(host, service);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/serialization/client.cpp:    boost::asio::ip::tcp::resolver::iterator endpoint_iterator =
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/serialization/client.cpp:    boost::asio::async_connect(connection_.socket(), endpoint_iterator,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/serialization/client.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/serialization/client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/serialization/client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_udp_client.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_udp_client.cpp:  std::size_t receive(const boost::asio::mutable_buffer& buffer,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_udp_client.cpp:      boost::asio::chrono::steady_clock::duration timeout,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_udp_client.cpp:    socket_.async_receive(boost::asio::buffer(buffer),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_udp_client.cpp:  void run(boost::asio::chrono::steady_clock::duration timeout)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_udp_client.cpp:  boost::asio::io_context io_context_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_udp_client.cpp:        boost::asio::ip::make_address(argv[1]),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_udp_client.cpp:      std::size_t n = c.receive(boost::asio::buffer(data),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_udp_client.cpp:          boost::asio::chrono::seconds(10), ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/async_tcp_client.cpp:using boost::asio::steady_timer;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/async_tcp_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/async_tcp_client.cpp:  client(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/async_tcp_client.cpp:      deadline_.expires_after(boost::asio::chrono::seconds(60));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/async_tcp_client.cpp:    deadline_.expires_after(boost::asio::chrono::seconds(30));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/async_tcp_client.cpp:    boost::asio::async_read_until(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/async_tcp_client.cpp:        boost::asio::dynamic_buffer(input_buffer_), '\n',
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/async_tcp_client.cpp:    boost::asio::async_write(socket_, boost::asio::buffer("\n", 1),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/async_tcp_client.cpp:      heartbeat_timer_.expires_after(boost::asio::chrono::seconds(10));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/async_tcp_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_tcp_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_tcp_client.cpp:      boost::asio::chrono::steady_clock::duration timeout)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_tcp_client.cpp:    boost::asio::async_connect(socket_, endpoints, var(ec) = _1);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_tcp_client.cpp:  std::string read_line(boost::asio::chrono::steady_clock::duration timeout)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_tcp_client.cpp:    boost::asio::async_read_until(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_tcp_client.cpp:        boost::asio::dynamic_buffer(input_buffer_),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_tcp_client.cpp:      boost::asio::chrono::steady_clock::duration timeout)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_tcp_client.cpp:    boost::asio::async_write(socket_, boost::asio::buffer(data), var(ec) = _1);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_tcp_client.cpp:  void run(boost::asio::chrono::steady_clock::duration timeout)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_tcp_client.cpp:  boost::asio::io_context io_context_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_tcp_client.cpp:    c.connect(argv[1], argv[2], boost::asio::chrono::seconds(10));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_tcp_client.cpp:    boost::asio::chrono::steady_clock::time_point time_sent =
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_tcp_client.cpp:      boost::asio::chrono::steady_clock::now();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_tcp_client.cpp:    c.write_line(argv[3], boost::asio::chrono::seconds(10));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_tcp_client.cpp:      std::string line = c.read_line(boost::asio::chrono::seconds(10));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_tcp_client.cpp:    boost::asio::chrono::steady_clock::time_point time_received =
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_tcp_client.cpp:      boost::asio::chrono::steady_clock::now();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_tcp_client.cpp:    std::cout << boost::asio::chrono::duration_cast<
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_tcp_client.cpp:      boost::asio::chrono::microseconds>(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:  close_after(boost::asio::chrono::steady_clock::duration t, tcp::socket& s)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:  boost::asio::chrono::steady_clock::duration timeout_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:    boost::asio::io_context& io_context = socket_.get_executor().context();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:  boost::asio::chrono::steady_clock::duration timeout_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:    boost::asio::async_connect(socket, endpoints,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:        close_after(boost::asio::chrono::seconds(10), socket));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:    boost::asio::chrono::steady_clock::time_point time_sent =
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:      boost::asio::chrono::steady_clock::now();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:    boost::asio::async_write(socket, boost::asio::buffer(msg),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:        close_after(boost::asio::chrono::seconds(10), socket));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:      std::size_t n = boost::asio::async_read_until(socket,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:          boost::asio::dynamic_buffer(input_buffer), '\n',
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:          close_after(boost::asio::chrono::seconds(10), socket));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:    boost::asio::chrono::steady_clock::time_point time_received =
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:      boost::asio::chrono::steady_clock::now();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:    std::cout << boost::asio::chrono::duration_cast<
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/blocking_token_tcp_client.cpp:      boost::asio::chrono::microseconds>(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/server.cpp:using boost::asio::steady_timer;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/server.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/server.cpp:  tcp_session(boost::asio::io_context& io_context, channel& ch)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/server.cpp:    input_deadline_.expires_after(boost::asio::chrono::seconds(30));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/server.cpp:    boost::asio::async_read_until(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/server.cpp:        boost::asio::dynamic_buffer(input_buffer_), '\n',
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/server.cpp:    output_deadline_.expires_after(boost::asio::chrono::seconds(30));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/server.cpp:    boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/server.cpp:        boost::asio::buffer(output_queue_.front()),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/server.cpp:  udp_broadcaster(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/server.cpp:    socket_.send(boost::asio::buffer(msg), 0, ignored_ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/server.cpp:  server(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/server.cpp:  boost::asio::io_context& io_context_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timeouts/server.cpp:        boost::asio::ip::make_address(argv[2]), atoi(argv[3]));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/windows/transmit_file.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/windows/transmit_file.cpp:using boost::asio::windows::overlapped_ptr;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/windows/transmit_file.cpp:using boost::asio::windows::random_access_handle;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/windows/transmit_file.cpp:        boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/windows/transmit_file.cpp:  static pointer create(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/windows/transmit_file.cpp:            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/windows/transmit_file.cpp:            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/windows/transmit_file.cpp:  connection(boost::asio::io_context& io_context, const std::string& filename)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/windows/transmit_file.cpp:  server(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/windows/transmit_file.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/windows/transmit_file.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/allocation/server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/allocation/server.cpp:  session(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/allocation/server.cpp:    socket_.async_read_some(boost::asio::buffer(data_),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/allocation/server.cpp:            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/allocation/server.cpp:            boost::asio::placeholders::bytes_transferred)));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/allocation/server.cpp:      boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/allocation/server.cpp:          boost::asio::buffer(data_, bytes_transferred),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/allocation/server.cpp:              boost::asio::placeholders::error)));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/allocation/server.cpp:      socket_.async_read_some(boost::asio::buffer(data_),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/allocation/server.cpp:              boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/allocation/server.cpp:              boost::asio::placeholders::bytes_transferred)));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/allocation/server.cpp:  server(boost::asio::io_context& io_context, short port)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/allocation/server.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/allocation/server.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/allocation/server.cpp:  boost::asio::io_context& io_context_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/allocation/server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/icmp/ping.cpp:using boost::asio::ip::icmp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/icmp/ping.cpp:using boost::asio::steady_timer;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/icmp/ping.cpp:namespace chrono = boost::asio::chrono;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/icmp/ping.cpp:  pinger(boost::asio::io_context& io_context, const char* destination)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/icmp/ping.cpp:    boost::asio::streambuf request_buffer;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/icmp/ping.cpp:  boost::asio::streambuf reply_buffer_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/icmp/ping.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/icmp/ipv4_header.hpp:  boost::asio::ip::address_v4 source_address() const
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/icmp/ipv4_header.hpp:    boost::asio::ip::address_v4::bytes_type bytes
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/icmp/ipv4_header.hpp:    return boost::asio::ip::address_v4(bytes);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/icmp/ipv4_header.hpp:  boost::asio::ip::address_v4 destination_address() const
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/icmp/ipv4_header.hpp:    boost::asio::ip::address_v4::bytes_type bytes
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/icmp/ipv4_header.hpp:    return boost::asio::ip::address_v4(bytes);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_client.cpp:  chat_client(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_client.cpp:    boost::asio::async_connect(socket_, endpoints,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_client.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_client.cpp:    boost::asio::post(io_context_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_client.cpp:    boost::asio::post(io_context_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_client.cpp:      boost::asio::async_read(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_client.cpp:          boost::asio::buffer(read_msg_.data(), chat_message::header_length),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_client.cpp:      boost::asio::async_read(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_client.cpp:          boost::asio::buffer(read_msg_.body(), read_msg_.body_length()),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_client.cpp:      boost::asio::async_read(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_client.cpp:          boost::asio::buffer(read_msg_.data(), chat_message::header_length),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_client.cpp:      boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_client.cpp:          boost::asio::buffer(write_msgs_.front().data(),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_client.cpp:        boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_client.cpp:            boost::asio::buffer(write_msgs_.front().data(),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_client.cpp:              boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_client.cpp:  boost::asio::io_context& io_context_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_client.cpp:    boost::thread t(boost::bind(&boost::asio::io_context::run, &io_context));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/posix_chat_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/posix_chat_client.cpp:namespace posix = boost::asio::posix;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/posix_chat_client.cpp:  posix_chat_client(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/posix_chat_client.cpp:    boost::asio::async_connect(socket_, endpoints,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/posix_chat_client.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/posix_chat_client.cpp:      boost::asio::async_read(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/posix_chat_client.cpp:          boost::asio::buffer(read_msg_.data(), chat_message::header_length),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/posix_chat_client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/posix_chat_client.cpp:      boost::asio::async_read_until(input_, input_buffer_, '\n',
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/posix_chat_client.cpp:            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/posix_chat_client.cpp:            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/posix_chat_client.cpp:      boost::asio::async_read(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/posix_chat_client.cpp:          boost::asio::buffer(read_msg_.body(), read_msg_.body_length()),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/posix_chat_client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/posix_chat_client.cpp:      boost::array<boost::asio::const_buffer, 2> buffers = {{
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/posix_chat_client.cpp:        boost::asio::buffer(read_msg_.body(), read_msg_.body_length()),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/posix_chat_client.cpp:        boost::asio::buffer(eol) }};
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/posix_chat_client.cpp:      boost::asio::async_write(output_, buffers,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/posix_chat_client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/posix_chat_client.cpp:      boost::asio::async_read(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/posix_chat_client.cpp:          boost::asio::buffer(read_msg_.data(), chat_message::header_length),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/posix_chat_client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/posix_chat_client.cpp:      boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/posix_chat_client.cpp:          boost::asio::buffer(write_msg_.data(), write_msg_.length()),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/posix_chat_client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/posix_chat_client.cpp:    else if (error == boost::asio::error::not_found)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/posix_chat_client.cpp:      boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/posix_chat_client.cpp:          boost::asio::buffer(write_msg_.data(), write_msg_.length()),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/posix_chat_client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/posix_chat_client.cpp:      boost::asio::async_read_until(input_, input_buffer_, '\n',
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/posix_chat_client.cpp:            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/posix_chat_client.cpp:            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/posix_chat_client.cpp:  boost::asio::streambuf input_buffer_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/posix_chat_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_server.cpp:  chat_session(boost::asio::io_context& io_context, chat_room& room)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_server.cpp:    boost::asio::async_read(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_server.cpp:        boost::asio::buffer(read_msg_.data(), chat_message::header_length),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_server.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_server.cpp:      boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_server.cpp:          boost::asio::buffer(write_msgs_.front().data(),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_server.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_server.cpp:      boost::asio::async_read(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_server.cpp:          boost::asio::buffer(read_msg_.body(), read_msg_.body_length()),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_server.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_server.cpp:      boost::asio::async_read(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_server.cpp:          boost::asio::buffer(read_msg_.data(), chat_message::header_length),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_server.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_server.cpp:        boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_server.cpp:            boost::asio::buffer(write_msgs_.front().data(),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_server.cpp:              boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_server.cpp:  chat_server(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_server.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_server.cpp:  boost::asio::io_context& io_context_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/chat/chat_server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/spawn/parallel_grep.cpp:using boost::asio::dispatch;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/spawn/parallel_grep.cpp:using boost::asio::spawn;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/spawn/parallel_grep.cpp:using boost::asio::strand;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/spawn/parallel_grep.cpp:using boost::asio::thread_pool;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/spawn/parallel_grep.cpp:using boost::asio::yield_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/spawn/echo_server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/spawn/echo_server.cpp:  explicit session(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/spawn/echo_server.cpp:    boost::asio::spawn(strand_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/spawn/echo_server.cpp:    boost::asio::spawn(strand_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/spawn/echo_server.cpp:  void echo(boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/spawn/echo_server.cpp:        timer_.expires_after(boost::asio::chrono::seconds(10));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/spawn/echo_server.cpp:        std::size_t n = socket_.async_read_some(boost::asio::buffer(data), yield);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/spawn/echo_server.cpp:        boost::asio::async_write(socket_, boost::asio::buffer(data, n), yield);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/spawn/echo_server.cpp:  void timeout(boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/spawn/echo_server.cpp:      if (timer_.expiry() <= boost::asio::steady_timer::clock_type::now())
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/spawn/echo_server.cpp:  boost::asio::io_context::strand strand_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/spawn/echo_server.cpp:  boost::asio::steady_timer timer_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/spawn/echo_server.cpp:void do_accept(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/spawn/echo_server.cpp:    unsigned short port, boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/spawn/echo_server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/spawn/echo_server.cpp:    boost::asio::spawn(io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/server.cpp:typedef boost::asio::ssl::stream<boost::asio::ip::tcp::socket> ssl_socket;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/server.cpp:  session(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/server.cpp:      boost::asio::ssl::context& context)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/server.cpp:    socket_.async_handshake(boost::asio::ssl::stream_base::server,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/server.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/server.cpp:      socket_.async_read_some(boost::asio::buffer(data_, max_length),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/server.cpp:            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/server.cpp:            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/server.cpp:      boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/server.cpp:          boost::asio::buffer(data_, bytes_transferred),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/server.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/server.cpp:      socket_.async_read_some(boost::asio::buffer(data_, max_length),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/server.cpp:            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/server.cpp:            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/server.cpp:  server(boost::asio::io_context& io_context, unsigned short port)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/server.cpp:          boost::asio::ip::tcp::endpoint(boost::asio::ip::tcp::v4(), port)),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/server.cpp:      context_(boost::asio::ssl::context::sslv23)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/server.cpp:        boost::asio::ssl::context::default_workarounds
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/server.cpp:        | boost::asio::ssl::context::no_sslv2
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/server.cpp:        | boost::asio::ssl::context::single_dh_use);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/server.cpp:    context_.use_private_key_file("server.pem", boost::asio::ssl::context::pem);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/server.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/server.cpp:  boost::asio::io_context& io_context_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/server.cpp:  boost::asio::ip::tcp::acceptor acceptor_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/server.cpp:  boost::asio::ssl::context context_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/client.cpp:  client(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/client.cpp:      boost::asio::ssl::context& context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/client.cpp:      boost::asio::ip::tcp::resolver::results_type endpoints)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/client.cpp:    socket_.set_verify_mode(boost::asio::ssl::verify_peer);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/client.cpp:    boost::asio::async_connect(socket_.lowest_layer(), endpoints,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/client.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/client.cpp:      boost::asio::ssl::verify_context& ctx)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/client.cpp:      socket_.async_handshake(boost::asio::ssl::stream_base::client,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/client.cpp:      boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/client.cpp:          boost::asio::buffer(request_, request_length),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/client.cpp:            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/client.cpp:            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/client.cpp:      boost::asio::async_read(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/client.cpp:          boost::asio::buffer(reply_, bytes_transferred),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/client.cpp:            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/client.cpp:            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/client.cpp:  boost::asio::ssl::stream<boost::asio::ip::tcp::socket> socket_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/client.cpp:    boost::asio::ip::tcp::resolver resolver(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/client.cpp:    boost::asio::ip::tcp::resolver::results_type endpoints =
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/ssl/client.cpp:    boost::asio::ssl::context ctx(boost::asio::ssl::context::sslv23);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/services/logger_service.hpp:  : public boost::asio::io_context::service
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/services/logger_service.hpp:  static boost::asio::io_context::id id;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/services/logger_service.hpp:  logger_service(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/services/logger_service.hpp:    : boost::asio::io_context::service(io_context),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/services/logger_service.hpp:      work_(boost::asio::make_work_guard(work_io_context_)),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/services/logger_service.hpp:            boost::bind(&boost::asio::io_context::run, &work_io_context_)))
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/services/logger_service.hpp:    boost::asio::post(work_io_context_, boost::bind(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/services/logger_service.hpp:    boost::asio::post(work_io_context_, boost::bind(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/services/logger_service.hpp:  boost::asio::io_context work_io_context_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/services/logger_service.hpp:  boost::asio::executor_work_guard<
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/services/logger_service.hpp:      boost::asio::io_context::executor_type> work_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/services/basic_logger.hpp:  explicit basic_logger(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/services/basic_logger.hpp:    : service_(boost::asio::use_service<Service>(io_context)),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/services/basic_logger.hpp:  boost::asio::io_context& get_io_context()
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/services/daytime_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/services/daytime_client.cpp:    s->async_read_some(boost::asio::buffer(read_buffer),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/services/daytime_client.cpp:        boost::bind(read_handler, boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/services/daytime_client.cpp:          boost::asio::placeholders::bytes_transferred, s));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/services/daytime_client.cpp:    s->async_read_some(boost::asio::buffer(read_buffer),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/services/daytime_client.cpp:        boost::bind(read_handler, boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/services/daytime_client.cpp:          boost::asio::placeholders::bytes_transferred, s));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/services/daytime_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/services/daytime_client.cpp:    boost::asio::async_connect(socket, endpoints,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/services/daytime_client.cpp:          boost::asio::placeholders::error, &socket));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/services/logger_service.cpp:boost::asio::io_context::id logger_service::id;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/async_tcp_echo_server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/async_tcp_echo_server.cpp:  session(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/async_tcp_echo_server.cpp:    socket_.async_read_some(boost::asio::buffer(data_, max_length),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/async_tcp_echo_server.cpp:          boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/async_tcp_echo_server.cpp:          boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/async_tcp_echo_server.cpp:      boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/async_tcp_echo_server.cpp:          boost::asio::buffer(data_, bytes_transferred),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/async_tcp_echo_server.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/async_tcp_echo_server.cpp:      socket_.async_read_some(boost::asio::buffer(data_, max_length),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/async_tcp_echo_server.cpp:            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/async_tcp_echo_server.cpp:            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/async_tcp_echo_server.cpp:  server(boost::asio::io_context& io_context, short port)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/async_tcp_echo_server.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/async_tcp_echo_server.cpp:  boost::asio::io_context& io_context_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/async_tcp_echo_server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/blocking_udp_echo_server.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/blocking_udp_echo_server.cpp:void server(boost::asio::io_context& io_context, unsigned short port)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/blocking_udp_echo_server.cpp:        boost::asio::buffer(data, max_length), sender_endpoint);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/blocking_udp_echo_server.cpp:    sock.send_to(boost::asio::buffer(data, length), sender_endpoint);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/blocking_udp_echo_server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/blocking_udp_echo_client.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/blocking_udp_echo_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/blocking_udp_echo_client.cpp:    s.send_to(boost::asio::buffer(request, request_length), *endpoints.begin());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/blocking_udp_echo_client.cpp:        boost::asio::buffer(reply, max_length), sender_endpoint);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/blocking_tcp_echo_server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/blocking_tcp_echo_server.cpp:      size_t length = sock->read_some(boost::asio::buffer(data), error);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/blocking_tcp_echo_server.cpp:      if (error == boost::asio::error::eof)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/blocking_tcp_echo_server.cpp:      boost::asio::write(*sock, boost::asio::buffer(data, length));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/blocking_tcp_echo_server.cpp:void server(boost::asio::io_context& io_context, unsigned short port)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/blocking_tcp_echo_server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/async_udp_echo_server.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/async_udp_echo_server.cpp:  server(boost::asio::io_context& io_context, short port)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/async_udp_echo_server.cpp:        boost::asio::buffer(data_, max_length), sender_endpoint_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/async_udp_echo_server.cpp:          boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/async_udp_echo_server.cpp:          boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/async_udp_echo_server.cpp:          boost::asio::buffer(data_, bytes_recvd), sender_endpoint_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/async_udp_echo_server.cpp:            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/async_udp_echo_server.cpp:            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/async_udp_echo_server.cpp:          boost::asio::buffer(data_, max_length), sender_endpoint_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/async_udp_echo_server.cpp:            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/async_udp_echo_server.cpp:            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/async_udp_echo_server.cpp:        boost::asio::buffer(data_, max_length), sender_endpoint_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/async_udp_echo_server.cpp:          boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/async_udp_echo_server.cpp:          boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/async_udp_echo_server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/blocking_tcp_echo_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/blocking_tcp_echo_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/blocking_tcp_echo_client.cpp:    boost::asio::connect(s, endpoints);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/blocking_tcp_echo_client.cpp:    boost::asio::write(s, boost::asio::buffer(request, request_length));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/blocking_tcp_echo_client.cpp:    size_t reply_length = boost::asio::read(s,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/echo/blocking_tcp_echo_client.cpp:        boost::asio::buffer(reply, request_length));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/stream_server.cpp:using boost::asio::local::stream_protocol;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/stream_server.cpp:  session(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/stream_server.cpp:    socket_.async_read_some(boost::asio::buffer(data_),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/stream_server.cpp:          boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/stream_server.cpp:          boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/stream_server.cpp:      boost::asio::async_write(socket_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/stream_server.cpp:          boost::asio::buffer(data_, bytes_transferred),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/stream_server.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/stream_server.cpp:      socket_.async_read_some(boost::asio::buffer(data_),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/stream_server.cpp:            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/stream_server.cpp:            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/stream_server.cpp:  server(boost::asio::io_context& io_context, const std::string& file)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/stream_server.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/stream_server.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/stream_server.cpp:  boost::asio::io_context& io_context_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/stream_server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/stream_client.cpp:using boost::asio::local::stream_protocol;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/stream_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/stream_client.cpp:    boost::asio::write(s, boost::asio::buffer(request, request_length));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/stream_client.cpp:    size_t reply_length = boost::asio::read(s,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/stream_client.cpp:        boost::asio::buffer(reply, request_length));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/iostream_client.cpp:using boost::asio::local::stream_protocol;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/connect_pair.cpp:using boost::asio::local::stream_protocol;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/connect_pair.cpp:  uppercase_filter(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/connect_pair.cpp:    socket_.async_read_some(boost::asio::buffer(data_),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/connect_pair.cpp:          this, boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/connect_pair.cpp:          boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/connect_pair.cpp:      boost::asio::async_write(socket_, boost::asio::buffer(data_, size),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/connect_pair.cpp:            this, boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/connect_pair.cpp:      socket_.async_read_some(boost::asio::buffer(data_),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/connect_pair.cpp:            this, boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/connect_pair.cpp:            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/connect_pair.cpp:void run(boost::asio::io_context* io_context)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/connect_pair.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/connect_pair.cpp:    boost::asio::local::connect_pair(socket, filter.socket());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/connect_pair.cpp:      boost::asio::write(socket, boost::asio::buffer(request));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/local/connect_pair.cpp:      boost::asio::read(socket, boost::asio::buffer(reply));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/invocation/prioritised_handlers.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/invocation/prioritised_handlers.cpp:class handler_priority_queue : public boost::asio::execution_context
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/invocation/prioritised_handlers.cpp:  boost::asio::executor_binder<Handler, executor>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/invocation/prioritised_handlers.cpp:    return boost::asio::bind_executor(executor(*this, priority), handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/invocation/prioritised_handlers.cpp:  boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/invocation/prioritised_handlers.cpp:  boost::asio::post(io_context, pri_queue.wrap(0, low_priority_handler));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/invocation/prioritised_handlers.cpp:  tcp::endpoint endpoint(boost::asio::ip::address_v4::loopback(), 0);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/invocation/prioritised_handlers.cpp:  boost::asio::steady_timer timer(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/invocation/prioritised_handlers.cpp:  timer.expires_at(boost::asio::steady_timer::time_point::min());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/nonblocking/third_party_lib.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/nonblocking/third_party_lib.cpp:    if (std::size_t len = socket_.read_some(boost::asio::buffer(data_), ec))
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/nonblocking/third_party_lib.cpp:      write_buffer_ = boost::asio::buffer(data_, len);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/nonblocking/third_party_lib.cpp:          boost::asio::buffer(write_buffer_), ec))
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/nonblocking/third_party_lib.cpp:      state_ = boost::asio::buffer_size(write_buffer_) > 0 ? writing : reading;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/nonblocking/third_party_lib.cpp:  boost::asio::const_buffer write_buffer_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/nonblocking/third_party_lib.cpp:  static pointer create(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/nonblocking/third_party_lib.cpp:  connection(boost::asio::io_context& io_context)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/nonblocking/third_party_lib.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/nonblocking/third_party_lib.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/nonblocking/third_party_lib.cpp:    if (!ec || ec == boost::asio::error::would_block)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/nonblocking/third_party_lib.cpp:    if (!ec || ec == boost::asio::error::would_block)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/nonblocking/third_party_lib.cpp:  server(boost::asio::io_context& io_context, unsigned short port)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/nonblocking/third_party_lib.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/nonblocking/third_party_lib.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/multicast/receiver.cpp:  receiver(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/multicast/receiver.cpp:      const boost::asio::ip::address& listen_address,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/multicast/receiver.cpp:      const boost::asio::ip::address& multicast_address)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/multicast/receiver.cpp:    boost::asio::ip::udp::endpoint listen_endpoint(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/multicast/receiver.cpp:    socket_.set_option(boost::asio::ip::udp::socket::reuse_address(true));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/multicast/receiver.cpp:        boost::asio::ip::multicast::join_group(multicast_address));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/multicast/receiver.cpp:        boost::asio::buffer(data_, max_length), sender_endpoint_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/multicast/receiver.cpp:          boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/multicast/receiver.cpp:          boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/multicast/receiver.cpp:          boost::asio::buffer(data_, max_length), sender_endpoint_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/multicast/receiver.cpp:            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/multicast/receiver.cpp:            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/multicast/receiver.cpp:  boost::asio::ip::udp::socket socket_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/multicast/receiver.cpp:  boost::asio::ip::udp::endpoint sender_endpoint_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/multicast/receiver.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/multicast/receiver.cpp:        boost::asio::ip::make_address(argv[1]),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/multicast/receiver.cpp:        boost::asio::ip::make_address(argv[2]));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/multicast/sender.cpp:  sender(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/multicast/sender.cpp:      const boost::asio::ip::address& multicast_address)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/multicast/sender.cpp:        boost::asio::buffer(message_), endpoint_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/multicast/sender.cpp:          boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/multicast/sender.cpp:      timer_.expires_after(boost::asio::chrono::seconds(1));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/multicast/sender.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/multicast/sender.cpp:          boost::asio::buffer(message_), endpoint_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/multicast/sender.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/multicast/sender.cpp:  boost::asio::ip::udp::endpoint endpoint_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/multicast/sender.cpp:  boost::asio::ip::udp::socket socket_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/multicast/sender.cpp:  boost::asio::steady_timer timer_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/multicast/sender.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/multicast/sender.cpp:    sender s(io_context, boost::asio::ip::make_address(argv[1]));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timers/time_t_timer.cpp:  typedef boost::asio::chrono::steady_clock::duration duration;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timers/time_t_timer.cpp:  typedef boost::asio::chrono::time_point<time_t_clock> time_point;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timers/time_t_timer.cpp:    return time_point() + boost::asio::chrono::seconds(std::time(0));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timers/time_t_timer.cpp:// The boost::asio::basic_waitable_timer template accepts an optional WaitTraits
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timers/time_t_timer.cpp:    if (d > boost::asio::chrono::seconds(1))
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timers/time_t_timer.cpp:      return d - boost::asio::chrono::seconds(1);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timers/time_t_timer.cpp:    else if (d > boost::asio::chrono::seconds(0))
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timers/time_t_timer.cpp:      return boost::asio::chrono::milliseconds(10);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timers/time_t_timer.cpp:      return boost::asio::chrono::seconds(0);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timers/time_t_timer.cpp:typedef boost::asio::basic_waitable_timer<
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timers/time_t_timer.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timers/time_t_timer.cpp:    timer.expires_after(boost::asio::chrono::seconds(5));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/timers/time_t_timer.cpp:    timer.expires_after(boost::asio::chrono::seconds(5));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/socks4/sync_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/socks4/sync_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/socks4/sync_client.cpp:    boost::asio::connect(socket, endpoints);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/socks4/sync_client.cpp:    boost::asio::write(socket, socks_request.buffers());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/socks4/sync_client.cpp:    boost::asio::read(socket, socks_reply.buffers());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/socks4/sync_client.cpp:    boost::asio::write(socket, boost::asio::buffer(request));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/socks4/sync_client.cpp:          boost::asio::buffer(response), error))
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/socks4/sync_client.cpp:    if (error != boost::asio::error::eof)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/socks4/socks4.hpp:  request(command_type cmd, const boost::asio::ip::tcp::endpoint& endpoint,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/socks4/socks4.hpp:    if (endpoint.protocol() != boost::asio::ip::tcp::v4())
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/socks4/socks4.hpp:          boost::asio::error::address_family_not_supported);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/socks4/socks4.hpp:  boost::array<boost::asio::const_buffer, 7> buffers() const
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/socks4/socks4.hpp:    boost::array<boost::asio::const_buffer, 7> bufs =
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/socks4/socks4.hpp:        boost::asio::buffer(&version_, 1),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/socks4/socks4.hpp:        boost::asio::buffer(&command_, 1),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/socks4/socks4.hpp:        boost::asio::buffer(&port_high_byte_, 1),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/socks4/socks4.hpp:        boost::asio::buffer(&port_low_byte_, 1),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/socks4/socks4.hpp:        boost::asio::buffer(address_),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/socks4/socks4.hpp:        boost::asio::buffer(user_id_),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/socks4/socks4.hpp:        boost::asio::buffer(&null_byte_, 1)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/socks4/socks4.hpp:  boost::asio::ip::address_v4::bytes_type address_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/socks4/socks4.hpp:  boost::array<boost::asio::mutable_buffer, 5> buffers()
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/socks4/socks4.hpp:    boost::array<boost::asio::mutable_buffer, 5> bufs =
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/socks4/socks4.hpp:        boost::asio::buffer(&null_byte_, 1),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/socks4/socks4.hpp:        boost::asio::buffer(&status_, 1),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/socks4/socks4.hpp:        boost::asio::buffer(&port_high_byte_, 1),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/socks4/socks4.hpp:        boost::asio::buffer(&port_low_byte_, 1),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/socks4/socks4.hpp:        boost::asio::buffer(address_)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/socks4/socks4.hpp:  boost::asio::ip::tcp::endpoint endpoint() const
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/socks4/socks4.hpp:    boost::asio::ip::address_v4 address(address_);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/socks4/socks4.hpp:    return boost::asio::ip::tcp::endpoint(address, port);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/socks4/socks4.hpp:  boost::asio::ip::address_v4::bytes_type address_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/porthopper/protocol.hpp:  boost::array<boost::asio::mutable_buffer, 1> to_buffers()
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/porthopper/protocol.hpp:    boost::array<boost::asio::mutable_buffer, 1> buffers
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/porthopper/protocol.hpp:      = { { boost::asio::buffer(data_) } };
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/porthopper/protocol.hpp:  boost::array<boost::asio::mutable_buffer, 1> to_buffers()
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/porthopper/protocol.hpp:    boost::array<boost::asio::mutable_buffer, 1> buffers
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/porthopper/protocol.hpp:      = { { boost::asio::buffer(data_) } };
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/porthopper/server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/porthopper/server.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/porthopper/server.cpp:typedef boost::shared_ptr<boost::asio::steady_timer> timer_ptr;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/porthopper/server.cpp:  server(boost::asio::io_context& io_context, unsigned short port)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/porthopper/server.cpp:          boost::asio::placeholders::error, new_socket));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/porthopper/server.cpp:    timer_.expires_after(boost::asio::chrono::milliseconds(100));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/porthopper/server.cpp:      boost::asio::async_read(*socket, request->to_buffers(),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/porthopper/server.cpp:            boost::asio::placeholders::error, socket, request));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/porthopper/server.cpp:          boost::asio::placeholders::error, new_socket));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/porthopper/server.cpp:          new boost::asio::steady_timer(acceptor_.get_executor().context()));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/porthopper/server.cpp:      delay_timer->expires_after(boost::asio::chrono::seconds(2));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/porthopper/server.cpp:    boost::asio::async_read(*socket, request->to_buffers(),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/porthopper/server.cpp:          boost::asio::placeholders::error, socket, request));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/porthopper/server.cpp:    timer_.expires_after(boost::asio::chrono::milliseconds(100));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/porthopper/server.cpp:  boost::asio::steady_timer timer_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/porthopper/server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/porthopper/client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/porthopper/client.cpp:using boost::asio::ip::udp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/porthopper/client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/porthopper/client.cpp:    boost::asio::write(control_socket, start.to_buffers());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/porthopper/client.cpp:      boost::asio::async_write(control_socket, change.to_buffers(),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/porthopper/client.cpp:                  lambda::bind(&boost::asio::io_context::stop, &io_context),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/iostreams/daytime_server.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/iostreams/daytime_server.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/iostreams/http_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/iostreams/http_client.cpp:    boost::asio::ip::tcp::iostream s;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/iostreams/http_client.cpp:    s.expires_after(boost::asio::chrono::seconds(60));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/iostreams/daytime_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/client/async_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/client/async_client.cpp:  client(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/client/async_client.cpp:          boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/client/async_client.cpp:          boost::asio::placeholders::results));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/client/async_client.cpp:      boost::asio::async_connect(socket_, endpoints,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/client/async_client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/client/async_client.cpp:      boost::asio::async_write(socket_, request_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/client/async_client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/client/async_client.cpp:      boost::asio::async_read_until(socket_, response_, "\r\n",
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/client/async_client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/client/async_client.cpp:      boost::asio::async_read_until(socket_, response_, "\r\n\r\n",
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/client/async_client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/client/async_client.cpp:      boost::asio::async_read(socket_, response_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/client/async_client.cpp:          boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/client/async_client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/client/async_client.cpp:      boost::asio::async_read(socket_, response_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/client/async_client.cpp:          boost::asio::transfer_at_least(1),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/client/async_client.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/client/async_client.cpp:    else if (err != boost::asio::error::eof)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/client/async_client.cpp:  boost::asio::streambuf request_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/client/async_client.cpp:  boost::asio::streambuf response_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/client/async_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/client/sync_client.cpp:using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/client/sync_client.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/client/sync_client.cpp:    boost::asio::connect(socket, endpoints);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/client/sync_client.cpp:    boost::asio::streambuf request;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/client/sync_client.cpp:    boost::asio::write(socket, request);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/client/sync_client.cpp:    boost::asio::streambuf response;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/client/sync_client.cpp:    boost::asio::read_until(socket, response, "\r\n");
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/client/sync_client.cpp:    boost::asio::read_until(socket, response, "\r\n\r\n");
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/client/sync_client.cpp:    while (boost::asio::read(socket, response,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/client/sync_client.cpp:          boost::asio::transfer_at_least(1), error))
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/client/sync_client.cpp:    if (error != boost::asio::error::eof)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/reply.hpp:  std::vector<boost::asio::const_buffer> to_buffers();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/server.hpp:  boost::asio::io_context io_context_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/server.hpp:  boost::asio::signal_set signals_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/server.hpp:  boost::asio::ip::tcp::acceptor acceptor_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/server.cpp:  boost::asio::ip::tcp::resolver resolver(io_context_);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/server.cpp:  boost::asio::ip::tcp::endpoint endpoint =
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/server.cpp:  acceptor_.set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/server.cpp:          boost::bind(&boost::asio::io_context::run, &io_context_)));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/server.cpp:        boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/connection.hpp:  explicit connection(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/connection.hpp:  boost::asio::ip::tcp::socket& socket();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/connection.hpp:  boost::asio::io_context::strand strand_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/connection.hpp:  boost::asio::ip::tcp::socket socket_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/connection.cpp:connection::connection(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/connection.cpp:boost::asio::ip::tcp::socket& connection::socket()
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/connection.cpp:  socket_.async_read_some(boost::asio::buffer(buffer_),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/connection.cpp:      boost::asio::bind_executor(strand_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/connection.cpp:          boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/connection.cpp:          boost::asio::placeholders::bytes_transferred)));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/connection.cpp:      boost::asio::async_write(socket_, reply_.to_buffers(),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/connection.cpp:          boost::asio::bind_executor(strand_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/connection.cpp:              boost::asio::placeholders::error)));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/connection.cpp:      boost::asio::async_write(socket_, reply_.to_buffers(),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/connection.cpp:          boost::asio::bind_executor(strand_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/connection.cpp:              boost::asio::placeholders::error)));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/connection.cpp:      socket_.async_read_some(boost::asio::buffer(buffer_),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/connection.cpp:          boost::asio::bind_executor(strand_,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/connection.cpp:              boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/connection.cpp:              boost::asio::placeholders::bytes_transferred)));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/connection.cpp:    socket_.shutdown(boost::asio::ip::tcp::socket::shutdown_both, ignored_ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/reply.cpp:boost::asio::const_buffer to_buffer(reply::status_type status)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/reply.cpp:    return boost::asio::buffer(ok);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/reply.cpp:    return boost::asio::buffer(created);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/reply.cpp:    return boost::asio::buffer(accepted);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/reply.cpp:    return boost::asio::buffer(no_content);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/reply.cpp:    return boost::asio::buffer(multiple_choices);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/reply.cpp:    return boost::asio::buffer(moved_permanently);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/reply.cpp:    return boost::asio::buffer(moved_temporarily);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/reply.cpp:    return boost::asio::buffer(not_modified);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/reply.cpp:    return boost::asio::buffer(bad_request);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/reply.cpp:    return boost::asio::buffer(unauthorized);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/reply.cpp:    return boost::asio::buffer(forbidden);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/reply.cpp:    return boost::asio::buffer(not_found);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/reply.cpp:    return boost::asio::buffer(internal_server_error);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/reply.cpp:    return boost::asio::buffer(not_implemented);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/reply.cpp:    return boost::asio::buffer(bad_gateway);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/reply.cpp:    return boost::asio::buffer(service_unavailable);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/reply.cpp:    return boost::asio::buffer(internal_server_error);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/reply.cpp:std::vector<boost::asio::const_buffer> reply::to_buffers()
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/reply.cpp:  std::vector<boost::asio::const_buffer> buffers;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/reply.cpp:    buffers.push_back(boost::asio::buffer(h.name));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/reply.cpp:    buffers.push_back(boost::asio::buffer(misc_strings::name_value_separator));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/reply.cpp:    buffers.push_back(boost::asio::buffer(h.value));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/reply.cpp:    buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/reply.cpp:  buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server3/reply.cpp:  buffers.push_back(boost::asio::buffer(content));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/io_context_pool.hpp:  boost::asio::io_context& get_io_context();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/io_context_pool.hpp:  typedef boost::shared_ptr<boost::asio::io_context> io_context_ptr;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/io_context_pool.hpp:  typedef boost::asio::executor_work_guard<
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/io_context_pool.hpp:    boost::asio::io_context::executor_type> io_context_work;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/reply.hpp:  std::vector<boost::asio::const_buffer> to_buffers();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/server.hpp:  boost::asio::signal_set signals_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/server.hpp:  boost::asio::ip::tcp::acceptor acceptor_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/server.cpp:  boost::asio::ip::tcp::resolver resolver(acceptor_.get_executor().context());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/server.cpp:  boost::asio::ip::tcp::endpoint endpoint =
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/server.cpp:  acceptor_.set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/server.cpp:        boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/connection.hpp:  explicit connection(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/connection.hpp:  boost::asio::ip::tcp::socket& socket();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/connection.hpp:  boost::asio::ip::tcp::socket socket_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/io_context_pool.cpp:    io_context_ptr io_context(new boost::asio::io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/io_context_pool.cpp:    work_.push_back(boost::asio::make_work_guard(*io_context));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/io_context_pool.cpp:          boost::bind(&boost::asio::io_context::run, io_contexts_[i])));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/io_context_pool.cpp:boost::asio::io_context& io_context_pool::get_io_context()
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/io_context_pool.cpp:  boost::asio::io_context& io_context = *io_contexts_[next_io_context_];
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/connection.cpp:connection::connection(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/connection.cpp:boost::asio::ip::tcp::socket& connection::socket()
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/connection.cpp:  socket_.async_read_some(boost::asio::buffer(buffer_),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/connection.cpp:        boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/connection.cpp:        boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/connection.cpp:      boost::asio::async_write(socket_, reply_.to_buffers(),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/connection.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/connection.cpp:      boost::asio::async_write(socket_, reply_.to_buffers(),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/connection.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/connection.cpp:      socket_.async_read_some(boost::asio::buffer(buffer_),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/connection.cpp:            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/connection.cpp:            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/connection.cpp:    socket_.shutdown(boost::asio::ip::tcp::socket::shutdown_both, ignored_ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/reply.cpp:boost::asio::const_buffer to_buffer(reply::status_type status)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/reply.cpp:    return boost::asio::buffer(ok);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/reply.cpp:    return boost::asio::buffer(created);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/reply.cpp:    return boost::asio::buffer(accepted);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/reply.cpp:    return boost::asio::buffer(no_content);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/reply.cpp:    return boost::asio::buffer(multiple_choices);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/reply.cpp:    return boost::asio::buffer(moved_permanently);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/reply.cpp:    return boost::asio::buffer(moved_temporarily);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/reply.cpp:    return boost::asio::buffer(not_modified);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/reply.cpp:    return boost::asio::buffer(bad_request);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/reply.cpp:    return boost::asio::buffer(unauthorized);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/reply.cpp:    return boost::asio::buffer(forbidden);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/reply.cpp:    return boost::asio::buffer(not_found);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/reply.cpp:    return boost::asio::buffer(internal_server_error);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/reply.cpp:    return boost::asio::buffer(not_implemented);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/reply.cpp:    return boost::asio::buffer(bad_gateway);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/reply.cpp:    return boost::asio::buffer(service_unavailable);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/reply.cpp:    return boost::asio::buffer(internal_server_error);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/reply.cpp:std::vector<boost::asio::const_buffer> reply::to_buffers()
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/reply.cpp:  std::vector<boost::asio::const_buffer> buffers;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/reply.cpp:    buffers.push_back(boost::asio::buffer(h.name));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/reply.cpp:    buffers.push_back(boost::asio::buffer(misc_strings::name_value_separator));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/reply.cpp:    buffers.push_back(boost::asio::buffer(h.value));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/reply.cpp:    buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/reply.cpp:  buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server2/reply.cpp:  buffers.push_back(boost::asio::buffer(content));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/reply.hpp:  std::vector<boost::asio::const_buffer> to_buffers();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/server.hpp:  boost::asio::io_context io_context_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/server.hpp:  boost::asio::signal_set signals_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/server.hpp:  boost::asio::ip::tcp::acceptor acceptor_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/server.cpp:  boost::asio::ip::tcp::resolver resolver(io_context_);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/server.cpp:  boost::asio::ip::tcp::endpoint endpoint =
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/server.cpp:  acceptor_.set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/server.cpp:        boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/connection.hpp:  explicit connection(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/connection.hpp:  boost::asio::ip::tcp::socket& socket();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/connection.hpp:  boost::asio::ip::tcp::socket socket_;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/connection.cpp:connection::connection(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/connection.cpp:boost::asio::ip::tcp::socket& connection::socket()
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/connection.cpp:  socket_.async_read_some(boost::asio::buffer(buffer_),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/connection.cpp:        boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/connection.cpp:        boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/connection.cpp:      boost::asio::async_write(socket_, reply_.to_buffers(),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/connection.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/connection.cpp:      boost::asio::async_write(socket_, reply_.to_buffers(),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/connection.cpp:            boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/connection.cpp:      socket_.async_read_some(boost::asio::buffer(buffer_),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/connection.cpp:            boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/connection.cpp:            boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/connection.cpp:  else if (e != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/connection.cpp:    socket_.shutdown(boost::asio::ip::tcp::socket::shutdown_both, ignored_ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/connection.cpp:  if (e != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/reply.cpp:boost::asio::const_buffer to_buffer(reply::status_type status)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/reply.cpp:    return boost::asio::buffer(ok);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/reply.cpp:    return boost::asio::buffer(created);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/reply.cpp:    return boost::asio::buffer(accepted);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/reply.cpp:    return boost::asio::buffer(no_content);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/reply.cpp:    return boost::asio::buffer(multiple_choices);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/reply.cpp:    return boost::asio::buffer(moved_permanently);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/reply.cpp:    return boost::asio::buffer(moved_temporarily);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/reply.cpp:    return boost::asio::buffer(not_modified);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/reply.cpp:    return boost::asio::buffer(bad_request);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/reply.cpp:    return boost::asio::buffer(unauthorized);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/reply.cpp:    return boost::asio::buffer(forbidden);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/reply.cpp:    return boost::asio::buffer(not_found);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/reply.cpp:    return boost::asio::buffer(internal_server_error);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/reply.cpp:    return boost::asio::buffer(not_implemented);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/reply.cpp:    return boost::asio::buffer(bad_gateway);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/reply.cpp:    return boost::asio::buffer(service_unavailable);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/reply.cpp:    return boost::asio::buffer(internal_server_error);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/reply.cpp:std::vector<boost::asio::const_buffer> reply::to_buffers()
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/reply.cpp:  std::vector<boost::asio::const_buffer> buffers;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/reply.cpp:    buffers.push_back(boost::asio::buffer(h.name));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/reply.cpp:    buffers.push_back(boost::asio::buffer(misc_strings::name_value_separator));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/reply.cpp:    buffers.push_back(boost::asio::buffer(h.value));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/reply.cpp:    buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/reply.cpp:  buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server/reply.cpp:  buffers.push_back(boost::asio::buffer(content));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/reply.hpp:  std::vector<boost::asio::const_buffer> to_buffers();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/server.hpp:class server : boost::asio::coroutine
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/server.hpp:  explicit server(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/server.hpp:  typedef boost::asio::ip::tcp tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/server.cpp:server::server(boost::asio::io_context& io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/server.cpp:  boost::asio::ip::tcp::endpoint endpoint =
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/server.cpp:        yield socket_->async_read_some(boost::asio::buffer(*buffer_), *this);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/server.cpp:      yield boost::asio::async_write(*socket_, reply_->to_buffers(), *this);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/main.cpp:    boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/main.cpp:    boost::asio::signal_set signals(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/main.cpp:          &boost::asio::io_context::stop, &io_context));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/reply.cpp:boost::asio::const_buffer to_buffer(reply::status_type status)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/reply.cpp:    return boost::asio::buffer(ok);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/reply.cpp:    return boost::asio::buffer(created);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/reply.cpp:    return boost::asio::buffer(accepted);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/reply.cpp:    return boost::asio::buffer(no_content);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/reply.cpp:    return boost::asio::buffer(multiple_choices);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/reply.cpp:    return boost::asio::buffer(moved_permanently);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/reply.cpp:    return boost::asio::buffer(moved_temporarily);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/reply.cpp:    return boost::asio::buffer(not_modified);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/reply.cpp:    return boost::asio::buffer(bad_request);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/reply.cpp:    return boost::asio::buffer(unauthorized);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/reply.cpp:    return boost::asio::buffer(forbidden);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/reply.cpp:    return boost::asio::buffer(not_found);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/reply.cpp:    return boost::asio::buffer(internal_server_error);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/reply.cpp:    return boost::asio::buffer(not_implemented);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/reply.cpp:    return boost::asio::buffer(bad_gateway);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/reply.cpp:    return boost::asio::buffer(service_unavailable);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/reply.cpp:    return boost::asio::buffer(internal_server_error);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/reply.cpp:std::vector<boost::asio::const_buffer> reply::to_buffers()
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/reply.cpp:  std::vector<boost::asio::const_buffer> buffers;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/reply.cpp:    buffers.push_back(boost::asio::buffer(h.name));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/reply.cpp:    buffers.push_back(boost::asio::buffer(misc_strings::name_value_separator));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/reply.cpp:    buffers.push_back(boost::asio::buffer(h.value));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/reply.cpp:    buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/reply.cpp:  buffers.push_back(boost::asio::buffer(misc_strings::crlf));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/reply.cpp:  buffers.push_back(boost::asio::buffer(content));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/example/cpp03/http/server4/request_parser.hpp:class request_parser : boost::asio::coroutine
/home/kaworu/boost_1_69_0/doc/html/boost_asio/index.html:          boost::asio::error::addrinfo_errors &gt;, <a class="indexterm" href="reference/is_error_code_enum_lt__addrinfo_errors__gt_/value.html">boost::system::is_error_code_enum&lt;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/index.html:        boost::asio::error::addrinfo_errors &gt;::value</a>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/index.html:          boost::asio::error::basic_errors &gt;, <a class="indexterm" href="reference/is_error_code_enum_lt__basic_errors__gt_/value.html">boost::system::is_error_code_enum&lt;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/index.html:        boost::asio::error::basic_errors &gt;::value</a>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/index.html:          boost::asio::error::misc_errors &gt;, <a class="indexterm" href="reference/is_error_code_enum_lt__misc_errors__gt_/value.html">boost::system::is_error_code_enum&lt;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/index.html:        boost::asio::error::misc_errors &gt;::value</a>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/index.html:          boost::asio::error::netdb_errors &gt;, <a class="indexterm" href="reference/is_error_code_enum_lt__netdb_errors__gt_/value.html">boost::system::is_error_code_enum&lt;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/index.html:        boost::asio::error::netdb_errors &gt;::value</a>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/index.html:          boost::asio::error::ssl_errors &gt;, <a class="indexterm" href="reference/is_error_code_enum_lt__ssl_errors__gt_/value.html">boost::system::is_error_code_enum&lt;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/index.html:        boost::asio::error::ssl_errors &gt;::value</a>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/index.html:          boost::asio::ssl::error::stream_errors &gt;, <a class="indexterm" href="reference/is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_/value.html">boost::system::is_error_code_enum&lt;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/index.html:        boost::asio::ssl::error::stream_errors &gt;::value</a>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__multicast__enable_loopback.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__multicast__enable_loopback.html:boost::asio::ip::multicast::enable_loopback option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__multicast__enable_loopback.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__multicast__enable_loopback.html:boost::asio::ip::multicast::enable_loopback option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/MutableBufferSequence.html:                  <code class="computeroutput">boost::asio::buffer_sequence_begin(x)</code><br> <code class="computeroutput">boost::asio::buffer_sequence_end(x)</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/MutableBufferSequence.html:  boost::asio::buffer_sequence_begin(x),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/MutableBufferSequence.html:  boost::asio::buffer_sequence_end(x),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/MutableBufferSequence.html:  boost::asio::buffer_sequence_begin(u),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/MutableBufferSequence.html:  boost::asio::buffer_sequence_end(u),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffer_size.html:auto i = boost::asio::buffer_sequence_begin(buffers);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffer_size.html:auto end = boost::asio::buffer_sequence_end(buffers);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor/async_wait.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor/async_wait.html:boost::asio::posix::stream_descriptor descriptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor/async_wait.html:    boost::asio::posix::stream_descriptor::wait_read,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor/descriptor/overload2.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor/descriptor/overload1.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor/get_io_context.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_context();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor/get_io_service.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_service();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor/release.html:          and the handlers for cancelled operations will be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor/close/overload2.html:            with the <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor/close/overload1.html:            with the <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor/non_blocking/overload2.html:                  fail with <code class="computeroutput">boost::asio::error::would_block</code> if they
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor/non_blocking/overload2.html:            operations. Asynchronous operations will never fail with the error <code class="computeroutput">boost::asio::error::would_block</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor/non_blocking/overload1.html:            with <code class="computeroutput">boost::asio::error::would_block</code> if they are unable
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor/non_blocking/overload1.html:            operations. Asynchronous operations will never fail with the error <code class="computeroutput">boost::asio::error::would_block</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor/non_blocking/overload3.html:                  fail with <code class="computeroutput">boost::asio::error::would_block</code> if they
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor/non_blocking/overload3.html:            operations. Asynchronous operations will never fail with the error <code class="computeroutput">boost::asio::error::would_block</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor/wait/overload2.html:<pre class="programlisting">boost::asio::posix::stream_descriptor descriptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor/wait/overload2.html:descriptor.wait(boost::asio::posix::stream_descriptor::wait_read, ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor/wait/overload1.html:<pre class="programlisting">boost::asio::posix::stream_descriptor descriptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor/wait/overload1.html:descriptor.wait(boost::asio::posix::stream_descriptor::wait_read);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor/cancel/overload2.html:            be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor/cancel/overload1.html:            be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor/native_non_blocking/overload2.html:                  mode and direct system calls may fail with <code class="computeroutput">boost::asio::error::would_block</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor/native_non_blocking/overload2.html:                  this function fails with <code class="computeroutput">boost::asio::error::invalid_argument</code>,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor/native_non_blocking/overload1.html:            and direct system calls may fail with <code class="computeroutput">boost::asio::error::would_block</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor/native_non_blocking/overload3.html:                  mode and direct system calls may fail with <code class="computeroutput">boost::asio::error::would_block</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor/native_non_blocking/overload3.html:                  is <code class="computeroutput">true</code>, this function fails with <code class="computeroutput">boost::asio::error::invalid_argument</code>,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor/descriptor.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor/descriptor.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor/bytes_readable.html:<pre class="programlisting">boost::asio::posix::stream_descriptor descriptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor/bytes_readable.html:boost::asio::descriptor_base::bytes_readable command(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor/io_control/overload2.html:<pre class="programlisting">boost::asio::posix::stream_descriptor descriptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor/io_control/overload2.html:boost::asio::posix::stream_descriptor::bytes_readable command;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor/io_control/overload1.html:<pre class="programlisting">boost::asio::posix::stream_descriptor descriptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor/io_control/overload1.html:boost::asio::posix::stream_descriptor::bytes_readable command;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_streambuf/expires_at/overload2.html:            completed using the internal buffers) will fail with the error <code class="computeroutput">boost::asio::error::operation_aborted</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_streambuf/expires_from_now/overload2.html:            completed using the internal buffers) will fail with the error <code class="computeroutput">boost::asio::error::operation_aborted</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_streambuf/expires_after.html:          the internal buffers) will fail with the error <code class="computeroutput">boost::asio::error::operation_aborted</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_deadline_timer.html:    typename <a class="link" href="TimeTraits.html" title="Time traits requirements">TimeTraits</a> = boost::asio::time_traits&lt;Time&gt;&gt;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_deadline_timer.html:boost::asio::deadline_timer timer(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_deadline_timer.html:boost::asio::deadline_timer timer(io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_deadline_timer.html:  if (e != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_deadline_timer.html:            The <code class="computeroutput">boost::asio::basic_deadline_timer::expires_from_now()</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_deadline_timer.html:            to it contains the value <code class="computeroutput">boost::asio::error::operation_aborted</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/use_future_t.html:        using the special value <code class="computeroutput">boost::asio::use_future</code>. For example:
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/use_future_t.html:  = my_socket.async_read_some(my_buffer, boost::asio::use_future);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/placeholders__results.html:        argument of a handler for asynchronous functions such as boost::asio::basic_resolver::async_resolve.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/connect/overload9.html:                is <code class="computeroutput">boost::asio::error::not_found</code>. Otherwise, contains
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/connect/overload9.html:          types such as <code class="computeroutput">boost::asio::ip::tcp::resolver::iterator</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/connect/overload2.html:                set to <code class="computeroutput">boost::asio::error::not_found</code>. Otherwise, contains
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/connect/overload2.html:boost::asio::connect(s, r.resolve(q), ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/connect/overload8.html:                set to <code class="computeroutput">boost::asio::error::not_found</code>. Otherwise, contains
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/connect/overload8.html:          It would be used with the <code class="computeroutput">boost::asio::connect</code> function as
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/connect/overload8.html:tcp::endpoint e = boost::asio::connect(s,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/connect/overload6.html:                set to <code class="computeroutput">boost::asio::error::not_found</code>. Otherwise, contains
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/connect/overload6.html:boost::asio::connect(s, e.begin(), e.end(), ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/connect/overload1.html:                is <code class="computeroutput">boost::asio::error::not_found</code>. Otherwise, contains
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/connect/overload1.html:boost::asio::connect(s, r.resolve(q));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/connect/overload11.html:                is <code class="computeroutput">boost::asio::error::not_found</code>. Otherwise, contains
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/connect/overload11.html:          It would be used with the <code class="computeroutput">boost::asio::connect</code> function as
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/connect/overload11.html:tcp::resolver::results_type::iterator i = boost::asio::connect(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/connect/overload4.html:                set to <code class="computeroutput">boost::asio::error::not_found</code>. Otherwise, contains
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/connect/overload4.html:          types such as <code class="computeroutput">boost::asio::ip::tcp::resolver::iterator</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/connect/overload5.html:                is <code class="computeroutput">boost::asio::error::not_found</code>. Otherwise, contains
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/connect/overload5.html:boost::asio::connect(s, e.begin(), e.end());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/connect/overload7.html:                is <code class="computeroutput">boost::asio::error::not_found</code>. Otherwise, contains
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/connect/overload7.html:          It would be used with the <code class="computeroutput">boost::asio::connect</code> function as
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/connect/overload7.html:tcp::endpoint e = boost::asio::connect(s,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/connect/overload3.html:                is <code class="computeroutput">boost::asio::error::not_found</code>. Otherwise, contains
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/connect/overload3.html:          types such as <code class="computeroutput">boost::asio::ip::tcp::resolver::iterator</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/connect/overload12.html:                set to <code class="computeroutput">boost::asio::error::not_found</code>. Otherwise, contains
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/connect/overload12.html:          It would be used with the <code class="computeroutput">boost::asio::connect</code> function as
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/connect/overload12.html:tcp::resolver::results_type::iterator i = boost::asio::connect(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/connect/overload10.html:                set to <code class="computeroutput">boost::asio::error::not_found</code>. Otherwise, contains
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/connect/overload10.html:          types such as <code class="computeroutput">boost::asio::ip::tcp::resolver::iterator</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/serial_port/serial_port/overload2.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/serial_port/serial_port/overload1.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/serial_port/serial_port/overload4.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/serial_port/serial_port/overload3.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/serial_port/get_io_context.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_context();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/serial_port/get_io_service.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_service();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/serial_port/async_write_some.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/serial_port/async_write_some.html:<pre class="programlisting">serial_port.async_write_some(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/serial_port/close/overload2.html:            with the <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/serial_port/close/overload1.html:            with the <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/serial_port/serial_port.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/serial_port/serial_port.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/serial_port/serial_port.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/serial_port/serial_port.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/serial_port/read_some/overload1.html:                  Thrown on failure. An error code of <code class="computeroutput">boost::asio::error::eof</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/serial_port/read_some/overload1.html:<pre class="programlisting">serial_port.read_some(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/serial_port/async_read_some.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/serial_port/async_read_some.html:<pre class="programlisting">serial_port.async_read_some(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/serial_port/cancel/overload2.html:            be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/serial_port/cancel/overload1.html:            be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/serial_port/write_some/overload1.html:                  Thrown on failure. An error code of <code class="computeroutput">boost::asio::error::eof</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/serial_port/write_some/overload1.html:<pre class="programlisting">serial_port.write_some(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__netdb_errors__gt_/value.html:<title>boost::system::is_error_code_enum&lt; boost::asio::error::netdb_errors &gt;::value</title>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__netdb_errors__gt_/value.html:<link rel="up" href="../is_error_code_enum_lt__netdb_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::netdb_errors &gt;">
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__netdb_errors__gt_/value.html:<link rel="prev" href="../is_error_code_enum_lt__netdb_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::netdb_errors &gt;">
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__netdb_errors__gt_/value.html:<link rel="next" href="../is_error_code_enum_lt__ssl_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::ssl_errors &gt;">
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__netdb_errors__gt_/value.html:<a name="boost_asio.reference.is_error_code_enum_lt__netdb_errors__gt_.value"></a><a class="link" href="value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::netdb_errors &gt;::value">boost::system::is_error_code_enum&lt;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__netdb_errors__gt_/value.html:        boost::asio::error::netdb_errors &gt;::value</a>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_completion/completion_handler_type.html:<pre class="programlisting">typedef boost::asio::async_result&lt; typename decay&lt; CompletionToken &gt;::type, Signature &gt;::completion_handler_type completion_handler_type;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/write/overload9.html:<pre class="programlisting">boost::asio::write(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/write/overload9.html:    boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/write/overload2.html:<pre class="programlisting">boost::asio::write(s, boost::asio::buffer(data, size), ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/write/overload2.html:<pre class="programlisting">boost::asio::write(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/write/overload2.html:    boost::asio::transfer_all(), ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/write/overload6.html:<pre class="programlisting">boost::asio::write(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/write/overload6.html:    boost::asio::transfer_all(), ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/write/overload1.html:<pre class="programlisting">boost::asio::write(s, boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/write/overload1.html:<pre class="programlisting">boost::asio::write(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/write/overload1.html:    boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/write/overload5.html:<pre class="programlisting">boost::asio::write(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/write/overload5.html:    boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/write/overload3.html:<pre class="programlisting">boost::asio::write(s, boost::asio::buffer(data, size),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/write/overload3.html:    boost::asio::transfer_at_least(32));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/write/overload10.html:<pre class="programlisting">boost::asio::write(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/write/overload10.html:    boost::asio::transfer_all(), ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__addrinfo_errors__gt_.html:<title>boost::system::is_error_code_enum&lt; boost::asio::error::addrinfo_errors &gt;</title>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__addrinfo_errors__gt_.html:<link rel="next" href="is_error_code_enum_lt__addrinfo_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::addrinfo_errors &gt;::value">
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__addrinfo_errors__gt_.html:<a name="boost_asio.reference.is_error_code_enum_lt__addrinfo_errors__gt_"></a><a class="link" href="is_error_code_enum_lt__addrinfo_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::addrinfo_errors &gt;">boost::system::is_error_code_enum&lt;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__addrinfo_errors__gt_.html:      boost::asio::error::addrinfo_errors &gt;</a>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__addrinfo_errors__gt_.html:struct boost::system::is_error_code_enum&lt; boost::asio::error::addrinfo_errors &gt;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__addrinfo_errors__gt_.html:                  <a class="link" href="is_error_code_enum_lt__addrinfo_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::addrinfo_errors &gt;::value"><span class="bold"><strong>value</strong></span></a>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__basic_errors__gt_.html:<title>boost::system::is_error_code_enum&lt; boost::asio::error::basic_errors &gt;</title>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__basic_errors__gt_.html:<link rel="prev" href="is_error_code_enum_lt__addrinfo_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::addrinfo_errors &gt;::value">
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__basic_errors__gt_.html:<link rel="next" href="is_error_code_enum_lt__basic_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::basic_errors &gt;::value">
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__basic_errors__gt_.html:<a name="boost_asio.reference.is_error_code_enum_lt__basic_errors__gt_"></a><a class="link" href="is_error_code_enum_lt__basic_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::basic_errors &gt;">boost::system::is_error_code_enum&lt;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__basic_errors__gt_.html:      boost::asio::error::basic_errors &gt;</a>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__basic_errors__gt_.html:struct boost::system::is_error_code_enum&lt; boost::asio::error::basic_errors &gt;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__basic_errors__gt_.html:                  <a class="link" href="is_error_code_enum_lt__basic_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::basic_errors &gt;::value"><span class="bold"><strong>value</strong></span></a>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__ssl_errors__gt_.html:<title>boost::system::is_error_code_enum&lt; boost::asio::error::ssl_errors &gt;</title>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__ssl_errors__gt_.html:<link rel="prev" href="is_error_code_enum_lt__netdb_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::netdb_errors &gt;::value">
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__ssl_errors__gt_.html:<link rel="next" href="is_error_code_enum_lt__ssl_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::ssl_errors &gt;::value">
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__ssl_errors__gt_.html:<a name="boost_asio.reference.is_error_code_enum_lt__ssl_errors__gt_"></a><a class="link" href="is_error_code_enum_lt__ssl_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::ssl_errors &gt;">boost::system::is_error_code_enum&lt;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__ssl_errors__gt_.html:      boost::asio::error::ssl_errors &gt;</a>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__ssl_errors__gt_.html:struct boost::system::is_error_code_enum&lt; boost::asio::error::ssl_errors &gt;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__ssl_errors__gt_.html:                  <a class="link" href="is_error_code_enum_lt__ssl_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::ssl_errors &gt;::value"><span class="bold"><strong>value</strong></span></a>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_write/overload2.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_write/overload2.html:<pre class="programlisting">boost::asio::async_write(s,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_write/overload2.html:    boost::asio::buffer(data, size),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_write/overload2.html:    boost::asio::transfer_at_least(32),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_write/overload6.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_write/overload1.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_write/overload1.html:<pre class="programlisting">boost::asio::async_write(s, boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_write/overload4.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_write/overload5.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_write/overload3.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffer.html:The <code class="computeroutput">boost::asio::buffer</code> function
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffer.html:<pre class="programlisting">sock.send(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffer.html:        In the above example, the return value of <code class="computeroutput">boost::asio::buffer</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffer.html:size_t bytes_transferred = sock.receive(boost::asio::buffer(d1));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffer.html:bytes_transferred = sock.receive(boost::asio::buffer(d2));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffer.html:bytes_transferred = sock.receive(boost::asio::buffer(d3));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffer.html:bytes_transferred = sock.receive(boost::asio::buffer(d4));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffer.html:<pre class="programlisting">boost::asio::mutable_buffer b1 = ...;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffer.html:boost::asio::const_buffer b2 = ...;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffer.html:vector&lt;unsigned char&gt; data(boost::asio::buffer_size(buffers));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffer.html:boost::asio::buffer_copy(boost::asio::buffer(data), buffers);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffer.html:        For the <code class="computeroutput">boost::asio::buffer</code> overloads that accept an argument
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffer.html:        For the <code class="computeroutput">boost::asio::buffer</code> overloads that accept an argument
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffer.html:<pre class="programlisting">b1 = boost::asio::buffer(a);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffer.html:        optional second argument to the <code class="computeroutput">boost::asio::buffer</code> function
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffer.html:<pre class="programlisting">b2 = boost::asio::buffer(a, 3);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffer.html:<pre class="programlisting">b4 = boost::asio::buffer(b1 + 1, 3);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffer.html:  boost::asio::buffer(d1),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffer.html:  boost::asio::buffer(d2),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffer.html:  boost::asio::buffer(d3) };
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffer.html:bufs2.push_back(boost::asio::buffer(d1));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffer.html:bufs2.push_back(boost::asio::buffer(d2));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffer.html:bufs2.push_back(boost::asio::buffer(d3));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/transfer_exactly.html:std::size_t n = boost::asio::read(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/transfer_exactly.html:    sock, boost::asio::buffer(buf),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/transfer_exactly.html:    boost::asio::transfer_exactly(64), ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__basic_endpoint/address.html:<pre class="programlisting">boost::asio::ip::address <a class="link" href="address/overload1.html" title="ip::basic_endpoint::address (1 of 2 overloads)">address</a>() const;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__basic_endpoint/address.html:    const boost::asio::ip::address &amp; addr);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__basic_endpoint/address/overload2.html:    const boost::asio::ip::address &amp; addr);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__basic_endpoint/address/overload1.html:<pre class="programlisting">boost::asio::ip::address address() const;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__basic_endpoint/basic_endpoint/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::endpoint ep(boost::asio::ip::tcp::v4(), 1234);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__basic_endpoint/basic_endpoint/overload2.html:<pre class="programlisting">boost::asio::ip::udp::endpoint ep(boost::asio::ip::udp::v6(), 9876);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__basic_endpoint/basic_endpoint/overload3.html:    const boost::asio::ip::address &amp; addr,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__basic_endpoint/basic_endpoint.html:    const boost::asio::ip::address &amp; addr,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_context__strand.html:                  <span class="silver"> &#8212;</span><br> (Deprecated: Use boost::asio::dispatch().) Request the strand
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_context__strand.html:                  <span class="silver"> &#8212;</span><br> (Deprecated: Use boost::asio::post().) Request the strand
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_context__strand.html:                  (Deprecated: Use boost::asio::bind_executor().) Create a new handler
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/connect/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/connect/overload2.html:boost::asio::ip::tcp::endpoint endpoint(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/connect/overload2.html:    boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/connect/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/connect/overload1.html:boost::asio::ip::tcp::endpoint endpoint(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/connect/overload1.html:    boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/reuse_address.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/reuse_address.html:boost::asio::socket_base::reuse_address option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/reuse_address.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/reuse_address.html:boost::asio::socket_base::reuse_address option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/basic_seq_packet_socket/overload2.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/basic_seq_packet_socket/overload1.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/basic_seq_packet_socket/overload4.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/basic_seq_packet_socket/overload3.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/async_wait.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/async_wait.html:boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/async_wait.html:socket.async_wait(boost::asio::ip::tcp::socket::wait_read, wait_handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/out_of_band_inline.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/out_of_band_inline.html:boost::asio::socket_base::out_of_band_inline option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/out_of_band_inline.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/out_of_band_inline.html:boost::asio::socket_base::out_of_band_inline option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/keep_alive.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/keep_alive.html:boost::asio::socket_base::keep_alive option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/keep_alive.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/keep_alive.html:boost::asio::socket_base::keep_alive option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/linger.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/linger.html:boost::asio::socket_base::linger option(true, 30);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/linger.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/linger.html:boost::asio::socket_base::linger option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/get_io_context.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_context();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/do_not_route.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/do_not_route.html:boost::asio::socket_base::do_not_route option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/do_not_route.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/do_not_route.html:boost::asio::socket_base::do_not_route option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/async_connect.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/async_connect.html:boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/async_connect.html:boost::asio::ip::tcp::endpoint endpoint(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/async_connect.html:    boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/get_io_service.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_service();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/receive_buffer_size.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/receive_buffer_size.html:boost::asio::socket_base::receive_buffer_size option(8192);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/receive_buffer_size.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/receive_buffer_size.html:boost::asio::socket_base::receive_buffer_size option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/bind/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/bind/overload2.html:socket.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/bind/overload2.html:socket.bind(boost::asio::ip::tcp::endpoint(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/bind/overload2.html:      boost::asio::ip::tcp::v4(), 12345), ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/bind/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/bind/overload1.html:socket.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/bind/overload1.html:socket.bind(boost::asio::ip::tcp::endpoint(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/bind/overload1.html:      boost::asio::ip::tcp::v4(), 12345));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/open/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/open/overload2.html:socket.open(boost::asio::ip::tcp::v4(), ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/open/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/open/overload1.html:socket.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/close/overload2.html:            with the <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/close/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/close/overload1.html:            with the <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/get_option/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/get_option/overload2.html:boost::asio::ip::tcp::socket::keep_alive option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/get_option/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/get_option/overload1.html:boost::asio::ip::tcp::socket::keep_alive option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/local_endpoint/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/local_endpoint/overload2.html:boost::asio::ip::tcp::endpoint endpoint = socket.local_endpoint(ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/local_endpoint/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/local_endpoint/overload1.html:boost::asio::ip::tcp::endpoint endpoint = socket.local_endpoint();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/send_low_watermark.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/send_low_watermark.html:boost::asio::socket_base::send_low_watermark option(1024);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/send_low_watermark.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/send_low_watermark.html:boost::asio::socket_base::send_low_watermark option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/remote_endpoint/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/remote_endpoint/overload2.html:boost::asio::ip::tcp::endpoint endpoint = socket.remote_endpoint(ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/remote_endpoint/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/remote_endpoint/overload1.html:boost::asio::ip::tcp::endpoint endpoint = socket.remote_endpoint();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/async_send.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/async_send.html:<pre class="programlisting">socket.async_send(boost::asio::buffer(data, size), 0, handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/receive_low_watermark.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/receive_low_watermark.html:boost::asio::socket_base::receive_low_watermark option(1024);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/receive_low_watermark.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/receive_low_watermark.html:boost::asio::socket_base::receive_low_watermark option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/non_blocking/overload2.html:                  fail with <code class="computeroutput">boost::asio::error::would_block</code> if they
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/non_blocking/overload2.html:            operations. Asynchronous operations will never fail with the error <code class="computeroutput">boost::asio::error::would_block</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/non_blocking/overload1.html:            <code class="computeroutput">boost::asio::error::would_block</code> if they are unable to perform
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/non_blocking/overload1.html:            operations. Asynchronous operations will never fail with the error <code class="computeroutput">boost::asio::error::would_block</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/non_blocking/overload3.html:                  fail with <code class="computeroutput">boost::asio::error::would_block</code> if they
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/non_blocking/overload3.html:            operations. Asynchronous operations will never fail with the error <code class="computeroutput">boost::asio::error::would_block</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/debug.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/debug.html:boost::asio::socket_base::debug option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/debug.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/debug.html:boost::asio::socket_base::debug option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/wait/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/wait/overload2.html:socket.wait(boost::asio::ip::tcp::socket::wait_read, ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/wait/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/wait/overload1.html:socket.wait(boost::asio::ip::tcp::socket::wait_read);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/send/overload1.html:<pre class="programlisting">socket.send(boost::asio::buffer(data, size), 0);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/set_option/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/set_option/overload2.html:boost::asio::ip::tcp::no_delay option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/set_option/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/set_option/overload1.html:boost::asio::ip::tcp::no_delay option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/cancel/overload2.html:            will be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/cancel/overload2.html:            Calls to <code class="computeroutput">cancel()</code> will always fail with <code class="computeroutput">boost::asio::error::operation_not_supported</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/cancel/overload1.html:            will be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/cancel/overload1.html:            Calls to <code class="computeroutput">cancel()</code> will always fail with <code class="computeroutput">boost::asio::error::operation_not_supported</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/broadcast.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/broadcast.html:boost::asio::socket_base::broadcast option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/broadcast.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/broadcast.html:boost::asio::socket_base::broadcast option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/native_non_blocking/overload2.html:                  mode and direct system calls may fail with <code class="computeroutput">boost::asio::error::would_block</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/native_non_blocking/overload2.html:                  this function fails with <code class="computeroutput">boost::asio::error::invalid_argument</code>,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/native_non_blocking/overload2.html:            boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/native_non_blocking/overload2.html:        if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/native_non_blocking/overload2.html:        if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/native_non_blocking/overload2.html:            || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/native_non_blocking/overload1.html:            direct system calls may fail with <code class="computeroutput">boost::asio::error::would_block</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/native_non_blocking/overload1.html:            boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/native_non_blocking/overload1.html:        if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/native_non_blocking/overload1.html:        if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/native_non_blocking/overload1.html:            || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/native_non_blocking/overload3.html:                  mode and direct system calls may fail with <code class="computeroutput">boost::asio::error::would_block</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/native_non_blocking/overload3.html:                  is <code class="computeroutput">true</code>, this function fails with <code class="computeroutput">boost::asio::error::invalid_argument</code>,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/native_non_blocking/overload3.html:            boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/native_non_blocking/overload3.html:        if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/native_non_blocking/overload3.html:        if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/native_non_blocking/overload3.html:            || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/enable_connection_aborted.html:          operation is permitted to fail with <code class="computeroutput">boost::asio::error::connection_aborted</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/enable_connection_aborted.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/enable_connection_aborted.html:boost::asio::socket_base::enable_connection_aborted option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/enable_connection_aborted.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/enable_connection_aborted.html:boost::asio::socket_base::enable_connection_aborted option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/send_buffer_size.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/send_buffer_size.html:boost::asio::socket_base::send_buffer_size option(8192);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/send_buffer_size.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/send_buffer_size.html:boost::asio::socket_base::send_buffer_size option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/bytes_readable.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/bytes_readable.html:boost::asio::socket_base::bytes_readable command(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/basic_seq_packet_socket.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/basic_seq_packet_socket.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/basic_seq_packet_socket.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/basic_seq_packet_socket.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/io_control/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/io_control/overload2.html:boost::asio::ip::tcp::socket::bytes_readable command;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/io_control/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/io_control/overload1.html:boost::asio::ip::tcp::socket::bytes_readable command;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/shutdown/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/shutdown/overload2.html:socket.shutdown(boost::asio::ip::tcp::socket::shutdown_send, ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/shutdown/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/shutdown/overload1.html:socket.shutdown(boost::asio::ip::tcp::socket::shutdown_send);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/receive/overload2.html:                  Thrown on failure. An error code of <code class="computeroutput">boost::asio::error::eof</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/receive/overload2.html:<pre class="programlisting">socket.receive(boost::asio::buffer(data, size), 0, out_flags);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/receive/overload1.html:                  Thrown on failure. An error code of <code class="computeroutput">boost::asio::error::eof</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/receive/overload1.html:<pre class="programlisting">socket.receive(boost::asio::buffer(data, size), out_flags);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/async_receive/overload2.html:                  to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/async_receive/overload2.html:    boost::asio::buffer(data, size),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/async_receive/overload1.html:                  to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/async_receive/overload1.html:<pre class="programlisting">socket.async_receive(boost::asio::buffer(data, size), out_flags, handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/release/overload2.html:            will be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/release/overload2.html:            and will fail with <code class="computeroutput">boost::asio::error::operation_not_supported</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/release/overload1.html:            will be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_seq_packet_socket/release/overload1.html:            and will fail with <code class="computeroutput">boost::asio::error::operation_not_supported</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_until.html:    boost::asio::basic_streambuf&lt; Allocator &gt; &amp; b,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_until.html:    boost::asio::basic_streambuf&lt; Allocator &gt; &amp; b,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_until.html:    boost::asio::basic_streambuf&lt; Allocator &gt; &amp; b,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_until.html:    boost::asio::basic_streambuf&lt; Allocator &gt; &amp; b,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_context__strand/context.html:<pre class="programlisting">boost::asio::io_context &amp; context() const;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_context__strand/strand.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_context__strand/get_io_context.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_context();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_context__strand/get_io_service.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_service();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/RangeConnectHandler.html:    const boost::asio::ip::tcp::endpoint&amp; endpoint)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/RangeConnectHandler.html:      const boost::asio::ip::tcp::endpoint&amp; endpoint)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/RangeConnectHandler.html:<pre class="programlisting">boost::asio::async_connect(...,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/RangeConnectHandler.html:      const boost::asio::ip::tcp::endpoint&amp; endpoint)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/RangeConnectHandler.html:    const boost::asio::ip::tcp::endpoint&amp; endpoint)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/RangeConnectHandler.html:boost::asio::async_connect(...,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/RangeConnectHandler.html:    const boost::asio::ip::tcp::endpoint&amp; endpoint)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/RangeConnectHandler.html:boost::asio::async_connect(...,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/RangeConnectHandler.html:      this, boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/RangeConnectHandler.html:      boost::asio::placeholders::endpoint));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/dynamic_buffer.html:The <code class="computeroutput">boost::asio::dynamic_buffer</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/connect/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/connect/overload2.html:boost::asio::ip::tcp::endpoint endpoint(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/connect/overload2.html:    boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/connect/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/connect/overload1.html:boost::asio::ip::tcp::endpoint endpoint(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/connect/overload1.html:    boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/async_send/overload2.html:                  to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/async_send/overload2.html:<pre class="programlisting">socket.async_send(boost::asio::buffer(data, size), 0, handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/async_send/overload1.html:                  to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/async_send/overload1.html:<pre class="programlisting">socket.async_send(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/reuse_address.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/reuse_address.html:boost::asio::socket_base::reuse_address option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/reuse_address.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/reuse_address.html:boost::asio::socket_base::reuse_address option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/async_wait.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/async_wait.html:boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/async_wait.html:socket.async_wait(boost::asio::ip::tcp::socket::wait_read, wait_handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/out_of_band_inline.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/out_of_band_inline.html:boost::asio::socket_base::out_of_band_inline option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/out_of_band_inline.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/out_of_band_inline.html:boost::asio::socket_base::out_of_band_inline option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/basic_stream_socket/overload2.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/basic_stream_socket/overload1.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/basic_stream_socket/overload4.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/basic_stream_socket/overload3.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/keep_alive.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/keep_alive.html:boost::asio::socket_base::keep_alive option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/keep_alive.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/keep_alive.html:boost::asio::socket_base::keep_alive option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/linger.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/linger.html:boost::asio::socket_base::linger option(true, 30);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/linger.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/linger.html:boost::asio::socket_base::linger option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/get_io_context.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_context();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/do_not_route.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/do_not_route.html:boost::asio::socket_base::do_not_route option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/do_not_route.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/do_not_route.html:boost::asio::socket_base::do_not_route option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/async_connect.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/async_connect.html:boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/async_connect.html:boost::asio::ip::tcp::endpoint endpoint(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/async_connect.html:    boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/get_io_service.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_service();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/receive_buffer_size.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/receive_buffer_size.html:boost::asio::socket_base::receive_buffer_size option(8192);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/receive_buffer_size.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/receive_buffer_size.html:boost::asio::socket_base::receive_buffer_size option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/bind/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/bind/overload2.html:socket.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/bind/overload2.html:socket.bind(boost::asio::ip::tcp::endpoint(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/bind/overload2.html:      boost::asio::ip::tcp::v4(), 12345), ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/bind/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/bind/overload1.html:socket.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/bind/overload1.html:socket.bind(boost::asio::ip::tcp::endpoint(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/bind/overload1.html:      boost::asio::ip::tcp::v4(), 12345));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/async_write_some.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/async_write_some.html:<pre class="programlisting">socket.async_write_some(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/open/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/open/overload2.html:socket.open(boost::asio::ip::tcp::v4(), ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/open/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/open/overload1.html:socket.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/close/overload2.html:            with the <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/close/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/close/overload1.html:            with the <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/get_option/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/get_option/overload2.html:boost::asio::ip::tcp::socket::keep_alive option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/get_option/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/get_option/overload1.html:boost::asio::ip::tcp::socket::keep_alive option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/local_endpoint/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/local_endpoint/overload2.html:boost::asio::ip::tcp::endpoint endpoint = socket.local_endpoint(ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/local_endpoint/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/local_endpoint/overload1.html:boost::asio::ip::tcp::endpoint endpoint = socket.local_endpoint();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/read_some/overload1.html:                  Thrown on failure. An error code of <code class="computeroutput">boost::asio::error::eof</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/read_some/overload1.html:<pre class="programlisting">socket.read_some(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/send_low_watermark.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/send_low_watermark.html:boost::asio::socket_base::send_low_watermark option(1024);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/send_low_watermark.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/send_low_watermark.html:boost::asio::socket_base::send_low_watermark option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/async_read_some.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/async_read_some.html:<pre class="programlisting">socket.async_read_some(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/remote_endpoint/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/remote_endpoint/overload2.html:boost::asio::ip::tcp::endpoint endpoint = socket.remote_endpoint(ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/remote_endpoint/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/remote_endpoint/overload1.html:boost::asio::ip::tcp::endpoint endpoint = socket.remote_endpoint();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/receive_low_watermark.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/receive_low_watermark.html:boost::asio::socket_base::receive_low_watermark option(1024);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/receive_low_watermark.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/receive_low_watermark.html:boost::asio::socket_base::receive_low_watermark option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/non_blocking/overload2.html:                  fail with <code class="computeroutput">boost::asio::error::would_block</code> if they
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/non_blocking/overload2.html:            operations. Asynchronous operations will never fail with the error <code class="computeroutput">boost::asio::error::would_block</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/non_blocking/overload1.html:            <code class="computeroutput">boost::asio::error::would_block</code> if they are unable to perform
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/non_blocking/overload1.html:            operations. Asynchronous operations will never fail with the error <code class="computeroutput">boost::asio::error::would_block</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/non_blocking/overload3.html:                  fail with <code class="computeroutput">boost::asio::error::would_block</code> if they
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/non_blocking/overload3.html:            operations. Asynchronous operations will never fail with the error <code class="computeroutput">boost::asio::error::would_block</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/debug.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/debug.html:boost::asio::socket_base::debug option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/debug.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/debug.html:boost::asio::socket_base::debug option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/wait/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/wait/overload2.html:socket.wait(boost::asio::ip::tcp::socket::wait_read, ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/wait/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/wait/overload1.html:socket.wait(boost::asio::ip::tcp::socket::wait_read);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/send/overload2.html:<pre class="programlisting">socket.send(boost::asio::buffer(data, size), 0);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/send/overload1.html:<pre class="programlisting">socket.send(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/set_option/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/set_option/overload2.html:boost::asio::ip::tcp::no_delay option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/set_option/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/set_option/overload1.html:boost::asio::ip::tcp::no_delay option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/cancel/overload2.html:            will be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/cancel/overload2.html:            Calls to <code class="computeroutput">cancel()</code> will always fail with <code class="computeroutput">boost::asio::error::operation_not_supported</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/cancel/overload1.html:            will be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/cancel/overload1.html:            Calls to <code class="computeroutput">cancel()</code> will always fail with <code class="computeroutput">boost::asio::error::operation_not_supported</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/write_some/overload1.html:                  Thrown on failure. An error code of <code class="computeroutput">boost::asio::error::eof</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/write_some/overload1.html:<pre class="programlisting">socket.write_some(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/broadcast.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/broadcast.html:boost::asio::socket_base::broadcast option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/broadcast.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/broadcast.html:boost::asio::socket_base::broadcast option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/native_non_blocking/overload2.html:                  mode and direct system calls may fail with <code class="computeroutput">boost::asio::error::would_block</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/native_non_blocking/overload2.html:                  this function fails with <code class="computeroutput">boost::asio::error::invalid_argument</code>,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/native_non_blocking/overload2.html:            boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/native_non_blocking/overload2.html:        if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/native_non_blocking/overload2.html:        if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/native_non_blocking/overload2.html:            || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/native_non_blocking/overload1.html:            direct system calls may fail with <code class="computeroutput">boost::asio::error::would_block</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/native_non_blocking/overload1.html:            boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/native_non_blocking/overload1.html:        if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/native_non_blocking/overload1.html:        if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/native_non_blocking/overload1.html:            || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/native_non_blocking/overload3.html:                  mode and direct system calls may fail with <code class="computeroutput">boost::asio::error::would_block</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/native_non_blocking/overload3.html:                  is <code class="computeroutput">true</code>, this function fails with <code class="computeroutput">boost::asio::error::invalid_argument</code>,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/native_non_blocking/overload3.html:            boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/native_non_blocking/overload3.html:        if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/native_non_blocking/overload3.html:        if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/native_non_blocking/overload3.html:            || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/basic_stream_socket.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/basic_stream_socket.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/basic_stream_socket.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/basic_stream_socket.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/enable_connection_aborted.html:          operation is permitted to fail with <code class="computeroutput">boost::asio::error::connection_aborted</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/enable_connection_aborted.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/enable_connection_aborted.html:boost::asio::socket_base::enable_connection_aborted option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/enable_connection_aborted.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/enable_connection_aborted.html:boost::asio::socket_base::enable_connection_aborted option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/send_buffer_size.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/send_buffer_size.html:boost::asio::socket_base::send_buffer_size option(8192);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/send_buffer_size.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/send_buffer_size.html:boost::asio::socket_base::send_buffer_size option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/bytes_readable.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/bytes_readable.html:boost::asio::socket_base::bytes_readable command(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/io_control/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/io_control/overload2.html:boost::asio::ip::tcp::socket::bytes_readable command;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/io_control/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/io_control/overload1.html:boost::asio::ip::tcp::socket::bytes_readable command;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/shutdown/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/shutdown/overload2.html:socket.shutdown(boost::asio::ip::tcp::socket::shutdown_send, ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/shutdown/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/shutdown/overload1.html:socket.shutdown(boost::asio::ip::tcp::socket::shutdown_send);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/receive/overload2.html:                  Thrown on failure. An error code of <code class="computeroutput">boost::asio::error::eof</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/receive/overload2.html:<pre class="programlisting">socket.receive(boost::asio::buffer(data, size), 0);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/receive/overload1.html:                  Thrown on failure. An error code of <code class="computeroutput">boost::asio::error::eof</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/receive/overload1.html:<pre class="programlisting">socket.receive(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/async_receive/overload2.html:                  to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/async_receive/overload2.html:<pre class="programlisting">socket.async_receive(boost::asio::buffer(data, size), 0, handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/async_receive/overload1.html:                  to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/async_receive/overload1.html:<pre class="programlisting">socket.async_receive(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/release/overload2.html:            will be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/release/overload2.html:            and will fail with <code class="computeroutput">boost::asio::error::operation_not_supported</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/release/overload1.html:            will be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_stream_socket/release/overload1.html:            and will fail with <code class="computeroutput">boost::asio::error::operation_not_supported</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_service.html:                  (Deprecated: Use boost::asio::dispatch().) Request the io_context
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_service.html:                  (Deprecated: Use boost::asio::post().) Request the io_context to
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_service.html:                  (Deprecated: Use boost::asio::bind_executor().) Create a new handler
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_service.html:            <code class="computeroutput">boost::asio::ip::tcp::socket</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_service.html:            <code class="computeroutput">boost::asio::ip::tcp::acceptor</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_service.html:            <code class="computeroutput">boost::asio::ip::udp::socket</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_service.html:<pre class="programlisting">boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_service.html:boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_service.html:boost::asio::post(io_context, my_task);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_service.html:boost::asio::post(io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_service.html:        by creating an object of type boost::asio::executor_work_guard&lt;io_context::executor_type&gt;:
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_service.html:<pre class="programlisting">boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_service.html:boost::asio::executor_work_guard&lt;boost::asio::io_context::executor_type&gt;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_service.html:  = boost::asio::make_work_guard(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_service.html:<pre class="programlisting">boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_service.html:boost::asio::executor_work_guard&lt;boost::asio::io_context::executor_type&gt;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_service.html:  = boost::asio::make_work_guard(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__basic_resolver/basic_resolver/overload1.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__basic_resolver/get_io_context.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_context();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__basic_resolver/get_io_service.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_service();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__basic_resolver/basic_resolver.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__basic_resolver/async_resolve/overload2.html:                  to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__basic_resolver/async_resolve/overload6.html:                  to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__basic_resolver/async_resolve/overload1.html:                  to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__basic_resolver/async_resolve/overload4.html:                  to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__basic_resolver/async_resolve/overload5.html:                  to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__basic_resolver/async_resolve/overload3.html:                  to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__basic_resolver/cancel.html:          invoked with the <code class="computeroutput">boost::asio::error::operation_aborted</code> error
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/generic__stream_protocol.html:<pre class="programlisting">stream_protocol p(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/execution_context/make_service.html:<dt><span class="term">boost::asio::service_already_exists</span></dt>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/execution_context/add_service.html:<dt><span class="term">boost::asio::service_already_exists</span></dt>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/execution_context/add_service.html:<dt><span class="term">boost::asio::invalid_service_owner</span></dt>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__overlapped_ptr/reset.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__overlapped_ptr/overlapped_ptr.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__overlapped_ptr/reset/overload2.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__overlapped_ptr/overlapped_ptr/overload2.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor.html:boost::asio::ip::tcp::endpoint endpoint(boost::asio::ip::tcp::v4(), port);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor.html:acceptor.set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/connect/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/connect/overload2.html:boost::asio::ip::tcp::endpoint endpoint(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/connect/overload2.html:    boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/connect/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/connect/overload1.html:boost::asio::ip::tcp::endpoint endpoint(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/connect/overload1.html:    boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/reuse_address.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/reuse_address.html:boost::asio::socket_base::reuse_address option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/reuse_address.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/reuse_address.html:boost::asio::socket_base::reuse_address option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/async_wait.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/async_wait.html:boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/async_wait.html:socket.async_wait(boost::asio::ip::tcp::socket::wait_read, wait_handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/out_of_band_inline.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/out_of_band_inline.html:boost::asio::socket_base::out_of_band_inline option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/out_of_band_inline.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/out_of_band_inline.html:boost::asio::socket_base::out_of_band_inline option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/keep_alive.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/keep_alive.html:boost::asio::socket_base::keep_alive option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/keep_alive.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/keep_alive.html:boost::asio::socket_base::keep_alive option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/basic_socket/overload2.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/basic_socket/overload1.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/basic_socket/overload4.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/basic_socket/overload3.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/linger.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/linger.html:boost::asio::socket_base::linger option(true, 30);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/linger.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/linger.html:boost::asio::socket_base::linger option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/get_io_context.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_context();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/do_not_route.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/do_not_route.html:boost::asio::socket_base::do_not_route option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/do_not_route.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/do_not_route.html:boost::asio::socket_base::do_not_route option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/async_connect.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/async_connect.html:boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/async_connect.html:boost::asio::ip::tcp::endpoint endpoint(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/async_connect.html:    boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/get_io_service.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_service();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/receive_buffer_size.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/receive_buffer_size.html:boost::asio::socket_base::receive_buffer_size option(8192);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/receive_buffer_size.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/receive_buffer_size.html:boost::asio::socket_base::receive_buffer_size option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/bind/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/bind/overload2.html:socket.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/bind/overload2.html:socket.bind(boost::asio::ip::tcp::endpoint(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/bind/overload2.html:      boost::asio::ip::tcp::v4(), 12345), ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/bind/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/bind/overload1.html:socket.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/bind/overload1.html:socket.bind(boost::asio::ip::tcp::endpoint(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/bind/overload1.html:      boost::asio::ip::tcp::v4(), 12345));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/open/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/open/overload2.html:socket.open(boost::asio::ip::tcp::v4(), ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/open/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/open/overload1.html:socket.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/close/overload2.html:            with the <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/close/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/close/overload1.html:            with the <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/get_option/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/get_option/overload2.html:boost::asio::ip::tcp::socket::keep_alive option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/get_option/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/get_option/overload1.html:boost::asio::ip::tcp::socket::keep_alive option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/local_endpoint/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/local_endpoint/overload2.html:boost::asio::ip::tcp::endpoint endpoint = socket.local_endpoint(ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/local_endpoint/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/local_endpoint/overload1.html:boost::asio::ip::tcp::endpoint endpoint = socket.local_endpoint();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/send_low_watermark.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/send_low_watermark.html:boost::asio::socket_base::send_low_watermark option(1024);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/send_low_watermark.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/send_low_watermark.html:boost::asio::socket_base::send_low_watermark option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/remote_endpoint/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/remote_endpoint/overload2.html:boost::asio::ip::tcp::endpoint endpoint = socket.remote_endpoint(ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/remote_endpoint/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/remote_endpoint/overload1.html:boost::asio::ip::tcp::endpoint endpoint = socket.remote_endpoint();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/receive_low_watermark.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/receive_low_watermark.html:boost::asio::socket_base::receive_low_watermark option(1024);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/receive_low_watermark.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/receive_low_watermark.html:boost::asio::socket_base::receive_low_watermark option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/non_blocking/overload2.html:                  fail with <code class="computeroutput">boost::asio::error::would_block</code> if they
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/non_blocking/overload2.html:            operations. Asynchronous operations will never fail with the error <code class="computeroutput">boost::asio::error::would_block</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/non_blocking/overload1.html:            <code class="computeroutput">boost::asio::error::would_block</code> if they are unable to perform
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/non_blocking/overload1.html:            operations. Asynchronous operations will never fail with the error <code class="computeroutput">boost::asio::error::would_block</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/non_blocking/overload3.html:                  fail with <code class="computeroutput">boost::asio::error::would_block</code> if they
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/non_blocking/overload3.html:            operations. Asynchronous operations will never fail with the error <code class="computeroutput">boost::asio::error::would_block</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/debug.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/debug.html:boost::asio::socket_base::debug option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/debug.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/debug.html:boost::asio::socket_base::debug option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/wait/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/wait/overload2.html:socket.wait(boost::asio::ip::tcp::socket::wait_read, ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/wait/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/wait/overload1.html:socket.wait(boost::asio::ip::tcp::socket::wait_read);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/set_option/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/set_option/overload2.html:boost::asio::ip::tcp::no_delay option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/set_option/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/set_option/overload1.html:boost::asio::ip::tcp::no_delay option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/cancel/overload2.html:            will be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/cancel/overload2.html:            Calls to <code class="computeroutput">cancel()</code> will always fail with <code class="computeroutput">boost::asio::error::operation_not_supported</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/cancel/overload1.html:            will be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/cancel/overload1.html:            Calls to <code class="computeroutput">cancel()</code> will always fail with <code class="computeroutput">boost::asio::error::operation_not_supported</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/basic_socket.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/basic_socket.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/basic_socket.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/basic_socket.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/broadcast.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/broadcast.html:boost::asio::socket_base::broadcast option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/broadcast.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/broadcast.html:boost::asio::socket_base::broadcast option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/native_non_blocking/overload2.html:                  mode and direct system calls may fail with <code class="computeroutput">boost::asio::error::would_block</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/native_non_blocking/overload2.html:                  this function fails with <code class="computeroutput">boost::asio::error::invalid_argument</code>,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/native_non_blocking/overload2.html:            boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/native_non_blocking/overload2.html:        if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/native_non_blocking/overload2.html:        if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/native_non_blocking/overload2.html:            || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/native_non_blocking/overload1.html:            direct system calls may fail with <code class="computeroutput">boost::asio::error::would_block</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/native_non_blocking/overload1.html:            boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/native_non_blocking/overload1.html:        if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/native_non_blocking/overload1.html:        if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/native_non_blocking/overload1.html:            || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/native_non_blocking/overload3.html:                  mode and direct system calls may fail with <code class="computeroutput">boost::asio::error::would_block</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/native_non_blocking/overload3.html:                  is <code class="computeroutput">true</code>, this function fails with <code class="computeroutput">boost::asio::error::invalid_argument</code>,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/native_non_blocking/overload3.html:            boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/native_non_blocking/overload3.html:        if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/native_non_blocking/overload3.html:        if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/native_non_blocking/overload3.html:            || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/enable_connection_aborted.html:          operation is permitted to fail with <code class="computeroutput">boost::asio::error::connection_aborted</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/enable_connection_aborted.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/enable_connection_aborted.html:boost::asio::socket_base::enable_connection_aborted option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/enable_connection_aborted.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/enable_connection_aborted.html:boost::asio::socket_base::enable_connection_aborted option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/send_buffer_size.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/send_buffer_size.html:boost::asio::socket_base::send_buffer_size option(8192);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/send_buffer_size.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/send_buffer_size.html:boost::asio::socket_base::send_buffer_size option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/bytes_readable.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/bytes_readable.html:boost::asio::socket_base::bytes_readable command(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/io_control/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/io_control/overload2.html:boost::asio::ip::tcp::socket::bytes_readable command;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/io_control/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/io_control/overload1.html:boost::asio::ip::tcp::socket::bytes_readable command;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/shutdown/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/shutdown/overload2.html:socket.shutdown(boost::asio::ip::tcp::socket::shutdown_send, ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/shutdown/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/shutdown/overload1.html:socket.shutdown(boost::asio::ip::tcp::socket::shutdown_send);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/release/overload2.html:            will be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/release/overload2.html:            and will fail with <code class="computeroutput">boost::asio::error::operation_not_supported</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/release/overload1.html:            will be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket/release/overload1.html:            and will fail with <code class="computeroutput">boost::asio::error::operation_not_supported</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/dynamic_vector_buffer/const_buffers_type.html:<pre class="programlisting">boost::asio::const_buffer b1 = ...;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/dynamic_vector_buffer/mutable_buffers_type.html:<pre class="programlisting">boost::asio::mutable_buffer b1 = ...;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_at/overload2.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_at/overload2.html:<pre class="programlisting">boost::asio::async_read_at(d, 42,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_at/overload2.html:    boost::asio::buffer(data, size),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_at/overload2.html:    boost::asio::transfer_at_least(32),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_at/overload1.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_at/overload1.html:<pre class="programlisting">boost::asio::async_read_at(d, 42, boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_at/overload1.html:<pre class="programlisting">boost::asio::async_read_at(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_at/overload1.html:    boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_at/overload4.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_at/overload3.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_at/overload3.html:<pre class="programlisting">boost::asio::async_read_at(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_at/overload3.html:    boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__ssl_errors__gt_/value.html:<title>boost::system::is_error_code_enum&lt; boost::asio::error::ssl_errors &gt;::value</title>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__ssl_errors__gt_/value.html:<link rel="up" href="../is_error_code_enum_lt__ssl_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::ssl_errors &gt;">
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__ssl_errors__gt_/value.html:<link rel="prev" href="../is_error_code_enum_lt__ssl_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::ssl_errors &gt;">
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__ssl_errors__gt_/value.html:<link rel="next" href="../is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::ssl::error::stream_errors &gt;">
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__ssl_errors__gt_/value.html:<a name="boost_asio.reference.is_error_code_enum_lt__ssl_errors__gt_.value"></a><a class="link" href="value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::ssl_errors &gt;::value">boost::system::is_error_code_enum&lt;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__ssl_errors__gt_/value.html:        boost::asio::error::ssl_errors &gt;::value</a>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read/overload9.html:<pre class="programlisting">boost::asio::read(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read/overload9.html:    boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read/overload2.html:<pre class="programlisting">boost::asio::read(s, boost::asio::buffer(data, size), ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read/overload2.html:<pre class="programlisting">boost::asio::read(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read/overload2.html:    boost::asio::transfer_all(), ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read/overload6.html:<pre class="programlisting">boost::asio::read(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read/overload6.html:    boost::asio::transfer_all(), ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read/overload1.html:<pre class="programlisting">boost::asio::read(s, boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read/overload1.html:<pre class="programlisting">boost::asio::read(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read/overload1.html:    boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read/overload5.html:<pre class="programlisting">boost::asio::read(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read/overload5.html:    boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read/overload3.html:<pre class="programlisting">boost::asio::read(s, boost::asio::buffer(data, size),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read/overload3.html:    boost::asio::transfer_at_least(32));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read/overload10.html:<pre class="programlisting">boost::asio::read(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read/overload10.html:    boost::asio::transfer_all(), ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__multicast__leave_group.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__multicast__leave_group.html:boost::asio::ip::address multicast_address =
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__multicast__leave_group.html:  boost::asio::ip::address::from_string("225.0.0.1");
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__multicast__leave_group.html:boost::asio::ip::multicast::leave_group option(multicast_address);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/deadline_timer.html:boost::asio::deadline_timer timer(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/deadline_timer.html:boost::asio::deadline_timer timer(io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/deadline_timer.html:  if (e != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/deadline_timer.html:            The <code class="computeroutput">boost::asio::basic_deadline_timer::expires_from_now()</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/deadline_timer.html:            to it contains the value <code class="computeroutput">boost::asio::error::operation_aborted</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/spawn.html:    const boost::asio::io_context::strand &amp; s,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/spawn.html:<pre class="programlisting">boost::asio::spawn(my_strand, do_echo);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/spawn.html:void do_echo(boost::asio::yield_context yield)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/spawn.html:          boost::asio::buffer(data), yield);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/spawn.html:      boost::asio::async_write(my_socket,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/spawn.html:          boost::asio::buffer(data, length), yield);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/null_buffers/value_type.html:<pre class="programlisting">boost::asio::mutable_buffer b1 = ...;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/error__misc_category.html:<pre class="programlisting">static const boost::system::error_category &amp; misc_category = boost::asio::error::get_misc_category();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/AcceptHandler.html:      this, boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/placeholders__endpoint.html:        argument of a handler for asynchronous functions such as <code class="computeroutput">boost::asio::async_connect</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffer_cast.html:        member function.) The <code class="computeroutput">boost::asio::buffer_cast</code> function is used
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffer_cast.html:<pre class="programlisting">boost::asio::const_buffer b1 = ...;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffer_cast.html:const unsigned char* p1 = boost::asio::buffer_cast&lt;const unsigned char*&gt;(b1);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffer_cast.html:<pre class="programlisting">boost::asio::mutable_buffer b2 = ...;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffer_cast.html:unsigned char* p2 = boost::asio::buffer_cast&lt;unsigned char*&gt;(b2);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffer_cast.html:        The <code class="computeroutput">boost::asio::buffer_cast</code> function permits violations of
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/placeholders__signal_number.html:        signal_number argument of a handler for asynchronous functions such as <code class="computeroutput">boost::asio::signal_set::async_wait</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__v6_only.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__v6_only.html:boost::asio::ip::v6_only option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__v6_only.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__v6_only.html:boost::asio::ip::v6_only option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/signal_set/async_wait.html:              error code <code class="computeroutput">boost::asio::error::operation_aborted</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/signal_set/async_wait.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/signal_set/get_io_context.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_context();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/signal_set/signal_set/overload2.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/signal_set/signal_set/overload2.html:<pre class="programlisting">boost::asio::signal_set signals(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/signal_set/signal_set/overload1.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/signal_set/signal_set/overload4.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/signal_set/signal_set/overload4.html:<pre class="programlisting">boost::asio::signal_set signals(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/signal_set/signal_set/overload3.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/signal_set/signal_set/overload3.html:<pre class="programlisting">boost::asio::signal_set signals(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/signal_set/get_io_service.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_service();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/signal_set/cancel/overload2.html:            will be invoked with the <code class="computeroutput">boost::asio::error::operation_aborted</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/signal_set/cancel/overload1.html:            will be invoked with the <code class="computeroutput">boost::asio::error::operation_aborted</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/signal_set/signal_set.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/signal_set/signal_set.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/signal_set/signal_set.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/signal_set/signal_set.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_/value.html:<title>boost::system::is_error_code_enum&lt; boost::asio::ssl::error::stream_errors &gt;::value</title>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_/value.html:<link rel="up" href="../is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::ssl::error::stream_errors &gt;">
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_/value.html:<link rel="prev" href="../is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::ssl::error::stream_errors &gt;">
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_/value.html:<a name="boost_asio.reference.is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_.value"></a><a class="link" href="value.html" title="boost::system::is_error_code_enum&lt; boost::asio::ssl::error::stream_errors &gt;::value">boost::system::is_error_code_enum&lt;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_/value.html:        boost::asio::ssl::error::stream_errors &gt;::value</a>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/experimental__detached_t.html:        using the special value <code class="computeroutput">boost::asio::experimental::detached</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/experimental__detached_t.html:<pre class="programlisting">my_socket.async_send(my_buffer, boost::asio::experimental::detached);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__unicast__hops.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__unicast__hops.html:boost::asio::ip::unicast::hops option(4);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__unicast__hops.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__unicast__hops.html:boost::asio::ip::unicast::hops option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/const_buffers_1/value_type.html:<pre class="programlisting">boost::asio::const_buffer b1 = ...;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_streambuf.html:<pre class="programlisting">boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_streambuf.html:<pre class="programlisting">boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_streambuf.html:boost::asio::streambuf::mutable_buffers_type bufs = b.prepare(512);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_waitable_timer/async_wait.html:              code <code class="computeroutput">boost::asio::error::operation_aborted</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_waitable_timer/async_wait.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_waitable_timer/get_io_context.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_context();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_waitable_timer/get_io_service.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_service();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_waitable_timer/basic_waitable_timer/overload2.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_waitable_timer/basic_waitable_timer/overload1.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_waitable_timer/basic_waitable_timer/overload3.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_waitable_timer/expires_at/overload2.html:            with the <code class="computeroutput">boost::asio::error::operation_aborted</code> error code.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_waitable_timer/expires_at/overload3.html:            with the <code class="computeroutput">boost::asio::error::operation_aborted</code> error code.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_waitable_timer/expires_from_now/overload2.html:            with the <code class="computeroutput">boost::asio::error::operation_aborted</code> error code.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_waitable_timer/expires_from_now/overload3.html:            with the <code class="computeroutput">boost::asio::error::operation_aborted</code> error code.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_waitable_timer/cancel_one/overload2.html:            handler for the cancelled operation will be invoked with the <code class="computeroutput">boost::asio::error::operation_aborted</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_waitable_timer/cancel_one/overload1.html:            handler for the cancelled operation will be invoked with the <code class="computeroutput">boost::asio::error::operation_aborted</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_waitable_timer/basic_waitable_timer.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_waitable_timer/basic_waitable_timer.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_waitable_timer/basic_waitable_timer.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_waitable_timer/cancel/overload2.html:            will be invoked with the <code class="computeroutput">boost::asio::error::operation_aborted</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_waitable_timer/cancel/overload1.html:            will be invoked with the <code class="computeroutput">boost::asio::error::operation_aborted</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_waitable_timer/expires_after.html:          with the <code class="computeroutput">boost::asio::error::operation_aborted</code> error code.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/generic__datagram_protocol.html:<pre class="programlisting">datagram_protocol p(boost::asio::ip::udp::v4());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__tcp/no_delay.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__tcp/no_delay.html:boost::asio::ip::tcp::no_delay option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__tcp/no_delay.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__tcp/no_delay.html:boost::asio::ip::tcp::no_delay option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__tcp/acceptor.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__tcp/acceptor.html:boost::asio::ip::tcp::endpoint endpoint(boost::asio::ip::tcp::v4(), port);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__tcp/acceptor.html:acceptor.set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/spawn/overload6.html:    const boost::asio::io_context::strand &amp; s,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__netdb_errors__gt_.html:<title>boost::system::is_error_code_enum&lt; boost::asio::error::netdb_errors &gt;</title>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__netdb_errors__gt_.html:<link rel="prev" href="is_error_code_enum_lt__misc_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::misc_errors &gt;::value">
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__netdb_errors__gt_.html:<link rel="next" href="is_error_code_enum_lt__netdb_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::netdb_errors &gt;::value">
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__netdb_errors__gt_.html:<a name="boost_asio.reference.is_error_code_enum_lt__netdb_errors__gt_"></a><a class="link" href="is_error_code_enum_lt__netdb_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::netdb_errors &gt;">boost::system::is_error_code_enum&lt;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__netdb_errors__gt_.html:      boost::asio::error::netdb_errors &gt;</a>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__netdb_errors__gt_.html:struct boost::system::is_error_code_enum&lt; boost::asio::error::netdb_errors &gt;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__netdb_errors__gt_.html:                  <a class="link" href="is_error_code_enum_lt__netdb_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::netdb_errors &gt;::value"><span class="bold"><strong>value</strong></span></a>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__addrinfo_errors__gt_/value.html:<title>boost::system::is_error_code_enum&lt; boost::asio::error::addrinfo_errors &gt;::value</title>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__addrinfo_errors__gt_/value.html:<link rel="up" href="../is_error_code_enum_lt__addrinfo_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::addrinfo_errors &gt;">
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__addrinfo_errors__gt_/value.html:<link rel="prev" href="../is_error_code_enum_lt__addrinfo_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::addrinfo_errors &gt;">
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__addrinfo_errors__gt_/value.html:<link rel="next" href="../is_error_code_enum_lt__basic_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::basic_errors &gt;">
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__addrinfo_errors__gt_/value.html:<a name="boost_asio.reference.is_error_code_enum_lt__addrinfo_errors__gt_.value"></a><a class="link" href="value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::addrinfo_errors &gt;::value">boost::system::is_error_code_enum&lt;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__addrinfo_errors__gt_/value.html:        boost::asio::error::addrinfo_errors &gt;::value</a>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ShutdownHandler.html:      this, boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/IteratorConnectHandler.html:    boost::asio::ip::tcp::resolver::iterator iterator)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/IteratorConnectHandler.html:<pre class="programlisting">boost::asio::async_connect(...,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/IteratorConnectHandler.html:      boost::asio::ip::tcp::resolver::iterator iterator)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/IteratorConnectHandler.html:    boost::asio::ip::tcp::resolver::iterator iterator)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/IteratorConnectHandler.html:boost::asio::async_connect(...,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/IteratorConnectHandler.html:    boost::asio::ip::tcp::resolver::iterator iterator)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/IteratorConnectHandler.html:boost::asio::async_connect(...,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/IteratorConnectHandler.html:      this, boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/IteratorConnectHandler.html:      boost::asio::placeholders::iterator));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/transfer_at_least.html:std::size_t n = boost::asio::read(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/transfer_at_least.html:    sock, boost::asio::buffer(buf),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/transfer_at_least.html:    boost::asio::transfer_at_least(64), ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/error__ssl_category.html:<pre class="programlisting">static const boost::system::error_category &amp; ssl_category = boost::asio::error::get_ssl_category();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/mutable_buffers_1/value_type.html:<pre class="programlisting">boost::asio::mutable_buffer b1 = ...;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_iostream/expires_at/overload2.html:            completed using the internal buffers) will fail with the error <code class="computeroutput">boost::asio::error::operation_aborted</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_iostream/expires_from_now/overload2.html:            completed using the internal buffers) will fail with the error <code class="computeroutput">boost::asio::error::operation_aborted</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_iostream/expires_after.html:          the internal buffers) will fail with the error <code class="computeroutput">boost::asio::error::operation_aborted</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__overlapped_handle/overlapped_handle/overload2.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__overlapped_handle/overlapped_handle/overload1.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__overlapped_handle/get_io_context.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_context();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__overlapped_handle/get_io_service.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_service();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__overlapped_handle/close/overload2.html:            <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__overlapped_handle/close/overload1.html:            <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__overlapped_handle/overlapped_handle.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__overlapped_handle/overlapped_handle.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__overlapped_handle/cancel/overload2.html:            be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__overlapped_handle/cancel/overload1.html:            be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ssl__stream.html:<pre class="programlisting">boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ssl__stream.html:boost::asio::ssl::context ctx(boost::asio::ssl::context::sslv23);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ssl__stream.html:boost::asio::ssl::stream&lt;asio:ip::tcp::socket&gt; sock(io_context, ctx);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/const_buffer.html:<pre class="programlisting">boost::asio::const_buffer b1 = ...;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/BufferedHandshakeHandler.html:      this, boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/BufferedHandshakeHandler.html:      boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read/overload2.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read/overload2.html:<pre class="programlisting">boost::asio::async_read(s,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read/overload2.html:    boost::asio::buffer(data, size),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read/overload2.html:    boost::asio::transfer_at_least(32),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read/overload6.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read/overload1.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read/overload1.html:<pre class="programlisting">boost::asio::async_read(s, boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read/overload1.html:<pre class="programlisting">boost::asio::async_read(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read/overload1.html:    boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read/overload4.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read/overload5.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read/overload5.html:<pre class="programlisting">boost::asio::async_read(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read/overload5.html:    boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read/overload3.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read/overload3.html:<pre class="programlisting">boost::asio::async_read(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read/overload3.html:    boost::asio::transfer_all(),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ssl__stream/get_io_context.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_context();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ssl__stream/native_handle.html:<pre class="programlisting">boost::asio::ssl::stream&lt;asio:ip::tcp::socket&gt; sock(io_context, ctx);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ssl__stream/get_io_service.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_service();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffer_sequence_begin.html:The <code class="computeroutput">boost::asio::buffer_sequence_begin</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/reuse_address.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/reuse_address.html:boost::asio::socket_base::reuse_address option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/reuse_address.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/reuse_address.html:boost::asio::socket_base::reuse_address option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/out_of_band_inline.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/out_of_band_inline.html:boost::asio::socket_base::out_of_band_inline option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/out_of_band_inline.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/out_of_band_inline.html:boost::asio::socket_base::out_of_band_inline option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/keep_alive.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/keep_alive.html:boost::asio::socket_base::keep_alive option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/keep_alive.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/keep_alive.html:boost::asio::socket_base::keep_alive option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/linger.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/linger.html:boost::asio::socket_base::linger option(true, 30);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/linger.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/linger.html:boost::asio::socket_base::linger option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/do_not_route.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/do_not_route.html:boost::asio::socket_base::do_not_route option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/do_not_route.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/do_not_route.html:boost::asio::socket_base::do_not_route option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/receive_buffer_size.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/receive_buffer_size.html:boost::asio::socket_base::receive_buffer_size option(8192);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/receive_buffer_size.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/receive_buffer_size.html:boost::asio::socket_base::receive_buffer_size option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/send_low_watermark.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/send_low_watermark.html:boost::asio::socket_base::send_low_watermark option(1024);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/send_low_watermark.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/send_low_watermark.html:boost::asio::socket_base::send_low_watermark option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/receive_low_watermark.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/receive_low_watermark.html:boost::asio::socket_base::receive_low_watermark option(1024);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/receive_low_watermark.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/receive_low_watermark.html:boost::asio::socket_base::receive_low_watermark option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/debug.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/debug.html:boost::asio::socket_base::debug option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/debug.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/debug.html:boost::asio::socket_base::debug option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/broadcast.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/broadcast.html:boost::asio::socket_base::broadcast option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/broadcast.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/broadcast.html:boost::asio::socket_base::broadcast option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/enable_connection_aborted.html:          operation is permitted to fail with <code class="computeroutput">boost::asio::error::connection_aborted</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/enable_connection_aborted.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/enable_connection_aborted.html:boost::asio::socket_base::enable_connection_aborted option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/enable_connection_aborted.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/enable_connection_aborted.html:boost::asio::socket_base::enable_connection_aborted option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/send_buffer_size.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/send_buffer_size.html:boost::asio::socket_base::send_buffer_size option(8192);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/send_buffer_size.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/send_buffer_size.html:boost::asio::socket_base::send_buffer_size option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/bytes_readable.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/socket_base/bytes_readable.html:boost::asio::socket_base::bytes_readable command(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__multicast__hops.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__multicast__hops.html:boost::asio::ip::multicast::hops option(4);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__multicast__hops.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__multicast__hops.html:boost::asio::ip::multicast::hops option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ssl__rfc2818_verification.html:<pre class="programlisting">using boost::asio::ip::tcp;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ssl__rfc2818_verification.html:namespace ssl = boost::asio::ssl;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ssl__rfc2818_verification.html:boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ssl__rfc2818_verification.html:boost::asio::connect(sock.lowest_layer(), resolver.resolve(query));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffer_copy.html:The <code class="computeroutput">boost::asio::buffer_copy</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/async_wait.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/async_wait.html:boost::asio::posix::stream_descriptor descriptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/async_wait.html:    boost::asio::posix::stream_descriptor::wait_read,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/get_io_context.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_context();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/get_io_service.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_service();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/stream_descriptor.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/stream_descriptor.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/async_write_some.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/async_write_some.html:<pre class="programlisting">descriptor.async_write_some(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/release.html:          and the handlers for cancelled operations will be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/close/overload2.html:            with the <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/close/overload1.html:            with the <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/read_some/overload1.html:                  Thrown on failure. An error code of <code class="computeroutput">boost::asio::error::eof</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/read_some/overload1.html:<pre class="programlisting">descriptor.read_some(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/async_read_some.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/async_read_some.html:<pre class="programlisting">descriptor.async_read_some(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/non_blocking/overload2.html:                  fail with <code class="computeroutput">boost::asio::error::would_block</code> if they
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/non_blocking/overload2.html:            operations. Asynchronous operations will never fail with the error <code class="computeroutput">boost::asio::error::would_block</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/non_blocking/overload1.html:            with <code class="computeroutput">boost::asio::error::would_block</code> if they are unable
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/non_blocking/overload1.html:            operations. Asynchronous operations will never fail with the error <code class="computeroutput">boost::asio::error::would_block</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/non_blocking/overload3.html:                  fail with <code class="computeroutput">boost::asio::error::would_block</code> if they
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/non_blocking/overload3.html:            operations. Asynchronous operations will never fail with the error <code class="computeroutput">boost::asio::error::would_block</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/wait/overload2.html:<pre class="programlisting">boost::asio::posix::stream_descriptor descriptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/wait/overload2.html:descriptor.wait(boost::asio::posix::stream_descriptor::wait_read, ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/wait/overload1.html:<pre class="programlisting">boost::asio::posix::stream_descriptor descriptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/wait/overload1.html:descriptor.wait(boost::asio::posix::stream_descriptor::wait_read);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/stream_descriptor/overload2.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/stream_descriptor/overload1.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/cancel/overload2.html:            be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/cancel/overload1.html:            be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/write_some/overload1.html:                  Thrown on failure. An error code of <code class="computeroutput">boost::asio::error::eof</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/write_some/overload1.html:<pre class="programlisting">descriptor.write_some(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/native_non_blocking/overload2.html:                  mode and direct system calls may fail with <code class="computeroutput">boost::asio::error::would_block</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/native_non_blocking/overload2.html:                  this function fails with <code class="computeroutput">boost::asio::error::invalid_argument</code>,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/native_non_blocking/overload1.html:            and direct system calls may fail with <code class="computeroutput">boost::asio::error::would_block</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/native_non_blocking/overload3.html:                  mode and direct system calls may fail with <code class="computeroutput">boost::asio::error::would_block</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/native_non_blocking/overload3.html:                  is <code class="computeroutput">true</code>, this function fails with <code class="computeroutput">boost::asio::error::invalid_argument</code>,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/bytes_readable.html:<pre class="programlisting">boost::asio::posix::stream_descriptor descriptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/bytes_readable.html:boost::asio::descriptor_base::bytes_readable command(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/io_control/overload2.html:<pre class="programlisting">boost::asio::posix::stream_descriptor descriptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/io_control/overload2.html:boost::asio::posix::stream_descriptor::bytes_readable command;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/io_control/overload1.html:<pre class="programlisting">boost::asio::posix::stream_descriptor descriptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__stream_descriptor/io_control/overload1.html:boost::asio::posix::stream_descriptor::bytes_readable command;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/connect/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/connect/overload2.html:boost::asio::ip::tcp::endpoint endpoint(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/connect/overload2.html:    boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/connect/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/connect/overload1.html:boost::asio::ip::tcp::endpoint endpoint(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/connect/overload1.html:    boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/async_send/overload2.html:                  to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/async_send/overload1.html:                  to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/async_send/overload1.html:<pre class="programlisting">socket.async_send(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/reuse_address.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/reuse_address.html:boost::asio::socket_base::reuse_address option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/reuse_address.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/reuse_address.html:boost::asio::socket_base::reuse_address option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/async_wait.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/async_wait.html:boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/async_wait.html:socket.async_wait(boost::asio::ip::tcp::socket::wait_read, wait_handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/out_of_band_inline.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/out_of_band_inline.html:boost::asio::socket_base::out_of_band_inline option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/out_of_band_inline.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/out_of_band_inline.html:boost::asio::socket_base::out_of_band_inline option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/keep_alive.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/keep_alive.html:boost::asio::socket_base::keep_alive option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/keep_alive.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/keep_alive.html:boost::asio::socket_base::keep_alive option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/receive_from/overload1.html:<pre class="programlisting">boost::asio::ip::udp::endpoint sender_endpoint;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/receive_from/overload1.html:    boost::asio::buffer(data, size), sender_endpoint);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/linger.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/linger.html:boost::asio::socket_base::linger option(true, 30);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/linger.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/linger.html:boost::asio::socket_base::linger option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/get_io_context.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_context();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/do_not_route.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/do_not_route.html:boost::asio::socket_base::do_not_route option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/do_not_route.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/do_not_route.html:boost::asio::socket_base::do_not_route option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/async_connect.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/async_connect.html:boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/async_connect.html:boost::asio::ip::tcp::endpoint endpoint(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/async_connect.html:    boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/get_io_service.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_service();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/receive_buffer_size.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/receive_buffer_size.html:boost::asio::socket_base::receive_buffer_size option(8192);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/receive_buffer_size.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/receive_buffer_size.html:boost::asio::socket_base::receive_buffer_size option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/bind/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/bind/overload2.html:socket.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/bind/overload2.html:socket.bind(boost::asio::ip::tcp::endpoint(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/bind/overload2.html:      boost::asio::ip::tcp::v4(), 12345), ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/bind/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/bind/overload1.html:socket.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/bind/overload1.html:socket.bind(boost::asio::ip::tcp::endpoint(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/bind/overload1.html:      boost::asio::ip::tcp::v4(), 12345));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/send_to/overload1.html:<pre class="programlisting">boost::asio::ip::udp::endpoint destination(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/send_to/overload1.html:    boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/send_to/overload1.html:socket.send_to(boost::asio::buffer(data, size), destination);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/open/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/open/overload2.html:socket.open(boost::asio::ip::tcp::v4(), ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/open/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/open/overload1.html:socket.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/close/overload2.html:            with the <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/close/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/close/overload1.html:            with the <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/get_option/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/get_option/overload2.html:boost::asio::ip::tcp::socket::keep_alive option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/get_option/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/get_option/overload1.html:boost::asio::ip::tcp::socket::keep_alive option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/local_endpoint/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/local_endpoint/overload2.html:boost::asio::ip::tcp::endpoint endpoint = socket.local_endpoint(ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/local_endpoint/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/local_endpoint/overload1.html:boost::asio::ip::tcp::endpoint endpoint = socket.local_endpoint();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/basic_raw_socket/overload2.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/basic_raw_socket/overload1.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/basic_raw_socket/overload4.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/basic_raw_socket/overload3.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/send_low_watermark.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/send_low_watermark.html:boost::asio::socket_base::send_low_watermark option(1024);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/send_low_watermark.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/send_low_watermark.html:boost::asio::socket_base::send_low_watermark option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/remote_endpoint/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/remote_endpoint/overload2.html:boost::asio::ip::tcp::endpoint endpoint = socket.remote_endpoint(ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/remote_endpoint/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/remote_endpoint/overload1.html:boost::asio::ip::tcp::endpoint endpoint = socket.remote_endpoint();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/receive_low_watermark.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/receive_low_watermark.html:boost::asio::socket_base::receive_low_watermark option(1024);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/receive_low_watermark.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/receive_low_watermark.html:boost::asio::socket_base::receive_low_watermark option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/non_blocking/overload2.html:                  fail with <code class="computeroutput">boost::asio::error::would_block</code> if they
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/non_blocking/overload2.html:            operations. Asynchronous operations will never fail with the error <code class="computeroutput">boost::asio::error::would_block</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/non_blocking/overload1.html:            <code class="computeroutput">boost::asio::error::would_block</code> if they are unable to perform
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/non_blocking/overload1.html:            operations. Asynchronous operations will never fail with the error <code class="computeroutput">boost::asio::error::would_block</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/non_blocking/overload3.html:                  fail with <code class="computeroutput">boost::asio::error::would_block</code> if they
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/non_blocking/overload3.html:            operations. Asynchronous operations will never fail with the error <code class="computeroutput">boost::asio::error::would_block</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/debug.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/debug.html:boost::asio::socket_base::debug option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/debug.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/debug.html:boost::asio::socket_base::debug option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/wait/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/wait/overload2.html:socket.wait(boost::asio::ip::tcp::socket::wait_read, ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/wait/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/wait/overload1.html:socket.wait(boost::asio::ip::tcp::socket::wait_read);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/async_send_to/overload2.html:                  to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/async_send_to/overload1.html:                  to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/async_send_to/overload1.html:<pre class="programlisting">boost::asio::ip::udp::endpoint destination(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/async_send_to/overload1.html:    boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/async_send_to/overload1.html:    boost::asio::buffer(data, size), destination, handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/send/overload1.html:<pre class="programlisting">socket.send(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/set_option/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/set_option/overload2.html:boost::asio::ip::tcp::no_delay option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/set_option/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/set_option/overload1.html:boost::asio::ip::tcp::no_delay option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/cancel/overload2.html:            will be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/cancel/overload2.html:            Calls to <code class="computeroutput">cancel()</code> will always fail with <code class="computeroutput">boost::asio::error::operation_not_supported</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/cancel/overload1.html:            will be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/cancel/overload1.html:            Calls to <code class="computeroutput">cancel()</code> will always fail with <code class="computeroutput">boost::asio::error::operation_not_supported</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/basic_raw_socket.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/basic_raw_socket.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/basic_raw_socket.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/basic_raw_socket.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/broadcast.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/broadcast.html:boost::asio::socket_base::broadcast option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/broadcast.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/broadcast.html:boost::asio::socket_base::broadcast option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/native_non_blocking/overload2.html:                  mode and direct system calls may fail with <code class="computeroutput">boost::asio::error::would_block</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/native_non_blocking/overload2.html:                  this function fails with <code class="computeroutput">boost::asio::error::invalid_argument</code>,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/native_non_blocking/overload2.html:            boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/native_non_blocking/overload2.html:        if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/native_non_blocking/overload2.html:        if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/native_non_blocking/overload2.html:            || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/native_non_blocking/overload1.html:            direct system calls may fail with <code class="computeroutput">boost::asio::error::would_block</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/native_non_blocking/overload1.html:            boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/native_non_blocking/overload1.html:        if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/native_non_blocking/overload1.html:        if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/native_non_blocking/overload1.html:            || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/native_non_blocking/overload3.html:                  mode and direct system calls may fail with <code class="computeroutput">boost::asio::error::would_block</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/native_non_blocking/overload3.html:                  is <code class="computeroutput">true</code>, this function fails with <code class="computeroutput">boost::asio::error::invalid_argument</code>,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/native_non_blocking/overload3.html:            boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/native_non_blocking/overload3.html:        if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/native_non_blocking/overload3.html:        if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/native_non_blocking/overload3.html:            || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/enable_connection_aborted.html:          operation is permitted to fail with <code class="computeroutput">boost::asio::error::connection_aborted</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/enable_connection_aborted.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/enable_connection_aborted.html:boost::asio::socket_base::enable_connection_aborted option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/enable_connection_aborted.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/enable_connection_aborted.html:boost::asio::socket_base::enable_connection_aborted option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/async_receive_from/overload2.html:                  to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/async_receive_from/overload1.html:                  to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/async_receive_from/overload1.html:    boost::asio::buffer(data, size), 0, sender_endpoint, handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/send_buffer_size.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/send_buffer_size.html:boost::asio::socket_base::send_buffer_size option(8192);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/send_buffer_size.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/send_buffer_size.html:boost::asio::socket_base::send_buffer_size option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/bytes_readable.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/bytes_readable.html:boost::asio::socket_base::bytes_readable command(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/io_control/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/io_control/overload2.html:boost::asio::ip::tcp::socket::bytes_readable command;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/io_control/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/io_control/overload1.html:boost::asio::ip::tcp::socket::bytes_readable command;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/shutdown/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/shutdown/overload2.html:socket.shutdown(boost::asio::ip::tcp::socket::shutdown_send, ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/shutdown/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/shutdown/overload1.html:socket.shutdown(boost::asio::ip::tcp::socket::shutdown_send);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/receive/overload1.html:<pre class="programlisting">socket.receive(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/async_receive/overload2.html:                  to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/async_receive/overload1.html:                  to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/async_receive/overload1.html:<pre class="programlisting">socket.async_receive(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/release/overload2.html:            will be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/release/overload2.html:            and will fail with <code class="computeroutput">boost::asio::error::operation_not_supported</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/release/overload1.html:            will be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_raw_socket/release/overload1.html:            and will fail with <code class="computeroutput">boost::asio::error::operation_not_supported</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_until/overload2.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_until/overload2.html:boost::asio::async_read_until(s, data, "\r\n", handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_until/overload8.html:    boost::asio::basic_streambuf&lt; Allocator &gt; &amp; b,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_until/overload8.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_until/overload8.html:<pre class="programlisting">typedef boost::asio::buffers_iterator&lt;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_until/overload8.html:    boost::asio::streambuf::const_buffers_type&gt; iterator;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_until/overload8.html:boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_until/overload8.html:boost::asio::async_read_until(s, b, match_whitespace, handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_until/overload8.html:boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_until/overload8.html:boost::asio::async_read_until(s, b, match_char('a'), handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_until/overload6.html:    boost::asio::basic_streambuf&lt; Allocator &gt; &amp; b,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_until/overload6.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_until/overload6.html:<pre class="programlisting">boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_until/overload6.html:boost::asio::async_read_until(s, b, "\r\n", handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_until/overload1.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_until/overload1.html:boost::asio::async_read_until(s, data, '\n', handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_until/overload4.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_until/overload4.html:<pre class="programlisting">typedef boost::asio::buffers_iterator&lt;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_until/overload4.html:    boost::asio::const_buffers_1&gt; iterator;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_until/overload4.html:boost::asio::async_read_until(s, data, match_whitespace, handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_until/overload4.html:boost::asio::async_read_until(s, data, match_char('a'), handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_until/overload5.html:    boost::asio::basic_streambuf&lt; Allocator &gt; &amp; b,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_until/overload5.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_until/overload5.html:<pre class="programlisting">boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_until/overload5.html:boost::asio::async_read_until(s, b, '\n', handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_until/overload7.html:    boost::asio::basic_streambuf&lt; Allocator &gt; &amp; b,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_until/overload7.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_until/overload7.html:<pre class="programlisting">boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_until/overload7.html:boost::asio::async_read_until(s, b, boost::regex("\r\n"), handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_until/overload3.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_read_until/overload3.html:boost::asio::async_read_until(s, data,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/WaitHandler.html:      this, boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/streambuf.html:<pre class="programlisting">boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/streambuf.html:<pre class="programlisting">boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/streambuf.html:boost::asio::streambuf::mutable_buffers_type bufs = b.prepare(512);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_waitable_timer.html:boost::asio::steady_timer timer(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_waitable_timer.html:boost::asio::steady_timer timer(io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_waitable_timer.html:  if (e != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_waitable_timer.html:            The <code class="computeroutput">boost::asio::basic_waitable_timer::expires_after()</code> function
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_waitable_timer.html:            to it contains the value <code class="computeroutput">boost::asio::error::operation_aborted</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/write_at/overload2.html:<pre class="programlisting">boost::asio::write_at(d, 42,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/write_at/overload2.html:    boost::asio::buffer(data, size), ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/write_at/overload2.html:<pre class="programlisting">boost::asio::write_at(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/write_at/overload2.html:    boost::asio::transfer_all(), ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/write_at/overload6.html:<pre class="programlisting">boost::asio::write_at(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/write_at/overload6.html:    boost::asio::transfer_all(), ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/write_at/overload1.html:<pre class="programlisting">boost::asio::write_at(d, 42, boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/write_at/overload1.html:<pre class="programlisting">boost::asio::write_at(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/write_at/overload1.html:    boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/write_at/overload5.html:<pre class="programlisting">boost::asio::write_at(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/write_at/overload5.html:    boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/write_at/overload3.html:<pre class="programlisting">boost::asio::write_at(d, 42, boost::asio::buffer(data, size),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/write_at/overload3.html:    boost::asio::transfer_at_least(32));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/add_service.html:<dt><span class="term">boost::asio::service_already_exists</span></dt>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/add_service.html:<dt><span class="term">boost::asio::invalid_service_owner</span></dt>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/error__netdb_category.html:<pre class="programlisting">static const boost::system::error_category &amp; netdb_category = boost::asio::error::get_netdb_category();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/generic__raw_protocol.html:<pre class="programlisting">raw_protocol p(boost::asio::ip::icmp::v4());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_at/overload2.html:<pre class="programlisting">boost::asio::read_at(d, 42,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_at/overload2.html:    boost::asio::buffer(data, size), ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_at/overload2.html:<pre class="programlisting">boost::asio::read_at(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_at/overload2.html:    boost::asio::transfer_all(), ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_at/overload6.html:<pre class="programlisting">boost::asio::read_at(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_at/overload6.html:    boost::asio::transfer_all(), ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_at/overload1.html:<pre class="programlisting">boost::asio::read_at(d, 42, boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_at/overload1.html:<pre class="programlisting">boost::asio::read_at(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_at/overload1.html:    boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_at/overload5.html:<pre class="programlisting">boost::asio::read_at(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_at/overload5.html:    boost::asio::transfer_all());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_at/overload3.html:<pre class="programlisting">boost::asio::read_at(d, 42, boost::asio::buffer(data, size),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_at/overload3.html:    boost::asio::transfer_at_least(32));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__multicast__join_group.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__multicast__join_group.html:boost::asio::ip::address multicast_address =
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__multicast__join_group.html:  boost::asio::ip::address::from_string("225.0.0.1");
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__multicast__join_group.html:boost::asio::ip::multicast::join_group option(multicast_address);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/WriteHandler.html:      this, boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/WriteHandler.html:      boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_context__work/work/overload1.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_context__work/get_io_context.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_context();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_context__work/get_io_service.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_service();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_context__work/work.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/error__system_category.html:<pre class="programlisting">static const boost::system::error_category &amp; system_category = boost::asio::error::get_system_category();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffered_stream/get_io_context.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_context();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffered_stream/get_io_service.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_service();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/mutable_buffer.html:<pre class="programlisting">boost::asio::mutable_buffer b1 = ...;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/placeholders__bytes_transferred.html:        <code class="computeroutput">boost::asio::basic_stream_socket::async_write_some</code> or <code class="computeroutput">boost::asio::async_write</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__object_handle/async_wait.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__object_handle/get_io_context.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_context();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__object_handle/get_io_service.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_service();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__object_handle/close/overload2.html:            <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__object_handle/close/overload1.html:            <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__object_handle/object_handle.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__object_handle/object_handle.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__object_handle/cancel/overload2.html:            be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__object_handle/cancel/overload1.html:            be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__object_handle/object_handle/overload2.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__object_handle/object_handle/overload1.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__address/address.html:    const boost::asio::ip::address_v4 &amp; ipv4_address);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__address/address.html:    const boost::asio::ip::address_v6 &amp; ipv6_address);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__address/address/overload2.html:    const boost::asio::ip::address_v4 &amp; ipv4_address);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__address/address/overload3.html:    const boost::asio::ip::address_v6 &amp; ipv6_address);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__address/operator_eq_.html:    const boost::asio::ip::address_v4 &amp; ipv4_address);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__address/operator_eq_.html:    const boost::asio::ip::address_v6 &amp; ipv6_address);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__address/operator_eq_/overload2.html:    const boost::asio::ip::address_v4 &amp; ipv4_address);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__address/operator_eq_/overload3.html:    const boost::asio::ip::address_v6 &amp; ipv6_address);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__address/to_v4.html:<pre class="programlisting">boost::asio::ip::address_v4 to_v4() const;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__address/to_v6.html:<pre class="programlisting">boost::asio::ip::address_v6 to_v6() const;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffered_read_stream/get_io_context.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_context();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffered_read_stream/get_io_service.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_service();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ReadHandler.html:      this, boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ReadHandler.html:      boost::asio::placeholders::bytes_transferred));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/dynamic_string_buffer/const_buffers_type.html:<pre class="programlisting">boost::asio::const_buffer b1 = ...;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/dynamic_string_buffer/mutable_buffers_type.html:<pre class="programlisting">boost::asio::mutable_buffer b1 = ...;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_deadline_timer/basic_deadline_timer.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_deadline_timer/basic_deadline_timer.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_deadline_timer/basic_deadline_timer.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_deadline_timer/async_wait.html:              code <code class="computeroutput">boost::asio::error::operation_aborted</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_deadline_timer/async_wait.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_deadline_timer/get_io_context.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_context();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_deadline_timer/get_io_service.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_service();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_deadline_timer/expires_at/overload2.html:            with the <code class="computeroutput">boost::asio::error::operation_aborted</code> error code.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_deadline_timer/expires_at/overload3.html:            with the <code class="computeroutput">boost::asio::error::operation_aborted</code> error code.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_deadline_timer/expires_from_now/overload2.html:            with the <code class="computeroutput">boost::asio::error::operation_aborted</code> error code.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_deadline_timer/expires_from_now/overload3.html:            with the <code class="computeroutput">boost::asio::error::operation_aborted</code> error code.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_deadline_timer/cancel_one/overload2.html:            handler for the cancelled operation will be invoked with the <code class="computeroutput">boost::asio::error::operation_aborted</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_deadline_timer/cancel_one/overload1.html:            handler for the cancelled operation will be invoked with the <code class="computeroutput">boost::asio::error::operation_aborted</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_deadline_timer/basic_deadline_timer/overload2.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_deadline_timer/basic_deadline_timer/overload1.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_deadline_timer/basic_deadline_timer/overload3.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_deadline_timer/cancel/overload2.html:            will be invoked with the <code class="computeroutput">boost::asio::error::operation_aborted</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_deadline_timer/cancel/overload1.html:            will be invoked with the <code class="computeroutput">boost::asio::error::operation_aborted</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/steady_timer.html:boost::asio::steady_timer timer(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/steady_timer.html:boost::asio::steady_timer timer(io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/steady_timer.html:  if (e != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/steady_timer.html:            The <code class="computeroutput">boost::asio::basic_waitable_timer::expires_after()</code> function
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/steady_timer.html:            to it contains the value <code class="computeroutput">boost::asio::error::operation_aborted</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffer_sequence_end.html:The <code class="computeroutput">boost::asio::buffer_sequence_end</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__basic_errors__gt_/value.html:<title>boost::system::is_error_code_enum&lt; boost::asio::error::basic_errors &gt;::value</title>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__basic_errors__gt_/value.html:<link rel="up" href="../is_error_code_enum_lt__basic_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::basic_errors &gt;">
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__basic_errors__gt_/value.html:<link rel="prev" href="../is_error_code_enum_lt__basic_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::basic_errors &gt;">
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__basic_errors__gt_/value.html:<link rel="next" href="../is_error_code_enum_lt__misc_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::misc_errors &gt;">
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__basic_errors__gt_/value.html:<a name="boost_asio.reference.is_error_code_enum_lt__basic_errors__gt_.value"></a><a class="link" href="value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::basic_errors &gt;::value">boost::system::is_error_code_enum&lt;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__basic_errors__gt_/value.html:        boost::asio::error::basic_errors &gt;::value</a>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_context/make_service.html:<dt><span class="term">boost::asio::service_already_exists</span></dt>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_context/add_service.html:<dt><span class="term">boost::asio::service_already_exists</span></dt>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_context/add_service.html:<dt><span class="term">boost::asio::invalid_service_owner</span></dt>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/yield_context.html:<link rel="next" href="is_error_code_enum_lt__addrinfo_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::addrinfo_errors &gt;">
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/placeholders__iterator.html:        argument of a handler for asynchronous functions such as <code class="computeroutput">boost::asio::async_connect</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until.html:    boost::asio::basic_streambuf&lt; Allocator &gt; &amp; b,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until.html:    boost::asio::basic_streambuf&lt; Allocator &gt; &amp; b,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until.html:    boost::asio::basic_streambuf&lt; Allocator &gt; &amp; b,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until.html:    boost::asio::basic_streambuf&lt; Allocator &gt; &amp; b,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until.html:    boost::asio::basic_streambuf&lt; Allocator &gt; &amp; b,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until.html:    boost::asio::basic_streambuf&lt; Allocator &gt; &amp; b,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until.html:    boost::asio::basic_streambuf&lt; Allocator &gt; &amp; b,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until.html:    boost::asio::basic_streambuf&lt; Allocator &gt; &amp; b,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_context.html:                  (Deprecated: Use boost::asio::dispatch().) Request the io_context
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_context.html:                  (Deprecated: Use boost::asio::post().) Request the io_context to
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_context.html:                  (Deprecated: Use boost::asio::bind_executor().) Create a new handler
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_context.html:            <code class="computeroutput">boost::asio::ip::tcp::socket</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_context.html:            <code class="computeroutput">boost::asio::ip::tcp::acceptor</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_context.html:            <code class="computeroutput">boost::asio::ip::udp::socket</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_context.html:<pre class="programlisting">boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_context.html:boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_context.html:boost::asio::post(io_context, my_task);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_context.html:boost::asio::post(io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_context.html:        by creating an object of type boost::asio::executor_work_guard&lt;io_context::executor_type&gt;:
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_context.html:<pre class="programlisting">boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_context.html:boost::asio::executor_work_guard&lt;boost::asio::io_context::executor_type&gt;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_context.html:  = boost::asio::make_work_guard(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_context.html:<pre class="programlisting">boost::asio::io_context io_context;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_context.html:boost::asio::executor_work_guard&lt;boost::asio::io_context::executor_type&gt;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_context.html:  = boost::asio::make_work_guard(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/system_timer.html:boost::asio::steady_timer timer(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/system_timer.html:boost::asio::steady_timer timer(io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/system_timer.html:  if (e != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/system_timer.html:            The <code class="computeroutput">boost::asio::basic_waitable_timer::expires_after()</code> function
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/system_timer.html:            to it contains the value <code class="computeroutput">boost::asio::error::operation_aborted</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/Handler.html:<pre class="programlisting">using boost::asio::asio_handler_allocate;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/Handler.html:                  <code class="computeroutput">boost::asio::asio_handler_allocate()</code> serves as a default
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/Handler.html:<pre class="programlisting">using boost::asio::asio_handler_deallocate;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/Handler.html:                  <code class="computeroutput">boost::asio::asio_handler_deallocate()</code> serves as a
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/Handler.html:<pre class="programlisting">using boost::asio::asio_handler_invoke;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/Handler.html:                  <code class="computeroutput">boost::asio::asio_handler_invoke()</code> serves as a default
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/high_resolution_timer.html:boost::asio::steady_timer timer(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/high_resolution_timer.html:boost::asio::steady_timer timer(io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/high_resolution_timer.html:  if (e != boost::asio::error::operation_aborted)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/high_resolution_timer.html:            The <code class="computeroutput">boost::asio::basic_waitable_timer::expires_after()</code> function
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/high_resolution_timer.html:            to it contains the value <code class="computeroutput">boost::asio::error::operation_aborted</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/reuse_address.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/reuse_address.html:boost::asio::socket_base::reuse_address option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/reuse_address.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/reuse_address.html:boost::asio::socket_base::reuse_address option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/async_wait.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/async_wait.html:boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/async_wait.html:    boost::asio::ip::tcp::acceptor::wait_read,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/out_of_band_inline.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/out_of_band_inline.html:boost::asio::socket_base::out_of_band_inline option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/out_of_band_inline.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/out_of_band_inline.html:boost::asio::socket_base::out_of_band_inline option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/keep_alive.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/keep_alive.html:boost::asio::socket_base::keep_alive option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/keep_alive.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/keep_alive.html:boost::asio::socket_base::keep_alive option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/basic_socket_acceptor.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/basic_socket_acceptor.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/basic_socket_acceptor.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/basic_socket_acceptor.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/linger.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/linger.html:boost::asio::socket_base::linger option(true, 30);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/linger.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/linger.html:boost::asio::socket_base::linger option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/get_io_context.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_context();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/do_not_route.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/do_not_route.html:boost::asio::socket_base::do_not_route option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/do_not_route.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/do_not_route.html:boost::asio::socket_base::do_not_route option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/get_io_service.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_service();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/receive_buffer_size.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/receive_buffer_size.html:boost::asio::socket_base::receive_buffer_size option(8192);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/receive_buffer_size.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/receive_buffer_size.html:boost::asio::socket_base::receive_buffer_size option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/bind/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/bind/overload2.html:boost::asio::ip::tcp::endpoint endpoint(boost::asio::ip::tcp::v4(), 12345);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/bind/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/bind/overload1.html:boost::asio::ip::tcp::endpoint endpoint(boost::asio::ip::tcp::v4(), 12345);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/open/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/open/overload2.html:acceptor.open(boost::asio::ip::tcp::v4(), ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/open/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/open/overload1.html:acceptor.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/close/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/get_option/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/get_option/overload2.html:boost::asio::ip::tcp::acceptor::reuse_address option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/get_option/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/get_option/overload1.html:boost::asio::ip::tcp::acceptor::reuse_address option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/async_accept/overload2.html:                  to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/async_accept/overload6.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/async_accept/overload6.html:                  to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/async_accept/overload6.html:    boost::asio::ip::tcp::socket peer)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/async_accept/overload6.html:boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/async_accept/overload6.html:boost::asio::ip::tcp::endpoint endpoint;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/async_accept/overload1.html:                  to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/async_accept/overload1.html:boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/async_accept/overload1.html:boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/async_accept/overload4.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/async_accept/overload4.html:                  to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/async_accept/overload4.html:    boost::asio::ip::tcp::socket peer)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/async_accept/overload4.html:boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/async_accept/overload5.html:                  to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/async_accept/overload5.html:    boost::asio::ip::tcp::socket peer)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/async_accept/overload5.html:boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/async_accept/overload5.html:boost::asio::ip::tcp::endpoint endpoint;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/async_accept/overload3.html:                  to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/async_accept/overload3.html:    boost::asio::ip::tcp::socket peer)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/async_accept/overload3.html:boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/local_endpoint/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/local_endpoint/overload2.html:boost::asio::ip::tcp::endpoint endpoint = acceptor.local_endpoint(ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/local_endpoint/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/local_endpoint/overload1.html:boost::asio::ip::tcp::endpoint endpoint = acceptor.local_endpoint();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/async_accept.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/async_accept.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/send_low_watermark.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/send_low_watermark.html:boost::asio::socket_base::send_low_watermark option(1024);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/send_low_watermark.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/send_low_watermark.html:boost::asio::socket_base::send_low_watermark option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/receive_low_watermark.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/receive_low_watermark.html:boost::asio::socket_base::receive_low_watermark option(1024);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/receive_low_watermark.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/receive_low_watermark.html:boost::asio::socket_base::receive_low_watermark option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/non_blocking/overload2.html:                  fail with <code class="computeroutput">boost::asio::error::would_block</code> if they
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/non_blocking/overload2.html:            operations. Asynchronous operations will never fail with the error <code class="computeroutput">boost::asio::error::would_block</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/non_blocking/overload1.html:            with <code class="computeroutput">boost::asio::error::would_block</code> if they are unable
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/non_blocking/overload1.html:            operations. Asynchronous operations will never fail with the error <code class="computeroutput">boost::asio::error::would_block</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/non_blocking/overload3.html:                  fail with <code class="computeroutput">boost::asio::error::would_block</code> if they
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/non_blocking/overload3.html:            operations. Asynchronous operations will never fail with the error <code class="computeroutput">boost::asio::error::would_block</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/debug.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/debug.html:boost::asio::socket_base::debug option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/debug.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/debug.html:boost::asio::socket_base::debug option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/wait/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/wait/overload2.html:acceptor.wait(boost::asio::ip::tcp::acceptor::wait_read, ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/wait/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/wait/overload1.html:acceptor.wait(boost::asio::ip::tcp::acceptor::wait_read);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/set_option/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/set_option/overload2.html:boost::asio::ip::tcp::acceptor::reuse_address option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/set_option/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/set_option/overload1.html:boost::asio::ip::tcp::acceptor::reuse_address option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/basic_socket_acceptor/overload2.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/basic_socket_acceptor/overload1.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/basic_socket_acceptor/overload4.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/basic_socket_acceptor/overload3.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/cancel/overload2.html:            will be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/cancel/overload1.html:            will be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept/overload9.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept/overload9.html:boost::asio::ip::tcp::endpoint endpoint;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept/overload9.html:boost::asio::ip::tcp::socket socket(acceptor.accept(endpoint));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept/overload2.html:boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept/overload8.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept/overload8.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept/overload8.html:boost::asio::ip::tcp::socket socket(acceptor.accept(io_context2, ec));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept/overload6.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept/overload6.html:boost::asio::ip::tcp::socket socket(acceptor.accept(ec));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept/overload1.html:boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept/overload11.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept/overload11.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept/overload11.html:boost::asio::ip::tcp::endpoint endpoint;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept/overload11.html:boost::asio::ip::tcp::socket socket(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept/overload4.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept/overload4.html:boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept/overload4.html:boost::asio::ip::tcp::endpoint endpoint;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept/overload5.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept/overload5.html:boost::asio::ip::tcp::socket socket(acceptor.accept());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept/overload7.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept/overload7.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept/overload7.html:boost::asio::ip::tcp::socket socket(acceptor.accept());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept/overload3.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept/overload3.html:boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept/overload3.html:boost::asio::ip::tcp::endpoint endpoint;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept/overload12.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept/overload12.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept/overload12.html:boost::asio::ip::tcp::endpoint endpoint;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept/overload12.html:boost::asio::ip::tcp::socket socket(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept/overload10.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept/overload10.html:boost::asio::ip::tcp::endpoint endpoint;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/accept/overload10.html:boost::asio::ip::tcp::socket socket(acceptor.accept(endpoint, ec));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/broadcast.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/broadcast.html:boost::asio::socket_base::broadcast option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/broadcast.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/broadcast.html:boost::asio::socket_base::broadcast option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/native_non_blocking/overload2.html:                  mode and direct system calls may fail with <code class="computeroutput">boost::asio::error::would_block</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/native_non_blocking/overload2.html:                  this function fails with <code class="computeroutput">boost::asio::error::invalid_argument</code>,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/native_non_blocking/overload1.html:            and direct system calls may fail with <code class="computeroutput">boost::asio::error::would_block</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/native_non_blocking/overload3.html:                  mode and direct system calls may fail with <code class="computeroutput">boost::asio::error::would_block</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/native_non_blocking/overload3.html:                  is <code class="computeroutput">true</code>, this function fails with <code class="computeroutput">boost::asio::error::invalid_argument</code>,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/listen/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/listen/overload2.html:acceptor.listen(boost::asio::socket_base::max_listen_connections, ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/enable_connection_aborted.html:          operation is permitted to fail with <code class="computeroutput">boost::asio::error::connection_aborted</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/enable_connection_aborted.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/enable_connection_aborted.html:boost::asio::socket_base::enable_connection_aborted option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/enable_connection_aborted.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/enable_connection_aborted.html:boost::asio::socket_base::enable_connection_aborted option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/send_buffer_size.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/send_buffer_size.html:boost::asio::socket_base::send_buffer_size option(8192);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/send_buffer_size.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/send_buffer_size.html:boost::asio::socket_base::send_buffer_size option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/bytes_readable.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/bytes_readable.html:boost::asio::socket_base::bytes_readable command(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/io_control/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/io_control/overload2.html:boost::asio::ip::tcp::acceptor::non_blocking_io command(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/io_control/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/io_control/overload1.html:boost::asio::ip::tcp::acceptor::non_blocking_io command(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/release/overload2.html:            passed the <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/release/overload2.html:            and will fail with <code class="computeroutput">boost::asio::error::operation_not_supported</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/release/overload1.html:            passed the <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_socket_acceptor/release/overload1.html:            and will fail with <code class="computeroutput">boost::asio::error::operation_not_supported</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/system_context/make_service.html:<dt><span class="term">boost::asio::service_already_exists</span></dt>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/system_context/add_service.html:<dt><span class="term">boost::asio::service_already_exists</span></dt>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/system_context/add_service.html:<dt><span class="term">boost::asio::invalid_service_owner</span></dt>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ssl__error__stream_category.html:<pre class="programlisting">static const boost::system::error_category &amp; stream_category = boost::asio::ssl::error::get_stream_category();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_connect/overload2.html:  // boost::asio::error::not_found. Otherwise, contains the
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_connect/overload2.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_connect/overload2.html:          types such as <code class="computeroutput">boost::asio::ip::tcp::resolver::iterator</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_connect/overload6.html:  // boost::asio::error::not_found. Otherwise, contains the
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_connect/overload6.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_connect/overload6.html:          It would be used with the <code class="computeroutput">boost::asio::connect</code> function as
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_connect/overload6.html:    boost::asio::async_connect(s, i, end,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_connect/overload1.html:  // boost::asio::error::not_found. Otherwise, contains the
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_connect/overload1.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_connect/overload1.html:    boost::asio::async_connect(s, results, connect_handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_connect/overload4.html:  // boost::asio::error::not_found. Otherwise, contains the
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_connect/overload4.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_connect/overload4.html:          It would be used with the <code class="computeroutput">boost::asio::connect</code> function as
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_connect/overload4.html:    boost::asio::async_connect(s, results,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_connect/overload5.html:  // boost::asio::error::not_found. Otherwise, contains the
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_connect/overload5.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_connect/overload5.html:          types such as <code class="computeroutput">boost::asio::ip::tcp::resolver::iterator</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_connect/overload3.html:  // boost::asio::error::not_found. Otherwise, contains the
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_connect/overload3.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_connect/overload3.html:boost::asio::async_connect(s,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/SignalHandler.html:      this, boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/SignalHandler.html:      boost::asio::placeholders::signal_number));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ConnectHandler.html:      this, boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor_base/bytes_readable.html:<pre class="programlisting">boost::asio::posix::stream_descriptor descriptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/posix__descriptor_base/bytes_readable.html:boost::asio::descriptor_base::bytes_readable command(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/transfer_all.html:std::size_t n = boost::asio::read(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/transfer_all.html:    sock, boost::asio::buffer(buf),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/transfer_all.html:    boost::asio::transfer_all(), ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffered_write_stream/get_io_context.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_context();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/buffered_write_stream/get_io_service.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_service();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/MoveAcceptHandler.html:    const boost::system::error_code&amp; ec, boost::asio::ip::tcp::socket s)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/MoveAcceptHandler.html:      const boost::system::error_code&amp; ec, boost::asio::ip::tcp::socket s)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/MoveAcceptHandler.html:    [](const boost::system::error_code&amp; ec, boost::asio::ip::tcp::socket s)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/MoveAcceptHandler.html:    const boost::system::error_code&amp; ec, boost::asio::ip::tcp::socket socket)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/MoveAcceptHandler.html:boost::asio::async_accept(...,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ResolveHandler.html:    boost::asio::ip::tcp::resolver::results_type results)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ResolveHandler.html:      boost::asio::ip::tcp::resolver::results_type results)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ResolveHandler.html:      boost::asio::ip::tcp::resolver::results_type results)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ResolveHandler.html:    boost::asio::ip::tcp::resolver::results_type results)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ResolveHandler.html:    boost::asio::ip::tcp::resolver::results_type results)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ResolveHandler.html:      this, boost::asio::placeholders::error,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ResolveHandler.html:      boost::asio::placeholders::results));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__stream_handle/get_io_context.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_context();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__stream_handle/stream_handle.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__stream_handle/stream_handle.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__stream_handle/get_io_service.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_service();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__stream_handle/async_write_some.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__stream_handle/async_write_some.html:<pre class="programlisting">handle.async_write_some(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__stream_handle/stream_handle/overload2.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__stream_handle/stream_handle/overload1.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__stream_handle/close/overload2.html:            <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__stream_handle/close/overload1.html:            <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__stream_handle/read_some/overload1.html:                  Thrown on failure. An error code of <code class="computeroutput">boost::asio::error::eof</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__stream_handle/read_some/overload1.html:<pre class="programlisting">handle.read_some(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__stream_handle/async_read_some.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__stream_handle/async_read_some.html:<pre class="programlisting">handle.async_read_some(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__stream_handle/cancel/overload2.html:            be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__stream_handle/cancel/overload1.html:            be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__stream_handle/write_some/overload1.html:                  Thrown on failure. An error code of <code class="computeroutput">boost::asio::error::eof</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__stream_handle/write_some/overload1.html:<pre class="programlisting">handle.write_some(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/thread_pool/make_service.html:<dt><span class="term">boost::asio::service_already_exists</span></dt>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/thread_pool/add_service.html:<dt><span class="term">boost::asio::service_already_exists</span></dt>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/thread_pool/add_service.html:<dt><span class="term">boost::asio::invalid_service_owner</span></dt>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_write_at/overload2.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_write_at/overload2.html:<pre class="programlisting">boost::asio::async_write_at(d, 42,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_write_at/overload2.html:    boost::asio::buffer(data, size),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_write_at/overload2.html:    boost::asio::transfer_at_least(32),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_write_at/overload1.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_write_at/overload1.html:<pre class="programlisting">boost::asio::async_write_at(d, 42, boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_write_at/overload4.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/async_write_at/overload3.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/signal_set.html:boost::asio::signal_set signals(io_context, SIGINT, SIGTERM);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ConstBufferSequence.html:                  <code class="computeroutput">boost::asio::buffer_sequence_begin(x)</code><br> <code class="computeroutput">boost::asio::buffer_sequence_end(x)</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ConstBufferSequence.html:  boost::asio::buffer_sequence_begin(x),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ConstBufferSequence.html:  boost::asio::buffer_sequence_end(x),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ConstBufferSequence.html:  boost::asio::buffer_sequence_begin(u),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ConstBufferSequence.html:  boost::asio::buffer_sequence_end(u),
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/connect/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/connect/overload2.html:boost::asio::ip::tcp::endpoint endpoint(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/connect/overload2.html:    boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/connect/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/connect/overload1.html:boost::asio::ip::tcp::endpoint endpoint(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/connect/overload1.html:    boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/async_send/overload2.html:                  to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/async_send/overload1.html:                  to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/async_send/overload1.html:<pre class="programlisting">socket.async_send(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/reuse_address.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/reuse_address.html:boost::asio::socket_base::reuse_address option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/reuse_address.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/reuse_address.html:boost::asio::socket_base::reuse_address option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/async_wait.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/async_wait.html:boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/async_wait.html:socket.async_wait(boost::asio::ip::tcp::socket::wait_read, wait_handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/out_of_band_inline.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/out_of_band_inline.html:boost::asio::socket_base::out_of_band_inline option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/out_of_band_inline.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/out_of_band_inline.html:boost::asio::socket_base::out_of_band_inline option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/keep_alive.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/keep_alive.html:boost::asio::socket_base::keep_alive option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/keep_alive.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/keep_alive.html:boost::asio::socket_base::keep_alive option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/receive_from/overload1.html:<pre class="programlisting">boost::asio::ip::udp::endpoint sender_endpoint;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/receive_from/overload1.html:    boost::asio::buffer(data, size), sender_endpoint);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/linger.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/linger.html:boost::asio::socket_base::linger option(true, 30);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/linger.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/linger.html:boost::asio::socket_base::linger option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/get_io_context.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_context();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/do_not_route.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/do_not_route.html:boost::asio::socket_base::do_not_route option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/do_not_route.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/do_not_route.html:boost::asio::socket_base::do_not_route option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/async_connect.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/async_connect.html:boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/async_connect.html:boost::asio::ip::tcp::endpoint endpoint(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/async_connect.html:    boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/get_io_service.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_service();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/receive_buffer_size.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/receive_buffer_size.html:boost::asio::socket_base::receive_buffer_size option(8192);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/receive_buffer_size.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/receive_buffer_size.html:boost::asio::socket_base::receive_buffer_size option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/bind/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/bind/overload2.html:socket.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/bind/overload2.html:socket.bind(boost::asio::ip::tcp::endpoint(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/bind/overload2.html:      boost::asio::ip::tcp::v4(), 12345), ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/bind/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/bind/overload1.html:socket.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/bind/overload1.html:socket.bind(boost::asio::ip::tcp::endpoint(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/bind/overload1.html:      boost::asio::ip::tcp::v4(), 12345));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/send_to/overload1.html:<pre class="programlisting">boost::asio::ip::udp::endpoint destination(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/send_to/overload1.html:    boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/send_to/overload1.html:socket.send_to(boost::asio::buffer(data, size), destination);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/open/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/open/overload2.html:socket.open(boost::asio::ip::tcp::v4(), ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/open/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/open/overload1.html:socket.open(boost::asio::ip::tcp::v4());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/close/overload2.html:            with the <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/close/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/close/overload1.html:            with the <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/get_option/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/get_option/overload2.html:boost::asio::ip::tcp::socket::keep_alive option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/get_option/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/get_option/overload1.html:boost::asio::ip::tcp::socket::keep_alive option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/local_endpoint/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/local_endpoint/overload2.html:boost::asio::ip::tcp::endpoint endpoint = socket.local_endpoint(ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/local_endpoint/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/local_endpoint/overload1.html:boost::asio::ip::tcp::endpoint endpoint = socket.local_endpoint();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/send_low_watermark.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/send_low_watermark.html:boost::asio::socket_base::send_low_watermark option(1024);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/send_low_watermark.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/send_low_watermark.html:boost::asio::socket_base::send_low_watermark option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/remote_endpoint/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/remote_endpoint/overload2.html:boost::asio::ip::tcp::endpoint endpoint = socket.remote_endpoint(ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/remote_endpoint/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/remote_endpoint/overload1.html:boost::asio::ip::tcp::endpoint endpoint = socket.remote_endpoint();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/receive_low_watermark.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/receive_low_watermark.html:boost::asio::socket_base::receive_low_watermark option(1024);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/receive_low_watermark.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/receive_low_watermark.html:boost::asio::socket_base::receive_low_watermark option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/non_blocking/overload2.html:                  fail with <code class="computeroutput">boost::asio::error::would_block</code> if they
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/non_blocking/overload2.html:            operations. Asynchronous operations will never fail with the error <code class="computeroutput">boost::asio::error::would_block</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/non_blocking/overload1.html:            <code class="computeroutput">boost::asio::error::would_block</code> if they are unable to perform
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/non_blocking/overload1.html:            operations. Asynchronous operations will never fail with the error <code class="computeroutput">boost::asio::error::would_block</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/non_blocking/overload3.html:                  fail with <code class="computeroutput">boost::asio::error::would_block</code> if they
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/non_blocking/overload3.html:            operations. Asynchronous operations will never fail with the error <code class="computeroutput">boost::asio::error::would_block</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/debug.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/debug.html:boost::asio::socket_base::debug option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/debug.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/debug.html:boost::asio::socket_base::debug option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/wait/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/wait/overload2.html:socket.wait(boost::asio::ip::tcp::socket::wait_read, ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/wait/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/wait/overload1.html:socket.wait(boost::asio::ip::tcp::socket::wait_read);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/async_send_to/overload2.html:                  to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/async_send_to/overload1.html:                  to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/async_send_to/overload1.html:<pre class="programlisting">boost::asio::ip::udp::endpoint destination(
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/async_send_to/overload1.html:    boost::asio::ip::address::from_string("1.2.3.4"), 12345);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/async_send_to/overload1.html:    boost::asio::buffer(data, size), destination, handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/send/overload1.html:<pre class="programlisting">socket.send(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/set_option/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/set_option/overload2.html:boost::asio::ip::tcp::no_delay option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/set_option/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/set_option/overload1.html:boost::asio::ip::tcp::no_delay option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/cancel/overload2.html:            will be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/cancel/overload2.html:            Calls to <code class="computeroutput">cancel()</code> will always fail with <code class="computeroutput">boost::asio::error::operation_not_supported</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/cancel/overload1.html:            will be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/cancel/overload1.html:            Calls to <code class="computeroutput">cancel()</code> will always fail with <code class="computeroutput">boost::asio::error::operation_not_supported</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/broadcast.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/broadcast.html:boost::asio::socket_base::broadcast option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/broadcast.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/broadcast.html:boost::asio::socket_base::broadcast option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/native_non_blocking/overload2.html:                  mode and direct system calls may fail with <code class="computeroutput">boost::asio::error::would_block</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/native_non_blocking/overload2.html:                  this function fails with <code class="computeroutput">boost::asio::error::invalid_argument</code>,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/native_non_blocking/overload2.html:            boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/native_non_blocking/overload2.html:        if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/native_non_blocking/overload2.html:        if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/native_non_blocking/overload2.html:            || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/native_non_blocking/overload1.html:            direct system calls may fail with <code class="computeroutput">boost::asio::error::would_block</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/native_non_blocking/overload1.html:            boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/native_non_blocking/overload1.html:        if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/native_non_blocking/overload1.html:        if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/native_non_blocking/overload1.html:            || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/native_non_blocking/overload3.html:                  mode and direct system calls may fail with <code class="computeroutput">boost::asio::error::would_block</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/native_non_blocking/overload3.html:                  is <code class="computeroutput">true</code>, this function fails with <code class="computeroutput">boost::asio::error::invalid_argument</code>,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/native_non_blocking/overload3.html:            boost::asio::error::get_system_category());
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/native_non_blocking/overload3.html:        if (ec == boost::asio::error::interrupted)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/native_non_blocking/overload3.html:        if (ec == boost::asio::error::would_block
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/native_non_blocking/overload3.html:            || ec == boost::asio::error::try_again)
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/enable_connection_aborted.html:          operation is permitted to fail with <code class="computeroutput">boost::asio::error::connection_aborted</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/enable_connection_aborted.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/enable_connection_aborted.html:boost::asio::socket_base::enable_connection_aborted option(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/enable_connection_aborted.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/enable_connection_aborted.html:boost::asio::socket_base::enable_connection_aborted option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/async_receive_from/overload2.html:                  to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/async_receive_from/overload1.html:                  to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/async_receive_from/overload1.html:    boost::asio::buffer(data, size), sender_endpoint, handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/send_buffer_size.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/send_buffer_size.html:boost::asio::socket_base::send_buffer_size option(8192);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/send_buffer_size.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/send_buffer_size.html:boost::asio::socket_base::send_buffer_size option;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/basic_datagram_socket/overload2.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/basic_datagram_socket/overload1.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/basic_datagram_socket/overload4.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/basic_datagram_socket/overload3.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/bytes_readable.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/bytes_readable.html:boost::asio::socket_base::bytes_readable command(true);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/io_control/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/io_control/overload2.html:boost::asio::ip::tcp::socket::bytes_readable command;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/io_control/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/io_control/overload1.html:boost::asio::ip::tcp::socket::bytes_readable command;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/shutdown/overload2.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/shutdown/overload2.html:socket.shutdown(boost::asio::ip::tcp::socket::shutdown_send, ec);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/shutdown/overload1.html:<pre class="programlisting">boost::asio::ip::tcp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/shutdown/overload1.html:socket.shutdown(boost::asio::ip::tcp::socket::shutdown_send);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/receive/overload1.html:<pre class="programlisting">socket.receive(boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/async_receive/overload2.html:                  to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/async_receive/overload1.html:                  to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/async_receive/overload1.html:<pre class="programlisting">socket.async_receive(boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/release/overload2.html:            will be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/release/overload2.html:            and will fail with <code class="computeroutput">boost::asio::error::operation_not_supported</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/release/overload1.html:            will be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/release/overload1.html:            and will fail with <code class="computeroutput">boost::asio::error::operation_not_supported</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/basic_datagram_socket.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/basic_datagram_socket.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/basic_datagram_socket.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_datagram_socket/basic_datagram_socket.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_.html:<title>boost::system::is_error_code_enum&lt; boost::asio::ssl::error::stream_errors &gt;</title>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_.html:<link rel="prev" href="is_error_code_enum_lt__ssl_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::ssl_errors &gt;::value">
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_.html:<link rel="next" href="is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::ssl::error::stream_errors &gt;::value">
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_.html:<a name="boost_asio.reference.is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_"></a><a class="link" href="is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::ssl::error::stream_errors &gt;">boost::system::is_error_code_enum&lt;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_.html:      boost::asio::ssl::error::stream_errors &gt;</a>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_.html:struct boost::system::is_error_code_enum&lt; boost::asio::ssl::error::stream_errors &gt;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_.html:                  <a class="link" href="is_error_code_enum_lt__boost__asio__ssl__error__stream_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::ssl::error::stream_errors &gt;::value"><span class="bold"><strong>value</strong></span></a>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/local__stream_protocol/acceptor.html:<pre class="programlisting">boost::asio::ip::tcp::acceptor acceptor(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/local__stream_protocol/acceptor.html:boost::asio::ip::tcp::endpoint endpoint(boost::asio::ip::tcp::v4(), port);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/local__stream_protocol/acceptor.html:acceptor.set_option(boost::asio::ip::tcp::acceptor::reuse_address(true));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__multicast__outbound_interface.html:<pre class="programlisting">boost::asio::ip::udp::socket socket(io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__multicast__outbound_interface.html:boost::asio::ip::address_v4 local_interface =
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__multicast__outbound_interface.html:  boost::asio::ip::address_v4::from_string("1.2.3.4");
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__multicast__outbound_interface.html:boost::asio::ip::multicast::outbound_interface option(local_interface);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__misc_errors__gt_/value.html:<title>boost::system::is_error_code_enum&lt; boost::asio::error::misc_errors &gt;::value</title>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__misc_errors__gt_/value.html:<link rel="up" href="../is_error_code_enum_lt__misc_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::misc_errors &gt;">
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__misc_errors__gt_/value.html:<link rel="prev" href="../is_error_code_enum_lt__misc_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::misc_errors &gt;">
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__misc_errors__gt_/value.html:<link rel="next" href="../is_error_code_enum_lt__netdb_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::netdb_errors &gt;">
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__misc_errors__gt_/value.html:<a name="boost_asio.reference.is_error_code_enum_lt__misc_errors__gt_.value"></a><a class="link" href="value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::misc_errors &gt;::value">boost::system::is_error_code_enum&lt;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__misc_errors__gt_/value.html:        boost::asio::error::misc_errors &gt;::value</a>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/HandshakeHandler.html:      this, boost::asio::placeholders::error));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until/overload15.html:    boost::asio::basic_streambuf&lt; Allocator &gt; &amp; b,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until/overload15.html:<pre class="programlisting">typedef boost::asio::buffers_iterator&lt;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until/overload15.html:    boost::asio::streambuf::const_buffers_type&gt; iterator;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until/overload15.html:boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until/overload15.html:boost::asio::read_until(s, b, match_whitespace);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until/overload15.html:boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until/overload15.html:boost::asio::read_until(s, b, match_char('a'));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until/overload9.html:    boost::asio::basic_streambuf&lt; Allocator &gt; &amp; b,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until/overload9.html:<pre class="programlisting">boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until/overload9.html:boost::asio::read_until(s, b, '\n');
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until/overload16.html:    boost::asio::basic_streambuf&lt; Allocator &gt; &amp; b,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until/overload1.html:std::string n = boost::asio::read_until(s,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until/overload1.html:    boost::asio::dynamic_buffer(data), '\n');
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until/overload11.html:    boost::asio::basic_streambuf&lt; Allocator &gt; &amp; b,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until/overload11.html:<pre class="programlisting">boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until/overload11.html:boost::asio::read_until(s, b, "\r\n");
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until/overload13.html:    boost::asio::basic_streambuf&lt; Allocator &gt; &amp; b,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until/overload13.html:<pre class="programlisting">boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until/overload13.html:boost::asio::read_until(s, b, boost::regex("\r\n"));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until/overload14.html:    boost::asio::basic_streambuf&lt; Allocator &gt; &amp; b,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until/overload5.html:std::string n = boost::asio::read_until(s,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until/overload5.html:    boost::asio::dynamic_buffer(data), boost::regex("\r\n"));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until/overload7.html:<pre class="programlisting">typedef boost::asio::buffers_iterator&lt;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until/overload7.html:    boost::asio::const_buffers_1&gt; iterator;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until/overload7.html:boost::asio::read_until(s, data, match_whitespace);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until/overload7.html:boost::asio::read_until(s, data, match_char('a'));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until/overload3.html:std::string n = boost::asio::read_until(s,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until/overload3.html:    boost::asio::dynamic_buffer(data), "\r\n");
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until/overload12.html:    boost::asio::basic_streambuf&lt; Allocator &gt; &amp; b,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/read_until/overload10.html:    boost::asio::basic_streambuf&lt; Allocator &gt; &amp; b,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_context__service/get_io_context.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_context();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_context__service/get_io_service.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_service();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/io_context__service/service.html:    boost::asio::io_context &amp; owner);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/thread_pool.html:boost::asio::thread_pool pool(4);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/thread_pool.html:boost::asio::post(pool, my_task);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/thread_pool.html:boost::asio::post(pool,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_streambuf_ref/const_buffers_type.html:<pre class="programlisting">boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_streambuf_ref/const_buffers_type.html:<pre class="programlisting">boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_streambuf_ref/const_buffers_type.html:boost::asio::streambuf::mutable_buffers_type bufs = b.prepare(512);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_streambuf_ref/mutable_buffers_type.html:<pre class="programlisting">boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_streambuf_ref/mutable_buffers_type.html:<pre class="programlisting">boost::asio::streambuf b;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_streambuf_ref/mutable_buffers_type.html:boost::asio::streambuf::mutable_buffers_type bufs = b.prepare(512);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__random_access_handle/random_access_handle/overload2.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__random_access_handle/random_access_handle/overload1.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__random_access_handle/async_write_some_at.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__random_access_handle/async_write_some_at.html:<pre class="programlisting">handle.async_write_some_at(42, boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__random_access_handle/get_io_context.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_context();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__random_access_handle/get_io_service.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_service();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__random_access_handle/close/overload2.html:            <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__random_access_handle/close/overload1.html:            <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__random_access_handle/random_access_handle.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__random_access_handle/random_access_handle.html:    boost::asio::io_context &amp; io_context,
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__random_access_handle/cancel/overload2.html:            be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__random_access_handle/cancel/overload1.html:            be passed the <code class="computeroutput">boost::asio::error::operation_aborted</code> error.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__random_access_handle/read_some_at/overload1.html:                  Thrown on failure. An error code of <code class="computeroutput">boost::asio::error::eof</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__random_access_handle/read_some_at/overload1.html:<pre class="programlisting">handle.read_some_at(42, boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__random_access_handle/write_some_at/overload1.html:                  Thrown on failure. An error code of <code class="computeroutput">boost::asio::error::eof</code>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__random_access_handle/write_some_at/overload1.html:<pre class="programlisting">handle.write_some_at(42, boost::asio::buffer(data, size));
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__random_access_handle/async_read_some_at.html:                to using <code class="computeroutput">boost::asio::io_context::post()</code>.
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/windows__random_access_handle/async_read_some_at.html:<pre class="programlisting">handle.async_read_some_at(42, boost::asio::buffer(data, size), handler);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_io_object/executor_type.html:<pre class="programlisting">typedef boost::asio::io_context::executor_type executor_type;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_io_object/get_io_context.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_context();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_io_object/get_io_service.html:<pre class="programlisting">boost::asio::io_context &amp; get_io_service();
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_io_object/basic_io_object.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/basic_io_object/basic_io_object/overload1.html:    boost::asio::io_context &amp; io_context);
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/ip__basic_resolver_query/hints.html:<pre class="programlisting">const boost::asio::detail::addrinfo_type &amp; hints() const;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__misc_errors__gt_.html:<title>boost::system::is_error_code_enum&lt; boost::asio::error::misc_errors &gt;</title>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__misc_errors__gt_.html:<link rel="prev" href="is_error_code_enum_lt__basic_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::basic_errors &gt;::value">
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__misc_errors__gt_.html:<link rel="next" href="is_error_code_enum_lt__misc_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::misc_errors &gt;::value">
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__misc_errors__gt_.html:<a name="boost_asio.reference.is_error_code_enum_lt__misc_errors__gt_"></a><a class="link" href="is_error_code_enum_lt__misc_errors__gt_.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::misc_errors &gt;">boost::system::is_error_code_enum&lt;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__misc_errors__gt_.html:      boost::asio::error::misc_errors &gt;</a>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__misc_errors__gt_.html:struct boost::system::is_error_code_enum&lt; boost::asio::error::misc_errors &gt;
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/is_error_code_enum_lt__misc_errors__gt_.html:                  <a class="link" href="is_error_code_enum_lt__misc_errors__gt_/value.html" title="boost::system::is_error_code_enum&lt; boost::asio::error::misc_errors &gt;::value"><span class="bold"><strong>value</strong></span></a>
/home/kaworu/boost_1_69_0/doc/html/boost_asio/reference/error__addrinfo_category.html:<pre class="programlisting">static const boost::system::error_category &amp; addrinfo_category = boost::asio::error::get_addrinfo_category();
/home/kaworu/boost_1_69_0/doc/html/process/reference.html:<p>The header which provides the basic asynchrounous features. It provides the on_exit property, which allows callbacks when the process exits. It also implements the necessary traits for passing an boost::asio::io_context, which is needed for asynchronous communication.</p>
/home/kaworu/boost_1_69_0/doc/html/process/reference.html:<p>It also pulls the <a href="http://www.boost.org/doc/libs/release/doc/html/boost_asio/reference/buffer.html" target="_top">boost::asio::buffer</a> into the boost::process namespace for convenience.</p>
